<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-0.100000001</X>
				<Y>-0.100000001</Y>
				<Z>0</Z>
				<R00>0</R00>
				<R01>0</R01>
				<R02>-1</R02>
				<R10>-1</R10>
				<R11>0</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<string name="Name">BuildInsert</string>
			<Content name="TextureId"><url>rbxasset://icons/insert_sel.png</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="LocalScript" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><binary>JWl6azFqVzRBc2FZMG5RWVFrdUY2SnJiTklOdEtFS1d3d256enZGVnV0bHV3eURBZ0wvTnow
Wit2aDZZYnVxTElxN2czZkpJTGtjU2xEM0R4MFpyeThxVXV2VFFlTDZvWS9mS1orem1vTmUw
dldObEl0ZGFHZGpHbVBJWmN0SFVMSDI1Z08rb28rN2NsZGs3S0I1WGdPY0trZUx3YVlESmwx
MXo0cEorckFiND0lJTQxMzgzMTczJWxvY2FsIFRvb2wgPSBzY3JpcHQuUGFyZW50DQogDQpl
bmFibGVkID0gdHJ1ZQ0KbG9jYWwgb3JpZ1RleHR1cmUgPSAJVG9vbC5UZXh0dXJlSWQNCmdh
bWU6R2V0U2VydmljZSgiQ29udGVudFByb3ZpZGVyIik6UHJlbG9hZCgicmJ4YXNzZXQ6Ly9p
Y29ucy9pbnNlcnRfc2VsLnBuZyIpDQotLWZvbyBiYXIgZm9vIGJhciBmb28gYmFyIDEyMzQ1
NTY4MjkwMzU4MDkxMjM4NjUwOTEzODA0OTgxMzA5NDgyMzEwOTQ4MjMxMDk0ODMwOTE0OA0K
bG9jYWwgaGVpZ2h0ID0gMjANCmxvY2FsIHdpZHRoID0gVURpbS5uZXcoMC4yNSwgMCkNCmxv
Y2FsIGhlaWdodCA9IDIwDQpsb2NhbCBidXR0b25UcmFuc3BhcmVuY3kgPSAwLjENCmxvY2Fs
IGluc2VydEJ1dHRvblRyYW5zcGFyZW5jeSA9IDAuMjUNCmxvY2FsIHRyYW5zcGFyZW5jeSA9
IDAuMjUNCg0KbG9jYWwgZnJlZUluZGV4ID0gMQ0KbG9jYWwgZnJlZVZpZXdpbmcgPSBmYWxz
ZQ0KbG9jYWwgdmlld2luZ01vZGVscyA9IGZhbHNlDQpsb2NhbCBjdXJyZW50U2VhcmNoVGV4
dCA9ICIiDQpsb2NhbCBmcmVlTW9kZWxzDQpsb2NhbCBmcmVlU2V0cw0KDQpsb2NhbCBsb2Fk
aW5nID0gZmFsc2UNCg0KbG9jYWwgZHJvcERvd25TZWxlY3RlZCA9IGZhbHNlDQoNCmxvY2Fs
IHNlbGVjdGVkQnV0dG9uQ29sb3IgPSBDb2xvcjMubmV3KC4xMjU1LCAuNDA3OCwgLjE5NjEp
DQpsb2NhbCBzZWxlY3RlZEJ1dHRvblRleHRDb2xvciA9IENvbG9yMy5uZXcoMS4wLDEuMCwx
LjApDQoNCmxvY2FsIGJ1dHRvbkNvbG9yID0gQ29sb3IzLm5ldygwLjA4OTgsIDAuMjE0OCwg
LjIzNDQpDQpsb2NhbCBidXR0b25UZXh0Q29sb3IgPSBDb2xvcjMubmV3KDEuMCwxLjAsMS4w
KQ0KDQpsb2NhbCBmcmFtZUNvbG9yID0gQ29sb3IzLm5ldyguMTI1NSwgLjQwNzgsIC4xOTYx
KQ0KbG9jYWwgZnJhbWVUZXh0Q29sb3IgPSBDb2xvcjMubmV3KDEuMCwxLjAsMS4wKQ0KDQps
b2NhbCB0aXRsZUNvbG9yID0gQ29sb3IzLm5ldygwLjYyODksIDAuODM5OCwgMCkNCmxvY2Fs
IHRpdGxlVGV4dENvbG9yID0gQ29sb3IzLm5ldygwLDAsMCkNCg0KbG9jYWwgV2luZG93DQps
b2NhbCBEYXRhDQpsb2NhbCBNb3VzZQ0KDQpsb2NhbCBTZXRDYWNoZSA9IHt9DQoNCmxvY2Fs
IHNvbG9HYW1lID0gZ2FtZTpGaW5kRmlyc3RDaGlsZCgiTmV0d29ya0NsaWVudCIpID09IG5p
bA0KDQotLUNvbnN0YW50cw0KbG9jYWwgdXNlQXNzZXRWZXJzaW9uSWQgPSB0cnVlDQpsb2Nh
bCBCYXNlVXJsID0gZ2FtZTpHZXRTZXJ2aWNlKCJDb250ZW50UHJvdmlkZXIiKS5CYXNlVXJs
DQpsb2NhbCBUaHVtYm5haWxVcmw7DQppZiB1c2VBc3NldFZlcnNpb25JZCB0aGVuDQoJVGh1
bWJuYWlsVXJsID0gQmFzZVVybCAuLiAiR2FtZS9Ub29scy9UaHVtYm5haWxBc3NldC5hc2h4
P2ZtdD1wbmcmd2Q9MTEwJmh0PTExMCZhc3NldHZlcnNpb25pZD0iDQplbHNlDQoJVGh1bWJu
YWlsVXJsID0gQmFzZVVybCAuLiAiR2FtZS9Ub29scy9UaHVtYm5haWxBc3NldC5hc2h4P2Zt
dD1wbmcmd2Q9MTEwJmh0PTExMCZhaWQ9Ig0KZW5kDQoNCmxvY2FsIEluc2VydFJvd3MgPSA3
DQpsb2NhbCBJbnNlcnRDb2x1bW5zID0gMw0KbG9jYWwgaGlnaGxpZ2h0ID0gdHJ1ZQ0KbG9j
YWwgbWluWVNpemUgPSA4DQoNCi0tU3RhdGljIHZhcmlhYmxlcyB1c2VkIGZvciBjcmVhdGlu
ZyBzaXplcw0KZnVuY3Rpb24gZ2V0UGxheWVyKCkNCglsb2NhbCBjaGFyYWN0ZXIgPSBzY3Jp
cHQuUGFyZW50LlBhcmVudA0KCXJldHVybiBnYW1lLlBsYXllcnM6R2V0UGxheWVyRnJvbUNo
YXJhY3RlcihjaGFyYWN0ZXIpDQplbmQNCg0KZnVuY3Rpb24gbWluaW1pemUoKQ0KCWlmIFdp
bmRvdy5TdGFtcC5GcmFtZS5WaXNpYmxlIHRoZW4NCgkJY2FuY2VsQXNzZXRQbGFjZW1lbnQo
KQ0KCWVsc2VpZiBXaW5kb3cuTWFpbi5GcmFtZS5WaXNpYmxlIHRoZW4NCgkJV2luZG93Lk1h
aW4uRnJhbWUuVmlzaWJsZSA9IGZhbHNlDQoJCVdpbmRvdy5NaW5pbWl6ZWQuRnJhbWUuVmlz
aWJsZSA9IHRydWUNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiBidWlsZEltYWdlQnV0dG9uKGlt
YWdlKQ0KCWxvY2FsIGJ1dHRvbkZyYW1lID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpDQoJYnV0
dG9uRnJhbWUuQmFja2dyb3VuZENvbG9yID0gQnJpY2tDb2xvci5XaGl0ZSgpDQoJYnV0dG9u
RnJhbWUuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCglidXR0b25GcmFtZS5Cb3JkZXJT
aXplUGl4ZWwgPSAwDQoNCglsb2NhbCBidXR0b24gPSBJbnN0YW5jZS5uZXcoIkltYWdlQnV0
dG9uIikNCglidXR0b24uTmFtZSA9ICJCdXR0b24iDQoJYnV0dG9uLlBhcmVudCAgPSBidXR0
b25GcmFtZQ0KCWJ1dHRvbi5JbWFnZSA9IGltYWdlDQoJYnV0dG9uLlNpemUgPSBVRGltMi5u
ZXcoLjksIDAsIC45LCAwKQ0KCWJ1dHRvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjA1LCAw
LCAwLjA1LCAwKQ0KCWJ1dHRvbi5Cb3JkZXJTaXplUGl4ZWwgPSAwDQoJYnV0dG9uLlBhcmVu
dCAgPSBidXR0b25GcmFtZQ0KCWJ1dHRvbi5BdXRvQnV0dG9uQ29sb3IgPSBmYWxzZQ0KCWJ1
dHRvbi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMA0KDQoJbG9jYWwgbGF0ZXN0ID0gSW5z
dGFuY2UubmV3KCJTdHJpbmdWYWx1ZSIpDQoJbGF0ZXN0Lk5hbWUgPSAiTGF0ZXN0Ig0KCWxh
dGVzdC5WYWx1ZSA9ICJuaWwiDQoJbGF0ZXN0LlBhcmVudCA9IGJ1dHRvbg0KDQoJbG9jYWwg
ZmFkZVNwZWVkID0gMC4xDQoJYnV0dG9uLk1vdXNlRW50ZXI6Y29ubmVjdChmdW5jdGlvbigp
DQoJCWJ1dHRvbi5MYXRlc3QuVmFsdWUgPSAiRW50ZXIiDQoJCXdoaWxlIGJ1dHRvbi5QYXJl
bnQuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA+IDAgYW5kIGJ1dHRvbi5MYXRlc3QuVmFsdWUg
PT0gIkVudGVyIiBkbw0KCQkJYnV0dG9uLlBhcmVudC5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5
ID0gYnV0dG9uLlBhcmVudC5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5IC0gZmFkZVNwZWVkDQoJ
CQl3YWl0KCkNCgkJZW5kDQoJZW5kKQ0KDQoJYnV0dG9uLk1vdXNlTGVhdmU6Y29ubmVjdChm
dW5jdGlvbigpDQoJCWltYWdlQnV0dG9uTW91c2VMZWF2ZShidXR0b24sIGZhZGVTcGVlZCkN
CgllbmQpDQoNCglidXR0b24uTW91c2VCdXR0b24xQ2xpY2s6Y29ubmVjdChmdW5jdGlvbigp
DQoJCWltYWdlQnV0dG9uTW91c2VMZWF2ZShidXR0b24sIGZhZGVTcGVlZCkNCgllbmQpDQoJ
DQoJcmV0dXJuIGJ1dHRvbkZyYW1lDQoNCmVuZA0KDQoNCmZ1bmN0aW9uIGltYWdlQnV0dG9u
TW91c2VMZWF2ZShidXR0b24sIGZhZGVTcGVlZCkNCglidXR0b24uTGF0ZXN0LlZhbHVlID0g
IkxlYXZlIg0KCXdoaWxlIGJ1dHRvbi5QYXJlbnQuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA8
IDEgYW5kIGJ1dHRvbi5MYXRlc3QuVmFsdWUgPT0gIkxlYXZlIiBkbw0KCQlidXR0b24uUGFy
ZW50LkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSBidXR0b24uUGFyZW50LkJhY2tncm91bmRU
cmFuc3BhcmVuY3kgKyBmYWRlU3BlZWQNCgkJd2FpdCgpDQoJZW5kDQplbmQNCg0KZnVuY3Rp
b24gYnVpbGRUZXh0QnV0dG9uKHRleHQpDQoNCglsb2NhbCBidXR0b25GcmFtZSA9IEluc3Rh
bmNlLm5ldygiRnJhbWUiKQ0KCWJ1dHRvbkZyYW1lLkJhY2tncm91bmRUcmFuc3BhcmVuY3kg
PSAxLjANCglsb2NhbCBidXR0b24gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQ0KCWJ1
dHRvbi5OYW1lID0gIkJ1dHRvbiINCglidXR0b24uUGFyZW50ICA9IGJ1dHRvbkZyYW1lDQoJ
YnV0dG9uLlRleHQgPSB0ZXh0DQoJYnV0dG9uLlNpemUgPSBVRGltMi5uZXcoMS4wLCAwLCAx
LjAsIDApDQoJYnV0dG9uLlRleHRXcmFwID0gdHJ1ZQ0KCWJ1dHRvbi5Qb3NpdGlvbiA9IFVE
aW0yLm5ldygwLjAsIDAsIDAuMCwgMCkNCglidXR0b24uQm9yZGVyU2l6ZVBpeGVsID0gMQ0K
CWJ1dHRvbi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gYnV0dG9uVHJhbnNwYXJlbmN5DQoJ
YnV0dG9uLlBhcmVudCAgPSBidXR0b25GcmFtZQ0KCQ0KCXJldHVybiBidXR0b25GcmFtZQ0K
ZW5kDQoNCmZ1bmN0aW9uIG1vdXNlRW50ZXJJbnNlcnRCdXR0b24oaW5zZXJ0RnJhbWUpDQoJ
aWYgaW5zZXJ0RnJhbWUgfj0gRGF0YS5DdXJyZW50Um9sbG92ZXJJbnNlcnRCdXR0b24gdGhl
bg0KCQlpbnNlcnRGcmFtZS5CdXR0b24uVHJhbnNwYXJlbmN5ID0gMC4wDQoJCURhdGEuQ3Vy
cmVudFJvbGxvdmVySW5zZXJ0QnV0dG9uID0gaW5zZXJ0RnJhbWUNCgkJaWYgaGlnaGxpZ2h0
IHRoZW4NCgkJCVdpbmRvdy5NYWluLlJvbGxvdmVyVGV4dC5UZXh0ID0gRGF0YS5DdXJyZW50
Um9sbG92ZXJJbnNlcnRCdXR0b24uQXNzZXROYW1lLlZhbHVlDQoJCWVsc2UgDQoJCQlXaW5k
b3cuTWFpbi5Sb2xsb3ZlclRleHQuVGV4dCA9ICIiDQoJCWVuZA0KCWVuZA0KZW5kDQoNCmZ1
bmN0aW9uIG1vdXNlTGVhdmVJbnNlcnRCdXR0b24oaW5zZXJ0RnJhbWUpDQoJaWYgaW5zZXJ0
RnJhbWUgPT0gRGF0YS5DdXJyZW50Um9sbG92ZXJJbnNlcnRCdXR0b24gdGhlbg0KCQlXaW5k
b3cuTWFpbi5Sb2xsb3ZlclRleHQuVGV4dCA9ICIiDQoJCURhdGEuQ3VycmVudFJvbGxvdmVy
SW5zZXJ0QnV0dG9uID0gbmlsDQoJCQ0KCWVuZA0KCWluc2VydEZyYW1lLkJ1dHRvbi5UcmFu
c3BhcmVuY3kgPSBpbnNlcnRCdXR0b25UcmFuc3BhcmVuY3kNCmVuZA0KDQpmdW5jdGlvbiBi
dWlsZEluc2VydEJ1dHRvbihwb3NpdGlvbiwgc2l6ZSkNCglsb2NhbCBpbnNlcnRGcmFtZSA9
IGJ1aWxkSW1hZ2VCdXR0b24oIiIpDQoJaW5zZXJ0RnJhbWUuTmFtZSA9ICJJbnNlcnRBc3Nl
dEJ1dHRvbiINCglpbnNlcnRGcmFtZS5Qb3NpdGlvbiA9IHBvc2l0aW9uDQoJaW5zZXJ0RnJh
bWUuU2l6ZSA9IHNpemUNCglpbnNlcnRGcmFtZS5CdXR0b24uQmFja2dyb3VuZENvbG9yMyA9
IENvbG9yMy5uZXcoMS4wLDEuMCwxLjApDQoJaW5zZXJ0RnJhbWUuQnV0dG9uLlRyYW5zcGFy
ZW5jeSA9IGluc2VydEJ1dHRvblRyYW5zcGFyZW5jeQ0KCWluc2VydEZyYW1lLlZpc2libGUg
PSBmYWxzZQ0KDQoJbG9jYWwgYXNzZXRJZCA9IEluc3RhbmNlLm5ldygiSW50VmFsdWUiKQ0K
CWFzc2V0SWQuTmFtZSA9ICJBc3NldElkIg0KCWFzc2V0SWQuVmFsdWUgPSAtMQ0KCWFzc2V0
SWQuUGFyZW50ID0gaW5zZXJ0RnJhbWUNCg0KCWxvY2FsIGFzc2V0TmFtZSA9IEluc3RhbmNl
Lm5ldygiU3RyaW5nVmFsdWUiKQ0KCWFzc2V0TmFtZS5OYW1lID0gIkFzc2V0TmFtZSINCglh
c3NldE5hbWUuVmFsdWUgPSAiIg0KCWFzc2V0TmFtZS5QYXJlbnQgPSBpbnNlcnRGcmFtZQ0K
DQoJaW5zZXJ0RnJhbWUuQnV0dG9uLk1vdXNlQnV0dG9uMUNsaWNrOmNvbm5lY3QoZnVuY3Rp
b24oKSBtb3VzZUxlYXZlSW5zZXJ0QnV0dG9uKGluc2VydEZyYW1lKSBiZWdpbkluc2VydEFz
c2V0KGluc2VydEZyYW1lLkFzc2V0TmFtZS5WYWx1ZSwgaW5zZXJ0RnJhbWUuQXNzZXRJZC5W
YWx1ZSwgaW5zZXJ0RnJhbWUuQnV0dG9uLkltYWdlLCBmYWxzZSkgZW5kKQ0KCWluc2VydEZy
YW1lLkJ1dHRvbi5Nb3VzZUJ1dHRvbjJDbGljazpjb25uZWN0KGZ1bmN0aW9uKCkgbW91c2VM
ZWF2ZUluc2VydEJ1dHRvbihpbnNlcnRGcmFtZSkgYmVnaW5JbnNlcnRBc3NldChpbnNlcnRG
cmFtZS5Bc3NldE5hbWUuVmFsdWUsIGluc2VydEZyYW1lLkFzc2V0SWQuVmFsdWUsIGluc2Vy
dEZyYW1lLkJ1dHRvbi5JbWFnZSwgdHJ1ZSkgZW5kKQ0KCWluc2VydEZyYW1lLkJ1dHRvbi5N
b3VzZUVudGVyOmNvbm5lY3QoZnVuY3Rpb24oKSBtb3VzZUVudGVySW5zZXJ0QnV0dG9uKGlu
c2VydEZyYW1lKSBlbmQpDQoJaW5zZXJ0RnJhbWUuQnV0dG9uLk1vdXNlTGVhdmU6Y29ubmVj
dChmdW5jdGlvbigpIG1vdXNlTGVhdmVJbnNlcnRCdXR0b24oaW5zZXJ0RnJhbWUpIGVuZCkN
Cg0KCXJldHVybiBpbnNlcnRGcmFtZQ0KZW5kDQoNCmZ1bmN0aW9uIHNldEluc2VydEJ1dHRv
bkltYWdlQmVoYXZpb3IoaW5zZXJ0RnJhbWUsIHZpc2libGUsIG5hbWUsIGFzc2V0SWQpDQoJ
aWYgdmlzaWJsZSB0aGVuDQoJCWluc2VydEZyYW1lLkFzc2V0TmFtZS5WYWx1ZSA9IG5hbWUN
CgkJaW5zZXJ0RnJhbWUuQXNzZXRJZC5WYWx1ZSA9IGFzc2V0SWQNCgkJaW5zZXJ0RnJhbWUu
QnV0dG9uLkltYWdlID0gVGh1bWJuYWlsVXJsICAuLiBhc3NldElkDQoJCWluc2VydEZyYW1l
LkJ1dHRvbi5CYWNrZ3JvdW5kQ29sb3IzID0gQ29sb3IzLm5ldygxLjAsMS4wLDEuMCkNCgkJ
aW5zZXJ0RnJhbWUuVmlzaWJsZSA9IHRydWUNCgllbHNlDQoJCWluc2VydEZyYW1lLlZpc2li
bGUgPSBmYWxzZQ0KCWVuZAkJDQplbmQNCg0KZnVuY3Rpb24gbW91c2VFbnRlclNldEJ1dHRv
bihzZXRGcmFtZSkNCglpZiBzZXRGcmFtZS5CdXR0b24uQXV0b0J1dHRvbkNvbG9yIHRoZW4N
CgkJc2V0RnJhbWUuQnV0dG9uLkljb24uVHJhbnNwYXJlbmN5ID0gMC4wDQoJZW5kDQplbmQN
CmZ1bmN0aW9uIG1vdXNlTGVhdmVTZXRCdXR0b24oc2V0RnJhbWUpDQoJaWYgc2V0RnJhbWUu
QnV0dG9uLkF1dG9CdXR0b25Db2xvciB0aGVuDQoJCXNldEZyYW1lLkJ1dHRvbi5JY29uLlRy
YW5zcGFyZW5jeSA9IGluc2VydEJ1dHRvblRyYW5zcGFyZW5jeQ0KCWVuZA0KZW5kDQoNCmZ1
bmN0aW9uIGJ1aWxkU2V0QnV0dG9uKG5hbWUsIHNldElkLCBzZXRJbWFnZUlkLCBpLCAgY291
bnQpDQoJbG9jYWwgYnV0dG9uRnJhbWUgPSBidWlsZFRleHRCdXR0b24oIiIpDQoJYnV0dG9u
RnJhbWUuTmFtZSA9ICJTZXRCdXR0b24iDQoJYnV0dG9uRnJhbWUuU2l6ZSA9IFVEaW0yLm5l
dygxLjAsIDAsIDAuMCwgaGVpZ2h0KjIpDQoJYnV0dG9uRnJhbWUuUG9zaXRpb24gPSBVRGlt
Mi5uZXcoMC4wLCAwLCAwLjAsIChpLTEpKmhlaWdodCoyKQ0KCWJ1dHRvbkZyYW1lLkJ1dHRv
bi5CYWNrZ3JvdW5kQ29sb3IzID0gYnV0dG9uQ29sb3INCglidXR0b25GcmFtZS5CdXR0b24u
VGV4dENvbG9yMyA9IGJ1dHRvblRleHRDb2xvcg0KCWJ1dHRvbkZyYW1lLlZpc2libGUgPSBm
YWxzZQ0KDQoJbG9jYWwgc2V0TmFtZUxhYmVsID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwi
KQ0KCXNldE5hbWVMYWJlbC5OYW1lID0gIk5hbWUiDQoJc2V0TmFtZUxhYmVsLlRleHQgPSBu
YW1lDQoJc2V0TmFtZUxhYmVsLlRleHRDb2xvcjMgPSBidXR0b25UZXh0Q29sb3INCglzZXRO
YW1lTGFiZWwuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMA0KCXNldE5hbWVMYWJlbC5T
aXplID0gVURpbTIubmV3KDEuMCwgLWhlaWdodCoyLCAxLjAsIDAuMCkNCglzZXROYW1lTGFi
ZWwuUG9zaXRpb24gPSBVRGltMi5uZXcoMC4wLCBoZWlnaHQqMiwgMC4wLCAwKQ0KCXNldE5h
bWVMYWJlbC5UZXh0V3JhcCA9IHRydWUNCglzZXROYW1lTGFiZWwuVGV4dFhBbGlnbm1lbnQg
PSBFbnVtLlRleHRYQWxpZ25tZW50LkxlZnQNCglzZXROYW1lTGFiZWwuUGFyZW50ID0gYnV0
dG9uRnJhbWUuQnV0dG9uDQoJDQoJbG9jYWwgaWNvbkxhYmVsID0gSW5zdGFuY2UubmV3KCJJ
bWFnZUxhYmVsIikNCglpY29uTGFiZWwuTmFtZSA9ICJJY29uIg0KCWljb25MYWJlbC5JbWFn
ZSA9IEJhc2VVcmwgLi4gImFzc2V0Lz9pZD0iIC4uIHNldEltYWdlSWQNCglpY29uTGFiZWwu
U2l6ZSA9IFVEaW0yLm5ldygwLjAsIGhlaWdodCoyIC0gNCwgMC4wLCBoZWlnaHQqMiAtNCkN
CglpY29uTGFiZWwuUG9zaXRpb24gPSBVRGltMi5uZXcoMC4wLCAyLCAwLjAsIDIpDQoJaWNv
bkxhYmVsLlRyYW5zcGFyZW5jeSA9IGluc2VydEJ1dHRvblRyYW5zcGFyZW5jeQ0KCWljb25M
YWJlbC5QYXJlbnQgPSBidXR0b25GcmFtZS5CdXR0b24NCgkNCglsb2NhbCBzZXRWYWx1ZSA9
IEluc3RhbmNlLm5ldygiSW50VmFsdWUiKQ0KCXNldFZhbHVlLk5hbWUgPSAiU2V0SWQiDQoJ
c2V0VmFsdWUuVmFsdWUgPSBzZXRJZA0KCXNldFZhbHVlLlBhcmVudCA9IGJ1dHRvbkZyYW1l
DQoNCglsb2NhbCBzZXROYW1lID0gSW5zdGFuY2UubmV3KCJTdHJpbmdWYWx1ZSIpDQoJc2V0
TmFtZS5OYW1lID0gIlNldE5hbWUiDQoJc2V0TmFtZS5WYWx1ZSA9IG5hbWUNCglzZXROYW1l
LlBhcmVudCA9IGJ1dHRvbkZyYW1lDQoJDQoJYnV0dG9uRnJhbWUuQnV0dG9uLk1vdXNlQnV0
dG9uMUNsaWNrOmNvbm5lY3QoZnVuY3Rpb24oKSBzZWxlY3RTZXQoYnV0dG9uRnJhbWUsIGJ1
dHRvbkZyYW1lLlNldE5hbWUuVmFsdWUsIGJ1dHRvbkZyYW1lLlNldElkLlZhbHVlLCAwKSBl
bmQpDQoJYnV0dG9uRnJhbWUuQnV0dG9uLk1vdXNlRW50ZXI6Y29ubmVjdChmdW5jdGlvbigp
IG1vdXNlRW50ZXJTZXRCdXR0b24oYnV0dG9uRnJhbWUpIGVuZCkNCglidXR0b25GcmFtZS5C
dXR0b24uTW91c2VMZWF2ZTpjb25uZWN0KGZ1bmN0aW9uKCkgbW91c2VMZWF2ZVNldEJ1dHRv
bihidXR0b25GcmFtZSkgZW5kKQ0KDQoJLS1wcmludCgiQnVpbHQgYnV0dG9uICIgLi4gaSAu
LiAiIFNldElkPSIgLi4gc2V0SWQgLi4gIiBTZXROYW1lPSIgLi4gbmFtZSkNCg0KCXJldHVy
biBidXR0b25GcmFtZQ0KZW5kDQoNCmZ1bmN0aW9uIHByZXZpb3VzU2V0UGFnZSgpDQoJaWYg
ZnJlZVZpZXdpbmcgPT0gZmFsc2UgdGhlbg0KCQlsb2NhbCBuZXdJbmRleCA9IG1hdGgubWF4
KDEsIERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLkluZGV4IC0gKERhdGEu
TWFpbi5JbnNlcnRSb3dzICogRGF0YS5NYWluLkluc2VydENvbHVtbnMpKQ0KCQlzZXRTZXRJ
bmRleChuZXdJbmRleCkNCgllbHNlDQoJCWZyZWVJbmRleCA9IG1hdGgubWF4KGZyZWVJbmRl
eCAtIDEsMSkNCgkJaWYgdmlld2luZ01vZGVscyB0aGVuDQoJCQlsb2FkRnJlZVNldHMoZnJl
ZU1vZGVscywiTW9kZWxzIixjdXJyZW50U2VhcmNoVGV4dCkNCgkJZWxzZQ0KCQkJbG9hZEZy
ZWVTZXRzKGZyZWVEZWNhbHMsIkRlY2FscyIsY3VycmVudFNlYXJjaFRleHQpDQoJCWVuZA0K
CQlXaW5kb3cuTWFpbi5OZXh0UGFnZUJ1dHRvbi5WaXNpYmxlID0gdHJ1ZQ0KCQlXaW5kb3cu
TWFpbi5QcmV2aW91c1BhZ2VCdXR0b24uVmlzaWJsZSA9IHRydWUNCgkJaWYgZnJlZUluZGV4
ID09IDEgdGhlbg0KCQkJV2luZG93Lk1haW4uUHJldmlvdXNQYWdlQnV0dG9uLlZpc2libGUg
PSBmYWxzZQ0KCQllbmQNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiBuZXh0U2V0UGFnZSgpDQoJ
aWYgZnJlZVZpZXdpbmcgPT0gZmFsc2UgdGhlbg0KCQlsb2NhbCBuZXdJbmRleCA9IG1hdGgu
bWF4KDAsIERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLkluZGV4ICsgKERh
dGEuTWFpbi5JbnNlcnRSb3dzICogRGF0YS5NYWluLkluc2VydENvbHVtbnMpKQ0KCQlzZXRT
ZXRJbmRleChuZXdJbmRleCkNCgllbHNlDQoJCWZyZWVJbmRleCA9IGZyZWVJbmRleCArIDEN
CgkJbG9jYWwgbW9kZWxzDQoJCWlmIHZpZXdpbmdNb2RlbHMgdGhlbg0KCQkJbG9hZEZyZWVT
ZXRzKGZyZWVNb2RlbHMsIk1vZGVscyIsY3VycmVudFNlYXJjaFRleHQpDQoJCQltb2RlbHMg
PSBnYW1lOkdldFNlcnZpY2UoIkluc2VydFNlcnZpY2UiKTpHZXRGcmVlTW9kZWxzKGN1cnJl
bnRTZWFyY2hUZXh0LGZyZWVJbmRleCkNCgkJZWxzZQ0KCQkJbG9hZEZyZWVTZXRzKGZyZWVE
ZWNhbHMsIkRlY2FscyIsY3VycmVudFNlYXJjaFRleHQpDQoJCQltb2RlbHMgPSBnYW1lOkdl
dFNlcnZpY2UoIkluc2VydFNlcnZpY2UiKTpHZXRGcmVlRGVjYWxzKGN1cnJlbnRTZWFyY2hU
ZXh0LGZyZWVJbmRleCkNCgkJZW5kDQoJCWxvY2FsIHRvdGFsQ291bnQgPSAyMQ0KDQoJCWZv
ciBuZHgsY2F0aW5mbyBpbiBpcGFpcnMoIG1vZGVscyApIGRvIA0KCQkJZm9yIGssdiBpbiBw
YWlycyhjYXRpbmZvKSBkbyANCgkJCQlpZiBrID09ICJUb3RhbENvdW50IiB0aGVuIHRvdGFs
Q291bnQgPSB2IGVuZA0KCQkJZW5kIA0KCQllbmQNCg0KCQktLSB3ZSd2ZSByZWFjaCB0aGUg
ZW5kIGlmIHRydWUNCgkJaWYgdG9udW1iZXIodG90YWxDb3VudCkgPCAyMSB0aGVuDQoJCQlX
aW5kb3cuTWFpbi5OZXh0UGFnZUJ1dHRvbi5WaXNpYmxlID0gZmFsc2UNCgkJZW5kDQoNCgkJ
V2luZG93Lk1haW4uUHJldmlvdXNQYWdlQnV0dG9uLlZpc2libGUgPSB0cnVlDQoJZW5kDQpl
bmQNCg0KZnVuY3Rpb24gc2V0U2V0SW5kZXgoZGF0YU9mZnNldCkNCglEYXRhLkNhdGVnb3J5
W0RhdGEuQ3VycmVudENhdGVnb3J5XS5JbmRleCA9IGRhdGFPZmZzZXQNCg0KCWxvY2FsIFBh
Z2VTaXplID0gRGF0YS5NYWluLkluc2VydFJvd3MqRGF0YS5NYWluLkluc2VydENvbHVtbnMg
DQoJbG9jYWwgY29udGVudHMgPSBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5
XS5Db250ZW50cw0KCWlmIGNvbnRlbnRzIHRoZW4NCgkJZm9yIGluZGV4ID0gMSwgUGFnZVNp
emUgZG8NCgkJCWlmIERhdGEuSW5zZXJ0QnV0dG9uc1tpbmRleF0gdGhlbg0KCQkJCWlmIGNv
bnRlbnRzW2luZGV4ICsgZGF0YU9mZnNldF0gdGhlbg0KDQoJCQkJCWxvY2FsIGFzc2V0SWQN
CgkJCQkJaWYgdXNlQXNzZXRWZXJzaW9uSWQgdGhlbg0KCQkJCQkJYXNzZXRJZCA9IGNvbnRl
bnRzW2luZGV4ICsgZGF0YU9mZnNldF0uQXNzZXRWZXJzaW9uSWQgDQoJCQkJCWVsc2UgDQoJ
CQkJCQlhc3NldElkID0gY29udGVudHNbaW5kZXggKyBkYXRhT2Zmc2V0XS5Bc3NldElkDQoJ
CQkJCWVuZA0KCQkJCQlzZXRJbnNlcnRCdXR0b25JbWFnZUJlaGF2aW9yKERhdGEuSW5zZXJ0
QnV0dG9uc1tpbmRleF0sIHRydWUsIGNvbnRlbnRzW2luZGV4ICsgZGF0YU9mZnNldF0uTmFt
ZSwgYXNzZXRJZCkNCgkJCQllbHNlDQoJCQkJCXNldEluc2VydEJ1dHRvbkltYWdlQmVoYXZp
b3IoRGF0YS5JbnNlcnRCdXR0b25zW2luZGV4XSwgZmFsc2UpDQoJCQkJZW5kDQoJCQllbmQN
CgkJZW5kDQoJCVdpbmRvdy5NYWluLlByZXZpb3VzUGFnZUJ1dHRvbi5WaXNpYmxlID0gZGF0
YU9mZnNldCA+IDENCgkJV2luZG93Lk1haW4uTmV4dFBhZ2VCdXR0b24uVmlzaWJsZSA9ICgo
ZGF0YU9mZnNldCAtIDEpICsgUGFnZVNpemUpIDwgKCNjb250ZW50cykNCgllbHNlDQoJCVdp
bmRvdy5NYWluLlByZXZpb3VzUGFnZUJ1dHRvbi5WaXNpYmxlID0gZmFsc2UNCgkJV2luZG93
Lk1haW4uTmV4dFBhZ2VCdXR0b24uVmlzaWJsZSA9IGZhbHNlDQoJZW5kDQplbmQNCg0KZnVu
Y3Rpb24gcHJldmlvdXNDYXRlZ29yeVBhZ2UoKSANCglsb2NhbCBuZXdJbmRleCA9IG1hdGgu
bWF4KDAsIERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLlNldEluZGV4IC0g
RGF0YS5NYWluLkluc2VydFNldHMpDQoJc2V0Q2F0ZWdvcnlJbmRleChuZXdJbmRleCkgDQpl
bmQNCg0KZnVuY3Rpb24gbmV4dENhdGVnb3J5UGFnZSgpDQoJbG9jYWwgbmV3SW5kZXggPSBt
YXRoLm1heCgwLCBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXRJbmRl
eCArIERhdGEuTWFpbi5JbnNlcnRTZXRzKQ0KCXNldENhdGVnb3J5SW5kZXgobmV3SW5kZXgp
DQplbmQNCg0KZnVuY3Rpb24gc2V0Q2F0ZWdvcnlJbmRleChzZXRJbmRleCkNCglEYXRhLkNh
dGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXRJbmRleCA9IHNldEluZGV4DQoJLS1U
aGlzIGlzIGhvdyBtYW55IHZlcnRpY2FsIGl0ZW1zIHdlIGNhbiBkaXNwbGF5DQoNCgktLUxh
eW91dCBhbGwgYnV0dG9ucyBpbiB0aGlzIHNldG9oDQoJaWYgI0RhdGEuQ3VycmVudENhdGVn
b3J5ID4gRGF0YS5NYWluLkluc2VydFNldHMgdGhlbg0KCQktLVN0ZWFsIG9uZSBmb3IgdXNl
IGJ5IHRoZSBsYXlvdXQgYnV0dG9ucywgd2hlbiBpdCByYWlucyBpdCBwb3Vycw0KDQoJCS0t
V2UgY2FuJ3QgZml0IGFsbCB0aGUgYnV0dG9ucw0KCQlsb2NhbCBoZWlnaHRVc2VkID0gMA0K
DQoJCWxvY2FsIGluZGV4ID0gMQ0KCQlpZiBpbmRleCA8IHNldEluZGV4IHRoZW4NCgkJCWhl
aWdodFVzZWQgPSBoZWlnaHQNCgkJCVdpbmRvdy5NYWluLlByZXZpb3VzU2V0QnV0dG9uLlZp
c2libGUgPSB0cnVlDQoJCQl3aGlsZSBpbmRleCA8IHNldEluZGV4IGRvDQoJCQkJRGF0YS5D
dXJyZW50Q2F0ZWdvcnlbaW5kZXhdLlZpc2libGUgPSBmYWxzZQ0KCQkJCWluZGV4ID0gaW5k
ZXggKyAxDQoJCQllbmQNCgkJZWxzZQ0KCQkJV2luZG93Lk1haW4uUHJldmlvdXNTZXRCdXR0
b24uVmlzaWJsZSA9IGZhbHNlDQoJCWVuZA0KDQoJCWxvY2FsIG9mZnNldCA9IDANCgkJd2hp
bGUgb2Zmc2V0IDwgRGF0YS5NYWluLkluc2VydFNldHMgYW5kIGluZGV4ICsgb2Zmc2V0IDw9
ICNEYXRhLkN1cnJlbnRDYXRlZ29yeSBkbw0KCQkJRGF0YS5DdXJyZW50Q2F0ZWdvcnlbaW5k
ZXggKyBvZmZzZXRdLlNpemUgPSBVRGltMi5uZXcoMS4wLCAwLCAwLjAsIGhlaWdodCoyKQ0K
CQkJRGF0YS5DdXJyZW50Q2F0ZWdvcnlbaW5kZXggKyBvZmZzZXRdLlBvc2l0aW9uID0gVURp
bTIubmV3KDAuMCwgMCwgMC4wLCBoZWlnaHQqMipvZmZzZXQgKyBoZWlnaHRVc2VkKQ0KCQkJ
RGF0YS5DdXJyZW50Q2F0ZWdvcnlbaW5kZXggKyBvZmZzZXRdLlZpc2libGUgPSB0cnVlDQoJ
CQlvZmZzZXQgPSBvZmZzZXQgKyAxDQoJCWVuZA0KCQlpbmRleCA9IGluZGV4ICsgb2Zmc2V0
DQoJCWhlaWdodFVzZWQgPSBoZWlnaHRVc2VkICsgRGF0YS5NYWluLkluc2VydFNldHMqaGVp
Z2h0KjINCg0KCQlpZiBpbmRleCA8PSAjRGF0YS5DdXJyZW50Q2F0ZWdvcnkgdGhlbg0KCQkJ
V2luZG93Lk1haW4uTmV4dFNldEJ1dHRvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjAsIDAs
IDAuMCwgaGVpZ2h0VXNlZCkNCgkJCVdpbmRvdy5NYWluLk5leHRTZXRCdXR0b24uU2l6ZSA9
IFVEaW0yLm5ldygxLjAsIDAsIDEuMCwgLWhlaWdodFVzZWQpDQoJCQlXaW5kb3cuTWFpbi5O
ZXh0U2V0QnV0dG9uLlZpc2libGUgPSB0cnVlDQoJCQl3aGlsZSBpbmRleCA8PSAgI0RhdGEu
Q3VycmVudENhdGVnb3J5IGRvDQoJCQkJRGF0YS5DdXJyZW50Q2F0ZWdvcnlbaW5kZXhdLlZp
c2libGUgPSBmYWxzZQ0KCQkJCWluZGV4ID0gaW5kZXggKyAxDQoJCQllbmQJCQ0KCQllbHNl
DQoJCQlXaW5kb3cuTWFpbi5OZXh0U2V0QnV0dG9uLlZpc2libGUgPSBmYWxzZQ0KCQllbmQN
CgllbHNlDQoJCVdpbmRvdy5NYWluLlByZXZpb3VzU2V0QnV0dG9uLlZpc2libGUgPSBmYWxz
ZQ0KCQlXaW5kb3cuTWFpbi5OZXh0U2V0QnV0dG9uLlZpc2libGUgPSBmYWxzZQ0KDQoJCWZv
ciBrZXksIGJ1dHRvbkZyYW1lIGluIHBhaXJzKERhdGEuQ3VycmVudENhdGVnb3J5KSBkbw0K
CQkJYnV0dG9uRnJhbWUuU2l6ZSA9IFVEaW0yLm5ldygxLjAsIDAsIDAuMCwgaGVpZ2h0KjIp
DQoJCQlidXR0b25GcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjAsIDAsIDAuMCwgaGVp
Z2h0KjIqKGtleS0xKSkNCgkJCWJ1dHRvbkZyYW1lLlZpc2libGUgPSB0cnVlDQoJCWVuZA0K
DQoJZW5kDQplbmQNCg0KZnVuY3Rpb24gc2VsZWN0Q2F0ZWdvcnlQYWdlKGJ1dHRvbnMsIHBh
Z2UpDQoJaWYgYnV0dG9ucyB+PSBEYXRhLkN1cnJlbnRDYXRlZ29yeSB0aGVuCQkNCgkJaWYg
RGF0YS5DdXJyZW50Q2F0ZWdvcnkgdGhlbg0KCQkJZm9yIGtleSwgYnV0dG9uIGluIHBhaXJz
KERhdGEuQ3VycmVudENhdGVnb3J5KSBkbw0KCQkJCWJ1dHRvbi5WaXNpYmxlID0gZmFsc2UN
CgkJCWVuZA0KCQllbmQNCg0KCQlEYXRhLkN1cnJlbnRDYXRlZ29yeSA9IGJ1dHRvbnMJCQ0K
CQlpZiBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XSA9PSBuaWwgdGhlbg0K
CQkJRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRlZ29yeV0gPSB7fQ0KCQkJaWYgI2J1
dHRvbnMgPiAwIHRoZW4NCgkJCQlzZWxlY3RTZXQoYnV0dG9uc1sxXSwgYnV0dG9uc1sxXS5T
ZXROYW1lLlZhbHVlLCBidXR0b25zWzFdLlNldElkLlZhbHVlLCAwKQ0KCQkJZW5kDQoJCWVs
c2UNCgkJCURhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLkJ1dHRvbiA9IG5p
bA0KCQkJc2VsZWN0U2V0KERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLkJ1
dHRvbkZyYW1lLCBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXROYW1l
LCBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXRJZCwgRGF0YS5DYXRl
Z29yeVtEYXRhLkN1cnJlbnRDYXRlZ29yeV0uSW5kZXgpDQoJCWVuZA0KCQlpZiBEYXRhLk1h
aW4uRnJhbWVIZWlnaHQgdGhlbg0KCQkJaWYgRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRD
YXRlZ29yeV0uU2V0SW5kZXggdGhlbg0KCQkJCWxheW91dFNldEJ1dHRvbnMoRGF0YS5NYWlu
LkZyYW1lSGVpZ2h0LCBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXRJ
bmRleCkNCgkJCWVsc2UNCgkJCQlsYXlvdXRTZXRCdXR0b25zKERhdGEuTWFpbi5GcmFtZUhl
aWdodCwgMSkNCgkJCWVuZA0KCQllbmQNCg0KDQoJZW5kDQplbmQNCmZ1bmN0aW9uIGZpbHRl
clNldChzZXQpDQoJaWYgc29sb0dhbWUgdGhlbg0KCQlyZXR1cm4gc2V0DQoJZW5kDQoNCgls
b2NhbCByZXN1bHQgPSB7fQ0KCWZvciBwb3MsIG9iamVjdCBpbiBwYWlycyhzZXQpIGRvDQoJ
CWlmIG9iamVjdC5Jc1RydXN0ZWQgdGhlbg0KCQkJcmVzdWx0WyNyZXN1bHQrMV0gPSBvYmpl
Y3QNCgkJZW5kDQoJZW5kDQoJcmV0dXJuIHJlc3VsdA0KZW5kDQpmdW5jdGlvbiBzZWxlY3RT
ZXQoYnV0dG9uRnJhbWUsIHNldE5hbWUsIHNldElkLCBzZXRJbmRleCkNCglpZiBidXR0b25G
cmFtZSBhbmQgRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRlZ29yeV0gfj0gbmlsIHRo
ZW4NCgkJaWYgYnV0dG9uRnJhbWUuQnV0dG9uIH49IERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJy
ZW50Q2F0ZWdvcnldLkJ1dHRvbiBvciB0eXBlKHNldElkKSB+PSAibnVtYmVyIiAgdGhlbg0K
CQkJDQoJCQlEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5CdXR0b24gPSBi
dXR0b25GcmFtZS5CdXR0b24NCgkJDQoJCQlEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENh
dGVnb3J5XS5Db250ZW50cyA9IHNldElkDQoNCgkJCWlmIHR5cGUoc2V0SWQpID09ICJudW1i
ZXIiIHRoZW4NCgkJCQlTZXRDYWNoZVtzZXRJZF0gPSBmaWx0ZXJTZXQoZ2FtZTpHZXRTZXJ2
aWNlKCJJbnNlcnRTZXJ2aWNlIik6R2V0Q29sbGVjdGlvbihzZXRJZCkpDQoJCQkJRGF0YS5D
YXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRlZ29yeV0uQ29udGVudHMgPSBTZXRDYWNoZVtzZXRJ
ZF0NCgkJCWVuZA0KCQkJDQoJCQlXaW5kb3cuTWFpbi5UaXRsZS5UZXh0ID0gc2V0TmFtZQ0K
CQkJcHJpbnQoc2V0TmFtZSkNCg0KCQkJRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRl
Z29yeV0uU2V0TmFtZSA9IHNldE5hbWUNCgkJCURhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50
Q2F0ZWdvcnldLlNldElkID0gc2V0SWQNCgkJCURhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50
Q2F0ZWdvcnldLkJ1dHRvbkZyYW1lID0gYnV0dG9uRnJhbWUNCgkJZW5kDQoNCgkJc2V0U2V0
SW5kZXggKHNldEluZGV4KQ0KCWVuZA0KZW5kDQoNCmZ1bmN0aW9uIHNlbGVjdENhdGVnb3J5
KGJ1dHRvbiwgY2F0ZWdvcnkpDQoNCglzZWxlY3RDYXRlZ29yeVBhZ2UoY2F0ZWdvcnksIDAp
DQoNCmVuZA0KDQpmdW5jdGlvbiBwcm9jZXNzQ2F0ZWdvcnkoc2V0cywgc2V0UGFuZWwpDQoJ
bG9jYWwgc2V0QnV0dG9ucyA9IHt9DQoJZm9yIGluZGV4LCBvYmplY3QgaW4gcGFpcnMoc2V0
cykgZG8NCgkJLS1mb3Iga2V5LCB2YWx1ZSBpbiBwYWlycyhvYmplY3QpIGRvDQoJCS0tCXBy
aW50KCJrZXk9IiAuLiBrZXkgLi4gIiwgdmFsdWU9IiAuLiB2YWx1ZSkNCgkJLS1lbmQNCgkJ
c2V0QnV0dG9uc1tpbmRleF0gPSBidWlsZFNldEJ1dHRvbihvYmplY3QuTmFtZSwgb2JqZWN0
LkNhdGVnb3J5SWQsIG9iamVjdC5JbWFnZUFzc2V0SWQsIGluZGV4LCAjc2V0cykNCgkJc2V0
QnV0dG9uc1tpbmRleF0uUGFyZW50ID0gc2V0UGFuZWwJDQoJZW5kDQoJcmV0dXJuIHNldEJ1
dHRvbnMNCmVuZA0KDQpmdW5jdGlvbiBsb2FkRnJlZVNldHMoYnV0dG9uLHR5cGUsc2VhcmNo
KQ0KCQ0KCWxvY2FsIHN0dWZmDQoJaWYgdHlwZSA9PSAiTW9kZWxzIiB0aGVuDQoJCXN0dWZm
ID0gZ2FtZTpHZXRTZXJ2aWNlKCJJbnNlcnRTZXJ2aWNlIik6R2V0RnJlZU1vZGVscyhzZWFy
Y2gsZnJlZUluZGV4KQ0KCWVsc2VpZiB0eXBlID09ICJEZWNhbHMiIHRoZW4NCgkJc3R1ZmYg
PSBnYW1lOkdldFNlcnZpY2UoIkluc2VydFNlcnZpY2UiKTpHZXRGcmVlRGVjYWxzKHNlYXJj
aCxmcmVlSW5kZXgpDQoJZW5kDQoNCglmb3IgbmR4LGNhdGluZm8gaW4gaXBhaXJzKCBzdHVm
ZiApIGRvIA0KCQlmb3Igayx2IGluIHBhaXJzKGNhdGluZm8pIGRvIA0KCQkJaWYgayA9PSAi
UmVzdWx0cyIgdGhlbg0KCQkJCXNlbGVjdFNldChidXR0b24sIGJ1dHRvbi5CdXR0b24uVGV4
dCwgdiwgMCkNCgkJCQlyZXR1cm4NCgkJCWVuZA0KCQllbmQgDQoJZW5kDQoNCmVuZA0KDQpm
dW5jdGlvbiBjcmVhdGVEcm9wRG93bk1lbnUocGFyZW50LCBXaW5kb3cpDQoNCglsb2NhbCB3
aWR0aCA9IDEuMQ0KCWxvY2FsIHhQb3MgPSAwLjA1NQ0KDQoJbG9jYWwgZHJvcERvd25NZW51
ID0gSW5zdGFuY2UubmV3KCJJbWFnZUJ1dHRvbiIpDQoJZHJvcERvd25NZW51Lk5hbWUgPSAi
RHJvcERvd25NZW51Ig0KCWRyb3BEb3duTWVudS5JbWFnZSA9ICJodHRwOi8vd3d3LnJvYmxv
eC5jb20vYXNzZXQvP2lkPTM2MzYxMzQ3Ig0KCWRyb3BEb3duTWVudS5CYWNrZ3JvdW5kVHJh
bnNwYXJlbmN5ID0gMQ0KCWRyb3BEb3duTWVudS5BdXRvQnV0dG9uQ29sb3IgPSBmYWxzZQ0K
CWRyb3BEb3duTWVudS5TaXplID0gVURpbTIubmV3KHdpZHRoLDAsMC4wNiwwKQ0KCWRyb3BE
b3duTWVudS5Qb3NpdGlvbiA9IFVEaW0yLm5ldyh4UG9zLDAsMC4wOSwwKQ0KCWRyb3BEb3du
TWVudS5QYXJlbnQgPSBwYXJlbnQNCglkcm9wRG93bk1lbnUuWkluZGV4ID0gMg0KCQ0KCWxv
Y2FsIGRyb3BwZWREb3duTWVudSA9IEluc3RhbmNlLm5ldygiSW1hZ2VMYWJlbCIpDQoJZHJv
cHBlZERvd25NZW51Lk5hbWUgPSAiTGlzdCINCglkcm9wcGVkRG93bk1lbnUuSW1hZ2UgPSAi
aHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjM2MTcwNSINCglkcm9wcGVkRG93
bk1lbnUuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCglkcm9wcGVkRG93bk1lbnUuVmlz
aWJsZSA9IGZhbHNlDQoJZHJvcHBlZERvd25NZW51LkFjdGl2ZSA9IGZhbHNlDQoJZHJvcHBl
ZERvd25NZW51LlBvc2l0aW9uID0gVURpbTIubmV3KHhQb3MsMCwwLjA4NSwwKQ0KCWRyb3Bw
ZWREb3duTWVudS5TaXplID0gVURpbTIubmV3KHdpZHRoLDAsMC45NywwKQ0KCWRyb3BwZWRE
b3duTWVudS5QYXJlbnQgPSBkcm9wRG93bk1lbnUuUGFyZW50DQoJZHJvcHBlZERvd25NZW51
LlpJbmRleCA9IDMNCgkNCglsb2NhbCB0aXRsZUZyYW1lID0gSW5zdGFuY2UubmV3KCJUZXh0
TGFiZWwiKQ0KCXRpdGxlRnJhbWUuTmFtZSA9ICJUaXRsZSINCgl0aXRsZUZyYW1lLlBvc2l0
aW9uID0gVURpbTIubmV3KDAuMDUsIDAsIDAsIDApDQoJdGl0bGVGcmFtZS5TaXplID0gVURp
bTIubmV3KDAuODYsIDAsIDEsIDApDQoJdGl0bGVGcmFtZS5UZXh0V3JhcCA9IHRydWUNCgl0
aXRsZUZyYW1lLkJhY2tncm91bmRDb2xvcjMgPSB0aXRsZUNvbG9yDQoJdGl0bGVGcmFtZS5U
ZXh0Q29sb3IzID0gdGl0bGVUZXh0Q29sb3INCgl0aXRsZUZyYW1lLkJhY2tncm91bmRUcmFu
c3BhcmVuY3kgPSAxDQoJdGl0bGVGcmFtZS5UZXh0ID0gIkNoYW5nZSBtZSINCgl0aXRsZUZy
YW1lLlpJbmRleCA9IDMNCgl0aXRsZUZyYW1lLlRleHRYQWxpZ25tZW50ID0gMA0KCXRpdGxl
RnJhbWUuUGFyZW50ID0gZHJvcERvd25NZW51DQoJV2luZG93Lk1haW4uVGl0bGUgPSB0aXRs
ZUZyYW1lDQoNCglsb2NhbCB0ZXh0QnV0dG9uID0gSW5zdGFuY2UubmV3KCJUZXh0QnV0dG9u
IikNCgl0ZXh0QnV0dG9uLk5hbWUgPSAiQnV0dG9uIg0KCXRleHRCdXR0b24uQmFja2dyb3Vu
ZFRyYW5zcGFyZW5jeSA9IDENCgl0ZXh0QnV0dG9uLkJvcmRlclNpemVQaXhlbCA9IDANCgl0
ZXh0QnV0dG9uLlRleHQgPSAiVGVzdCINCgl0ZXh0QnV0dG9uLlNpemUgPSBVRGltMi5uZXco
MSwwLDEsMCkNCgl0ZXh0QnV0dG9uLlRleHRYQWxpZ25tZW50ID0gMg0KCXRleHRCdXR0b24u
VGV4dFdyYXAgPSB0cnVlDQoJdGV4dEJ1dHRvbi5aSW5kZXggPSA1DQoNCglsb2NhbCBidXR0
b25GcmFtZSA9IEluc3RhbmNlLm5ldygiSW1hZ2VMYWJlbCIpDQoJYnV0dG9uRnJhbWUuSW1h
Z2UgPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjM2MTcwNSINCglidXR0
b25GcmFtZS5aSW5kZXggPSA0DQoJYnV0dG9uRnJhbWUuQmFja2dyb3VuZFRyYW5zcGFyZW5j
eSA9IDENCgkNCgl0ZXh0QnV0dG9uLlBhcmVudCA9IGJ1dHRvbkZyYW1lDQoNCglsb2NhbCBj
YXRlZ29yaWVzID0gICNEYXRhLkJhc2VDYXRlZ29yeUJ1dHRvbnMNCglsb2NhbCByb2Jsb3hN
YXhDYXQgPSBjYXRlZ29yaWVzDQoJY2F0ZWdvcmllcyA9IGNhdGVnb3JpZXMgKyAjRGF0YS5V
c2VyQ2F0ZWdvcnlCdXR0b25zDQoNCglsb2NhbCBzcGFjaW5nID0gMC4xDQoJYnV0dG9uRnJh
bWUuU2l6ZSA9IFVEaW0yLm5ldygwLjksMCwoMSAtICBzcGFjaW5nKS8oY2F0ZWdvcmllcyAr
IDIpLDApIA0KDQoNCgktLSBtYWtlIHN1cmUgYnV0dG9ucyBhcmUgYmlnIGVub3VnaA0KCWxv
Y2FsIHRlc3RCdXR0b24gPSBidXR0b25GcmFtZTpjbG9uZSgpDQoJdGVzdEJ1dHRvbi5QYXJl
bnQgPSBkcm9wcGVkRG93bk1lbnUNCgl3aGlsZSB0ZXN0QnV0dG9uLkFic29sdXRlU2l6ZS5Z
IDwgbWluWVNpemUgZG8NCgkJZHJvcHBlZERvd25NZW51LlNpemUgPSBVRGltMi5uZXcod2lk
dGgsMCxkcm9wcGVkRG93bk1lbnUuU2l6ZS5ZLlNjYWxlICsgMC4wMSwwKQ0KCWVuZA0KCXRl
c3RCdXR0b246cmVtb3ZlKCkNCgl0ZXN0QnV0dG9uID0gbmlsDQoNCg0KCWxvY2FsIG1hc3Rl
ckNhdGVnb3J5ID0gMQ0KCXByaW50KGNhdGVnb3JpZXMpDQoJZm9yIGkgPSAxLCBjYXRlZ29y
aWVzIGRvDQoJCS0tIG5lZWRlZCB0byBtYWludGFpbiBsb2NhbCBzY29wZSBmb3IgY2F0ZWdv
cmllcyBpbiBldmVudCBsaXN0ZW5lcnMgYmVsb3cNCgkJbG9jYWwgdXNlckNhdGVnb3J5ID0g
bWFzdGVyQ2F0ZWdvcnkNCgkJbG9jYWwgYnV0dG9uID0gYnV0dG9uRnJhbWU6Y2xvbmUoKQ0K
CQlidXR0b24uUG9zaXRpb24gPSBVRGltMi5uZXcoMC4wNSwwLChpIC0gMSkvKGNhdGVnb3Jp
ZXMgKyAyKSwwKQ0KCQlidXR0b24uUGFyZW50ID0gZHJvcHBlZERvd25NZW51DQoJCWlmIGkg
PD0gcm9ibG94TWF4Q2F0IHRoZW4NCgkJCWJ1dHRvbi5CdXR0b24uVGV4dCA9ICJSb2Jsb3gg
U2V0OiAiIC4uIHRvc3RyaW5nKERhdGEuQmFzZUNhdGVnb3J5QnV0dG9uc1tpXS5TZXROYW1l
LlZhbHVlKQ0KCQllbHNlDQoJCQlidXR0b24uQnV0dG9uLlRleHQgPSAgdG9zdHJpbmcoRGF0
YS5Vc2VyQ2F0ZWdvcnlCdXR0b25zW3VzZXJDYXRlZ29yeV0uU2V0TmFtZS5WYWx1ZSkNCgkJ
ZW5kDQoNCg0KCQlidXR0b24uQnV0dG9uLk1vdXNlQnV0dG9uMUNsaWNrOmNvbm5lY3QoZnVu
Y3Rpb24oKQ0KCQkJZnJlZVZpZXdpbmcgPSBmYWxzZQ0KCQkJdGl0bGVGcmFtZS5UZXh0ID0g
YnV0dG9uLkJ1dHRvbi5UZXh0DQoJCQlwYXJlbnQuSW5zZXJ0VGFiLlNlYXJjaEZyYW1lLlZp
c2libGUgPSBmYWxzZQ0KCQkJaWYgaSA8PSByb2Jsb3hNYXhDYXQgdGhlbg0KCQkJCXNlbGVj
dFNldChidXR0b24sIGJ1dHRvbi5CdXR0b24uVGV4dCwgRGF0YS5CYXNlQ2F0ZWdvcnlCdXR0
b25zW2ldLlNldElkLlZhbHVlLCAwKQ0KCQkJZWxzZQ0KCQkJCXNlbGVjdFNldChidXR0b24s
IGJ1dHRvbi5CdXR0b24uVGV4dCwgRGF0YS5Vc2VyQ2F0ZWdvcnlCdXR0b25zW3VzZXJDYXRl
Z29yeV0uU2V0SWQuVmFsdWUsIDApDQoJCQllbmQNCgkJCWRyb3BEb3duU2VsZWN0ZWQgPSBu
b3QgZHJvcERvd25TZWxlY3RlZA0KCQkJaWYgbm90IGRyb3BEb3duU2VsZWN0ZWQgdGhlbg0K
CQkJCWRyb3BEb3duTWVudS5JbWFnZSA9ICJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQv
P2lkPTM2MzYxMzQ3Ig0KCQkJZWxzZQ0KCQkJCWRyb3BEb3duTWVudS5JbWFnZSA9ICJodHRw
Oi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTM2NzAxNzQwIg0KCQkJZW5kDQoJCQlkcm9w
cGVkRG93bk1lbnUuVmlzaWJsZSA9IG5vdCBkcm9wcGVkRG93bk1lbnUuVmlzaWJsZQ0KCQkJ
ZHJvcHBlZERvd25NZW51LkFjdGl2ZSA9IG5vdCBkcm9wcGVkRG93bk1lbnUuQWN0aXZlDQoJ
CQloaWdobGlnaHQgPSB0cnVlDQoJCWVuZCkNCgkJaWYgaSA+IHJvYmxveE1heENhdCB0aGVu
IG1hc3RlckNhdGVnb3J5ID0gbWFzdGVyQ2F0ZWdvcnkgKyAxIGVuZA0KCWVuZA0KDQoJZnJl
ZU1vZGVscyA9IGJ1dHRvbkZyYW1lOmNsb25lKCkNCglmcmVlTW9kZWxzLlBvc2l0aW9uID0g
VURpbTIubmV3KDAuMDUsMCxjYXRlZ29yaWVzLyhjYXRlZ29yaWVzICsyKSwwKQ0KCWZyZWVN
b2RlbHMuQnV0dG9uLlRleHQgPSAiRnJlZSBNb2RlbHMiDQoJZnJlZU1vZGVscy5QYXJlbnQg
PSBkcm9wcGVkRG93bk1lbnUNCglmcmVlTW9kZWxzLkJ1dHRvbi5Nb3VzZUJ1dHRvbjFDbGlj
azpjb25uZWN0KGZ1bmN0aW9uKCkNCgkJZnJlZVZpZXdpbmcgPSB0cnVlDQoJCXZpZXdpbmdN
b2RlbHMgPSB0cnVlDQoJCWZyZWVJbmRleCA9IDENCgkJdGl0bGVGcmFtZS5UZXh0ID0gZnJl
ZU1vZGVscy5CdXR0b24uVGV4dA0KCQlsb2FkRnJlZVNldHMoZnJlZU1vZGVscywiTW9kZWxz
IiwiIikNCgkJcGFyZW50Lkluc2VydFRhYi5TZWFyY2hGcmFtZS5WaXNpYmxlID0gdHJ1ZQ0K
CQktLWRyb3BEb3duTWVudS5WaXNpYmxlID0gbm90IGRyb3BEb3duTWVudS5WaXNpYmxlDQoJ
CWRyb3BEb3duU2VsZWN0ZWQgPSBub3QgZHJvcERvd25TZWxlY3RlZA0KCQlpZiBub3QgZHJv
cERvd25TZWxlY3RlZCB0aGVuDQoJCQlkcm9wRG93bk1lbnUuSW1hZ2UgPSAiaHR0cDovL3d3
dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjM2MTM0NyINCgkJZWxzZQ0KCQkJZHJvcERvd25N
ZW51LkltYWdlID0gImh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9MzY3MDE3NDAi
DQoJCWVuZA0KCQlkcm9wcGVkRG93bk1lbnUuVmlzaWJsZSA9IG5vdCBkcm9wcGVkRG93bk1l
bnUuVmlzaWJsZQ0KCQlkcm9wcGVkRG93bk1lbnUuQWN0aXZlID0gbm90IGRyb3BwZWREb3du
TWVudS5BY3RpdmUNCgkJaGlnaGxpZ2h0ID0gdHJ1ZQ0KCWVuZCkNCg0KCWZyZWVEZWNhbHMg
PSBidXR0b25GcmFtZTpjbG9uZSgpDQoJZnJlZURlY2Fscy5Qb3NpdGlvbiA9IFVEaW0yLm5l
dygwLjA1LDAsKGNhdGVnb3JpZXMgKyAxKS8oY2F0ZWdvcmllcyArMiksMCkNCglmcmVlRGVj
YWxzLkJ1dHRvbi5UZXh0ID0gIkZyZWUgRGVjYWxzIg0KCWZyZWVEZWNhbHMuUGFyZW50ID0g
ZHJvcHBlZERvd25NZW51DQoJZnJlZURlY2Fscy5CdXR0b24uTW91c2VCdXR0b24xQ2xpY2s6
Y29ubmVjdChmdW5jdGlvbigpDQoJCWZyZWVWaWV3aW5nID0gdHJ1ZQ0KCQl2aWV3aW5nTW9k
ZWxzID0gZmFsc2UNCgkJZnJlZUluZGV4ID0gMQ0KCQl0aXRsZUZyYW1lLlRleHQgPSBmcmVl
RGVjYWxzLkJ1dHRvbi5UZXh0DQoJCWxvYWRGcmVlU2V0cyhmcmVlRGVjYWxzLCJEZWNhbHMi
LCIiKQ0KCQlwYXJlbnQuSW5zZXJ0VGFiLlNlYXJjaEZyYW1lLlZpc2libGUgPSB0cnVlDQoJ
CS0tZHJvcERvd25NZW51LlZpc2libGUgPSBub3QgZHJvcERvd25NZW51LlZpc2libGUNCgkJ
ZHJvcERvd25TZWxlY3RlZCA9IG5vdCBkcm9wRG93blNlbGVjdGVkDQoJCWlmIG5vdCBkcm9w
RG93blNlbGVjdGVkIHRoZW4NCgkJCWRyb3BEb3duTWVudS5JbWFnZSA9ICJodHRwOi8vd3d3
LnJvYmxveC5jb20vYXNzZXQvP2lkPTM2MzYxMzQ3Ig0KCQllbHNlDQoJCQlkcm9wRG93bk1l
bnUuSW1hZ2UgPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjcwMTc0MCIN
CgkJZW5kDQoNCgkJZHJvcHBlZERvd25NZW51LlZpc2libGUgPSBub3QgZHJvcHBlZERvd25N
ZW51LlZpc2libGUNCgkJZHJvcHBlZERvd25NZW51LkFjdGl2ZSA9IG5vdCBkcm9wcGVkRG93
bk1lbnUuQWN0aXZlDQoJCWhpZ2hsaWdodCA9IHRydWUNCgllbmQpDQoJDQoNCglkcm9wRG93
bk1lbnUuTW91c2VCdXR0b24xQ2xpY2s6Y29ubmVjdChmdW5jdGlvbigpDQoJCVdpbmRvdy5N
YWluLlJvbGxvdmVyVGV4dC5UZXh0ID0gIiINCgkJLS1kcm9wRG93bk1lbnUuVmlzaWJsZSA9
IG5vdCBkcm9wRG93bk1lbnUuVmlzaWJsZQ0KCQlkcm9wRG93blNlbGVjdGVkID0gbm90IGRy
b3BEb3duU2VsZWN0ZWQNCgkJaWYgbm90IGRyb3BEb3duU2VsZWN0ZWQgdGhlbg0KCQkJZHJv
cERvd25NZW51LkltYWdlID0gImh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9MzYz
NjEzNDciDQoJCWVsc2UNCgkJCWRyb3BEb3duTWVudS5JbWFnZSA9ICJodHRwOi8vd3d3LnJv
YmxveC5jb20vYXNzZXQvP2lkPTM2NzAxNzQwIg0KCQllbmQNCg0KCQlkcm9wcGVkRG93bk1l
bnUuVmlzaWJsZSA9IG5vdCBkcm9wcGVkRG93bk1lbnUuVmlzaWJsZQ0KCQlkcm9wcGVkRG93
bk1lbnUuQWN0aXZlID0gbm90IGRyb3BwZWREb3duTWVudS5BY3RpdmUNCgkJaGlnaGxpZ2h0
ID0gZmFsc2UNCgllbmQpDQoNCgktLSBzZXQgZmlyc3QgY2F0ZWdvcnkgYXMgbG9hZGVkIGZv
ciBkZWZhdWx0DQoJbG9jYWwgYnV0dG9ucyA9IGRyb3BwZWREb3duTWVudTpHZXRDaGlsZHJl
bigpDQoJc2VsZWN0U2V0KGJ1dHRvbnNbMV0sIGJ1dHRvbnNbMV0uQnV0dG9uLlRleHQsIERh
dGEuQmFzZUNhdGVnb3J5QnV0dG9uc1sxXS5TZXRJZC5WYWx1ZSwgMCkNCglzZWxlY3RDYXRl
Z29yeShidXR0b25zWzFdLCBEYXRhLkJhc2VDYXRlZ29yeUJ1dHRvbnMpDQoJV2luZG93Lk1h
aW4uVGl0bGUuVGV4dCA9ICJSb2Jsb3ggU2V0OiAiIC4uICB0b3N0cmluZyhEYXRhLkJhc2VD
YXRlZ29yeUJ1dHRvbnNbMV0uU2V0TmFtZS5WYWx1ZSkNCg0KZW5kDQoNCmZ1bmN0aW9uIGJ1
aWxkTWFpbkd1aShyb290LCB1c2VySWQpDQoJV2luZG93Lk1haW4gPSB7fQ0KCURhdGEuTWFp
biA9IHt9DQoJRGF0YS5DYXRlZ29yeSA9IHt9DQoJDQoJbG9jYWwgbWFpbkZyYW1lID0gSW5z
dGFuY2UubmV3KCJGcmFtZSIpDQoJbWFpbkZyYW1lLk5hbWUgPSAiSW5zZXJ0TWFpbkRpYWxv
ZyINCgltYWluRnJhbWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC4wLCAwLCAwLCAwKQ0KCW1h
aW5GcmFtZS5TaXplID0gVURpbTIubmV3KDEsIDAsIDEsIDApDQoJbWFpbkZyYW1lLlRyYW5z
cGFyZW5jeSA9IDEuMA0KCW1haW5GcmFtZS5BY3RpdmUgPSB0cnVlDQoJbWFpbkZyYW1lLlBh
cmVudCA9IHJvb3QNCglXaW5kb3cuTWFpbi5GcmFtZSA9IG1haW5GcmFtZQ0KDQoJbG9jYWwg
aW5zZXJ0VGFiID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpDQoJaW5zZXJ0VGFiLk5hbWUgPSAi
SW5zZXJ0VGFiIg0KCWluc2VydFRhYi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCAwLCAwLjAs
IDApDQoJaW5zZXJ0VGFiLlNpemUgPSBVRGltMi5uZXcoMSwgMCwgMS4wLCAwKQ0KCWluc2Vy
dFRhYi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wDQoJaW5zZXJ0VGFiLlBhcmVudCA9
IG1haW5GcmFtZQ0KDQoJbG9jYWwgY2xvc2VCdXR0b24gPSBJbnN0YW5jZS5uZXcoIkltYWdl
QnV0dG9uIikNCgljbG9zZUJ1dHRvbi5OYW1lID0gIkNsb3NlQnV0dG9uIg0KCWNsb3NlQnV0
dG9uLkF1dG9CdXR0b25Db2xvciA9IGZhbHNlDQoJY2xvc2VCdXR0b24uSW1hZ2UgPSAicmJ4
YXNzZXQ6Ly90ZXh0dXJlcy91aS9DbG9zZUJ1dHRvbi5wbmciDQoJY2xvc2VCdXR0b24uQmFj
a2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCgljbG9zZUJ1dHRvbi5TaXplID0gVURpbTIubmV3
KDAuMTgsMCwwLjA3LDApDQoJY2xvc2VCdXR0b24uUG9zaXRpb24gPSBVRGltMi5uZXcoMC45
NSwwLDAuMDEsMCkNCgljbG9zZUJ1dHRvbi5aSW5kZXggPSA5DQoJY2xvc2VCdXR0b24uUGFy
ZW50ID0gaW5zZXJ0VGFiDQoJY2xvc2VCdXR0b24uTW91c2VFbnRlcjpjb25uZWN0KGZ1bmN0
aW9uKCkgY2xvc2VCdXR0b24uSW1hZ2UgPSAicmJ4YXNzZXQ6Ly90ZXh0dXJlcy91aS9DbG9z
ZUJ1dHRvbl9kbi5wbmciIGVuZCkNCgljbG9zZUJ1dHRvbi5Nb3VzZUxlYXZlOmNvbm5lY3Qo
ZnVuY3Rpb24oKSBjbG9zZUJ1dHRvbi5JbWFnZSA9ICJyYnhhc3NldDovL3RleHR1cmVzL3Vp
L0Nsb3NlQnV0dG9uLnBuZyIgZW5kKQ0KDQoJbG9jYWwgY2xvc2VkU3RhdGUgPSBJbnN0YW5j
ZS5uZXcoIkJvb2xWYWx1ZSIpDQoJY2xvc2VkU3RhdGUuTmFtZSA9ICJDbG9zZWRTdGF0ZSIN
CgljbG9zZWRTdGF0ZS5WYWx1ZSA9IGZhbHNlDQoJY2xvc2VkU3RhdGUuUGFyZW50ID0gY2xv
c2VCdXR0b24NCg0KCWNsb3NlQnV0dG9uLk1vdXNlQnV0dG9uMUNsaWNrOmNvbm5lY3QoZnVu
Y3Rpb24oKSBjbG9zZUJ1dHRvbi5JbWFnZSA9ICJyYnhhc3NldDovL3RleHR1cmVzL3VpL0Ns
b3NlQnV0dG9uLnBuZyIgY2xvc2VkU3RhdGUuVmFsdWUgPSB0cnVlIGVuZCkNCg0KCWxvY2Fs
IHNlYXJjaEZyYW1lID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpDQoJc2VhcmNoRnJhbWUuTmFt
ZSA9ICJTZWFyY2hGcmFtZSINCglzZWFyY2hGcmFtZS5TaXplID0gVURpbTIubmV3KDEsMCww
LjEsMCkNCglzZWFyY2hGcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjEyLDAsMS4xMSww
KQ0KCXNlYXJjaEZyYW1lLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxDQoJc2VhcmNoRnJh
bWUuVmlzaWJsZSA9IGZhbHNlDQoJc2VhcmNoRnJhbWUuUGFyZW50ID0gaW5zZXJ0VGFiDQoJ
DQoJbG9jYWwgc2VhcmNoR3JhcGhpY0JveCA9IEluc3RhbmNlLm5ldygiSW1hZ2VMYWJlbCIp
DQoJc2VhcmNoR3JhcGhpY0JveC5JbWFnZSA9ICJodHRwOi8vd3d3LnJvYmxveC5jb20vYXNz
ZXQvP2lkPTM2MzM3Mjc0Ig0KCXNlYXJjaEdyYXBoaWNCb3guTmFtZSA9ICJTZWFyY2hHcmFw
aGljQm94Ig0KCXNlYXJjaEdyYXBoaWNCb3guQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEN
CglzZWFyY2hHcmFwaGljQm94LlNpemUgPSBVRGltMi5uZXcoMC43LDAsMSwwKQ0KCXNlYXJj
aEdyYXBoaWNCb3guUGFyZW50ID0gc2VhcmNoRnJhbWUNCg0KCWxvY2FsIHNlYXJjaEJveCA9
IEluc3RhbmNlLm5ldygiVGV4dEJveCIpDQoJc2VhcmNoQm94Lk5hbWUgPSAiU2VhcmNoQm94
Ig0KCXNlYXJjaEJveC5UZXh0ID0gIkVudGVyIFRleHQgSGVyZSINCglzZWFyY2hCb3guVGV4
dFdyYXAgPSB0cnVlDQoJc2VhcmNoQm94LlRleHRDb2xvciA9IEJyaWNrQ29sb3IuV2hpdGUo
KQ0KCXNlYXJjaEJveC5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMQ0KCXNlYXJjaEJveC5T
aXplID0gVURpbTIubmV3KDEsMCwxLDApDQoJc2VhcmNoQm94LlBhcmVudCA9IHNlYXJjaEdy
YXBoaWNCb3gNCg0KCWxvY2FsIHNlYXJjaEJ1dHRvbiA9IEluc3RhbmNlLm5ldygiSW1hZ2VC
dXR0b24iKQ0KCXNlYXJjaEJ1dHRvbi5OYW1lID0gIlNlYXJjaEJ1dHRvbiINCglzZWFyY2hC
dXR0b24uSW1hZ2UgPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNzI3MjI2
NyINCglzZWFyY2hCdXR0b24uQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCglzZWFyY2hC
dXR0b24uQXV0b0J1dHRvbkNvbG9yID0gZmFsc2UNCglzZWFyY2hCdXR0b24uU2l6ZSA9IFVE
aW0yLm5ldygwLjQsMCwxLDApDQoJc2VhcmNoQnV0dG9uLlBvc2l0aW9uID0gVURpbTIubmV3
KDAuNzEsMCwwKQ0KCXNlYXJjaEJ1dHRvbi5QYXJlbnQgPSBzZWFyY2hGcmFtZQ0KDQoJc2Vh
cmNoQnV0dG9uLk1vdXNlQnV0dG9uMURvd246Y29ubmVjdChmdW5jdGlvbigpIA0KCQljdXJy
ZW50U2VhcmNoVGV4dCA9IHNlYXJjaEJveC5UZXh0DQoJCWZyZWVJbmRleCA9IDENCgkJaWYg
dmlld2luZ01vZGVscyB0aGVuDQoJCQlsb2FkRnJlZVNldHMoZnJlZU1vZGVscywiTW9kZWxz
IixzZWFyY2hCb3guVGV4dCkNCgkJZWxzZQ0KCQkJbG9hZEZyZWVTZXRzKGZyZWVEZWNhbHMs
IkRlY2FscyIsc2VhcmNoQm94LlRleHQpDQoJCWVuZA0KCWVuZCkNCg0KCQ0KCURhdGEuQmFz
ZUNhdGVnb3J5QnV0dG9ucyA9IHByb2Nlc3NDYXRlZ29yeShnYW1lOkdldFNlcnZpY2UoIklu
c2VydFNlcnZpY2UiKTpHZXRCYXNlQ2F0ZWdvcmllcygpLCBzZXRQYW5lbCkNCglsb2NhbCB1
c2VyRGF0YSA9IGdhbWU6R2V0U2VydmljZSgiSW5zZXJ0U2VydmljZSIpOkdldFVzZXJDYXRl
Z29yaWVzKHVzZXJJZCkNCglpZiB1c2VyRGF0YSB0aGVuDQoJCURhdGEuVXNlckNhdGVnb3J5
QnV0dG9ucyA9IHByb2Nlc3NDYXRlZ29yeSh1c2VyRGF0YSwgc2V0UGFuZWwpDQoJZW5kDQoN
Cglsb2NhbCBpbnNlcnRQYW5lbCA9IEluc3RhbmNlLm5ldygiSW1hZ2VMYWJlbCIpDQoJaW5z
ZXJ0UGFuZWwuTmFtZSA9ICJJbnNlcnRQYW5lbCINCglpbnNlcnRQYW5lbC5JbWFnZSA9ICJo
dHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTM2MzM3Mjc0Ig0KCWluc2VydFBhbmVs
LlBvc2l0aW9uID0gVURpbTIubmV3KDAuMCwgMCwgMC4wLCAwKQ0KCWluc2VydFBhbmVsLlNp
emUgPSBVRGltMi5uZXcoMS4yLCAwLCAxLjEsIDApDQoJaW5zZXJ0UGFuZWwuQmFja2dyb3Vu
ZFRyYW5zcGFyZW5jeSA9IDENCglpbnNlcnRQYW5lbC5QYXJlbnQgPSBpbnNlcnRUYWINCg0K
CWxvY2FsIGluc2VydEJ1dHRvbnMgPSB7fQ0KCWZvciB5ID0gMSwgSW5zZXJ0Um93cyBkbw0K
CQlmb3IgeCA9IDEsIEluc2VydENvbHVtbnMgZG8NCgkJCWluc2VydEJ1dHRvbnNbeCAgKyAo
eSAtIDEpICogSW5zZXJ0Q29sdW1uc10gPSBidWlsZEluc2VydEJ1dHRvbihVRGltMi5uZXco
LjMqKHgtMSkgKyAwLjA1LCAwLCAwLjExKih5LTEpICsgMC4xNSwgMCksIFVEaW0yLm5ldygu
MzIsIC00LCAuMTIsIC00KSkNCgkJCWluc2VydEJ1dHRvbnNbeCAgKyAoeSAtIDEpICogSW5z
ZXJ0Q29sdW1uc10uUGFyZW50ID0gaW5zZXJ0UGFuZWwNCgkJZW5kDQoJZW5kCQ0KDQoJRGF0
YS5JbnNlcnRCdXR0b25zID0gaW5zZXJ0QnV0dG9ucw0KCURhdGEuTWFpbi5JbnNlcnRSb3dz
ID0gSW5zZXJ0Um93cw0KCURhdGEuTWFpbi5JbnNlcnRDb2x1bW5zID0gSW5zZXJ0Q29sdW1u
cw0KDQoJbG9jYWwgZm9vdGVyUGFuZWwgPSBJbnN0YW5jZS5uZXcoIkZyYW1lIikNCglmb290
ZXJQYW5lbC5OYW1lID0gIkZvb3RlciINCglmb290ZXJQYW5lbC5TaXplID0gVURpbTIubmV3
KDEuMCwgMCwgMC4wNiwgMCkNCglmb290ZXJQYW5lbC5Qb3NpdGlvbiA9IFVEaW0yLm5ldygw
LjAsIDAsIDEuMDMsIDApDQoJZm9vdGVyUGFuZWwuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9
IDENCglmb290ZXJQYW5lbC5CYWNrZ3JvdW5kQ29sb3IzID0gZnJhbWVDb2xvcg0KCWZvb3Rl
clBhbmVsLlBhcmVudCA9IGluc2VydFRhYg0KCQ0KCWxvY2FsIHJvbGxvdmVyVGV4dCA9IElu
c3RhbmNlLm5ldygiVGV4dExhYmVsIikNCglyb2xsb3ZlclRleHQuTmFtZSA9ICJSb2xsb3Zl
clRleHQiDQoJcm9sbG92ZXJUZXh0LlNpemUgPSBVRGltMi5uZXcoMC44LCAwLCAxLjAsIDAp
DQoJcm9sbG92ZXJUZXh0LlBvc2l0aW9uID0gVURpbTIubmV3KDAuMiwgMCwgMC4wLCAwKQ0K
CXJvbGxvdmVyVGV4dC5UZXh0Q29sb3IgPSBCcmlja0NvbG9yLldoaXRlKCkNCglyb2xsb3Zl
clRleHQuQmFja2dyb3VuZENvbG9yMyA9IGZyYW1lQ29sb3INCglyb2xsb3ZlclRleHQuQmFj
a2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCglyb2xsb3ZlclRleHQuVGV4dCA9ICIiDQoJcm9s
bG92ZXJUZXh0LlRleHRXcmFwID0gdHJ1ZQ0KCXJvbGxvdmVyVGV4dFhBbGlnbm1lbnQgPSAy
DQoJcm9sbG92ZXJUZXh0LlBhcmVudCA9IGZvb3RlclBhbmVsDQoJV2luZG93Lk1haW4uUm9s
bG92ZXJUZXh0ID0gcm9sbG92ZXJUZXh0DQoNCglsb2NhbCBwcmV2aW91c0J1dHRvbiA9IElu
c3RhbmNlLm5ldygiSW1hZ2VCdXR0b24iKQ0KCXByZXZpb3VzQnV0dG9uLkltYWdlID0gImh0
dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9MzYzNDAwMTEiDQoJcHJldmlvdXNCdXR0
b24uTmFtZSA9ICJQcmV2aW91c1BhZ2VCdXR0b24iDQoJcHJldmlvdXNCdXR0b24uU2l6ZSA9
IFVEaW0yLm5ldygwLjEsIDAsIDEuMCwgMCkNCglwcmV2aW91c0J1dHRvbi5Qb3NpdGlvbiA9
IFVEaW0yLm5ldygwLjEsIDAsIDAuMCwgMCkNCglwcmV2aW91c0J1dHRvbi5CYWNrZ3JvdW5k
Q29sb3IzID0gYnV0dG9uQ29sb3INCglwcmV2aW91c0J1dHRvbi5BdXRvQnV0dG9uQ29sb3Ig
PSBmYWxzZQ0KCXByZXZpb3VzQnV0dG9uLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxDQoN
CglwcmV2aW91c0J1dHRvbi5Nb3VzZUJ1dHRvbjFDbGljazpjb25uZWN0KHByZXZpb3VzU2V0
UGFnZSkNCglwcmV2aW91c0J1dHRvbi5QYXJlbnQgPSBmb290ZXJQYW5lbA0KCXByZXZpb3Vz
QnV0dG9uLlZpc2libGUgPSBmYWxzZQ0KCVdpbmRvdy5NYWluLlByZXZpb3VzUGFnZUJ1dHRv
biA9IHByZXZpb3VzQnV0dG9uDQoNCglsb2NhbCBuZXh0QnV0dG9uID0gSW5zdGFuY2UubmV3
KCJJbWFnZUJ1dHRvbiIpDQoJbmV4dEJ1dHRvbi5JbWFnZSA9ICJodHRwOi8vd3d3LnJvYmxv
eC5jb20vYXNzZXQvP2lkPTM2MzM5OTc4Ig0KCW5leHRCdXR0b24uTmFtZSA9ICJOZXh0UGFn
ZUJ1dHRvbiINCgluZXh0QnV0dG9uLlNpemUgPSBVRGltMi5uZXcoMC4xLCAwLCAxLjAsIDAp
DQoJbmV4dEJ1dHRvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygxLCAwLCAwLjAsIDApDQoJbmV4
dEJ1dHRvbi5BdXRvQnV0dG9uQ29sb3IgPSBmYWxzZQ0KCW5leHRCdXR0b24uQmFja2dyb3Vu
ZFRyYW5zcGFyZW5jeSA9IDENCg0KCW5leHRCdXR0b24uTW91c2VCdXR0b24xQ2xpY2s6Y29u
bmVjdChuZXh0U2V0UGFnZSkNCgluZXh0QnV0dG9uLlBhcmVudCA9IGZvb3RlclBhbmVsDQoJ
bmV4dEJ1dHRvbi5WaXNpYmxlID0gZmFsc2UNCglXaW5kb3cuTWFpbi5OZXh0UGFnZUJ1dHRv
biA9IG5leHRCdXR0b24NCg0KCWNyZWF0ZURyb3BEb3duTWVudShtYWluRnJhbWUsIFdpbmRv
dykNCg0KZW5kDQoNCmZ1bmN0aW9uIGxheW91dEluc2VydEJ1dHRvbnMoZ3VpTWFpbikNCgls
b2NhbCBzaXplID0gZ3VpTWFpbi5BYnNvbHV0ZVNpemUNCgkNCglsb2NhbCBmcmFtZVNpemUg
PSAwLjc1ICogc2l6ZQ0KCWxvY2FsIGZyYW1lU2l6ZVVzZWQgPSBWZWN0b3IyLm5ldygwLCBo
ZWlnaHQqMikNCg0KCS0tV2Ugd2FudCAxNSUgb3IgMTAwIHBpeGVscywgd2hpY2ggZXZlciBp
cyBzbWFsbGVyDQoJaWYgZnJhbWVTaXplLnggKiAuMTUgPCAxMDAgdGhlbg0KCQlsb2NhbCBv
bGRTaXplID0gV2luZG93Lk1haW4uRnJhbWUuU2V0VGFiLlNpemUNCgkJV2luZG93Lk1haW4u
RnJhbWUuU2V0VGFiLlNpemUgPSBVRGltMi5uZXcoMC4wLCAxMDAsIG9sZFNpemUuWS5TY2Fs
ZSwgb2xkU2l6ZS5ZLk9mZnNldCkNCgkJV2luZG93Lk1haW4uRnJhbWUuSW5zZXJ0VGFiLlBv
c2l0aW9uID0gVURpbTIubmV3KDAuMCwgMTAwLCAwLjAsIDApDQoJCWZyYW1lU2l6ZVVzZWQg
PSBWZWN0b3IyLm5ldyhmcmFtZVNpemVVc2VkLnggKyAxMDAsIGZyYW1lU2l6ZVVzZWQueSkN
CgllbHNlDQoJCWxvY2FsIG9sZFNpemUgPSBXaW5kb3cuTWFpbi5GcmFtZS5TZXRUYWIuU2l6
ZQ0KCQlXaW5kb3cuTWFpbi5GcmFtZS5TZXRUYWIuU2l6ZSA9IFVEaW0yLm5ldygwLjE1LCAw
LCBvbGRTaXplLlkuU2NhbGUsIG9sZFNpemUuWS5PZmZzZXQpDQoJCVdpbmRvdy5NYWluLkZy
YW1lLkluc2VydFRhYi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjE1LCAwLCAwLjAsIDApDQoJ
CWZyYW1lU2l6ZVVzZWQgPSBWZWN0b3IyLm5ldyhmcmFtZVNpemVVc2VkLnggKyAuMTUqZnJh
bWVTaXplLngsIGZyYW1lU2l6ZVVzZWQueSkNCgllbmQNCg0KCS0tRGVjaWRlIGhvdyBtYW55
IGJ1dHRvbnMgd2UgY2FuIGZpdCwgYW5kIHdoYXQgc2l6ZSB0byBtYWtlIHRoZSBpbnNlcnQg
YnV0dG9ucw0KCS0tMiBzaXplcyBvZiBpbnNlcnQgYnV0dG9ucywgNTB4NTAgYW5kIDEwMHgx
MDANCg0KCWxvY2FsIGJ1dHRvblNpemUgPSAxMTANCgl3aGlsZSBidXR0b25TaXplID4gNzAg
YW5kIG1hdGguZmxvb3IoKGZyYW1lU2l6ZSAtIGZyYW1lU2l6ZVVzZWQpLngvYnV0dG9uU2l6
ZSkgKiBtYXRoLmZsb29yKChmcmFtZVNpemUgLSBmcmFtZVNpemVVc2VkKS55L2J1dHRvblNp
emUpIDwgMzIgZG8NCgkJYnV0dG9uU2l6ZSA9IGJ1dHRvblNpemUgLSAxMA0KCWVuZA0KCQ0K
CURhdGEuTWFpbi5JbnNlcnRDb2x1bW5zID0gbWF0aC5taW4obWF0aC5tYXgoMSwgbWF0aC5m
bG9vcigoZnJhbWVTaXplIC0gZnJhbWVTaXplVXNlZCkueC9idXR0b25TaXplKSksIEluc2Vy
dENvbHVtbnMpDQoJRGF0YS5NYWluLkluc2VydFJvd3MgPSBtYXRoLm1pbihtYXRoLm1heCgx
LCBtYXRoLmZsb29yKChmcmFtZVNpemUgLSBmcmFtZVNpemVVc2VkKS55L2J1dHRvblNpemUp
KSwgSW5zZXJ0Um93cykNCgkNCglmb3IgaW5kZXgsIGJ1dHRvbiBpbiBwYWlycyhEYXRhLklu
c2VydEJ1dHRvbnMpIGRvDQoJCWlmIGluZGV4IDw9IERhdGEuTWFpbi5JbnNlcnRSb3dzICog
RGF0YS5NYWluLkluc2VydENvbHVtbnMgdGhlbg0KCQkJYnV0dG9uLlZpc2libGUgPSB0cnVl
DQoJCQlidXR0b24uU2l6ZSA9IFVEaW0yLm5ldygwLCBidXR0b25TaXplLTQsIDAsIGJ1dHRv
blNpemUtNCkNCgkJCWJ1dHRvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLCBidXR0b25TaXpl
ICogKChpbmRleC0xKSVEYXRhLk1haW4uSW5zZXJ0Q29sdW1ucykgKyAyICsgMiwNCgkJCQkJ
CQkJICAgICAgIDAsIGJ1dHRvblNpemUgKiBtYXRoLmZsb29yKChpbmRleC0xKS9EYXRhLk1h
aW4uSW5zZXJ0Q29sdW1ucykgKyAyICsgMikNCgkJZWxzZQ0KCQkJYnV0dG9uLlZpc2libGUg
PSBmYWxzZQ0KCQllbmQNCgllbmQNCglXaW5kb3cuTWFpbi5GcmFtZS5JbnNlcnRUYWIuU2l6
ZSA9IFVEaW0yLm5ldygwLjAsIGJ1dHRvblNpemUgKiBEYXRhLk1haW4uSW5zZXJ0Q29sdW1u
cyArIDQsIDAuMCwgYnV0dG9uU2l6ZSAqIERhdGEuTWFpbi5JbnNlcnRSb3dzICsgaGVpZ2h0
KjIgKyA0KQ0KDQoJaWYgRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRlZ29yeV0uSW5k
ZXggPT0gbmlsIHRoZW4NCgkJc2V0U2V0SW5kZXgoMCkNCgllbHNlDQoJCXNldFNldEluZGV4
KERhdGEuQ2F0ZWdvcnlbRGF0YS5DdXJyZW50Q2F0ZWdvcnldLkluZGV4KQ0KCWVuZA0KCQ0K
CWxvY2FsIGZpbmFsRnJhbWVIZWlnaHQgPSBmcmFtZVNpemVVc2VkLnkgKyBEYXRhLk1haW4u
SW5zZXJ0Um93cypidXR0b25TaXplICsgNA0KCVdpbmRvdy5NYWluLkZyYW1lLlNpemUgPSBV
RGltMi5uZXcoMCwgZnJhbWVTaXplVXNlZC54ICsgRGF0YS5NYWluLkluc2VydENvbHVtbnMq
YnV0dG9uU2l6ZSArIDQsIDAsIGZpbmFsRnJhbWVIZWlnaHQpDQoJV2luZG93Lk1haW4uRnJh
bWUuUG9zaXRpb24gPSBVRGltMi5uZXcoMC4wLCAwLCAxLjAsIC1XaW5kb3cuTWFpbi5GcmFt
ZS5TaXplLlkuT2Zmc2V0KQ0KDQoJaWYgRGF0YS5DYXRlZ29yeVtEYXRhLkN1cnJlbnRDYXRl
Z29yeV0uU2V0SW5kZXggPT0gbmlsIHRoZW4NCgkJbGF5b3V0U2V0QnV0dG9ucyhmaW5hbEZy
YW1lSGVpZ2h0LCAxKQ0KCWVsc2UNCgkJbGF5b3V0U2V0QnV0dG9ucyhmaW5hbEZyYW1lSGVp
Z2h0LCBEYXRhLkNhdGVnb3J5W0RhdGEuQ3VycmVudENhdGVnb3J5XS5TZXRJbmRleCkNCgll
bmQNCmVuZA0KDQpmdW5jdGlvbiBsYXlvdXRTZXRCdXR0b25zKGZyYW1lSGVpZ2h0LCBzZXRJ
bmRleCkNCglEYXRhLk1haW4uRnJhbWVIZWlnaHQgPSBmcmFtZUhlaWdodA0KCURhdGEuTWFp
bi5JbnNlcnRTZXRzID0gbWF0aC5mbG9vcihmcmFtZUhlaWdodCAvIChoZWlnaHQqMikpDQoJ
aWYgI0RhdGEuQ3VycmVudENhdGVnb3J5ID4gRGF0YS5NYWluLkluc2VydFNldHMgdGhlbg0K
CQktLVN0ZWFsIG9uZSBlbnRyeSBzaW5jZSB3ZSBoYXZlIHR3byBtYW55IHRoaW5ncw0KCQlE
YXRhLk1haW4uSW5zZXJ0U2V0cyA9IERhdGEuTWFpbi5JbnNlcnRTZXRzIC0gMSANCgllbmQN
Cg0KCXByaW50KCJMYXlvdXQgU2V0IEJ1dHRvbnMgaW5kZXg9IiAuLiBzZXRJbmRleCAuLiAi
LCBJbnNlcnRTZXRzPSIuLkRhdGEuTWFpbi5JbnNlcnRTZXRzKQ0KCQ0KCXNldENhdGVnb3J5
SW5kZXgoc2V0SW5kZXgpDQplbmQNCg0KDQpmdW5jdGlvbiBpbnNlcnRDb21wbGV0ZSgpDQoJ
V2luZG93LkxvYWRpbmcuRnJhbWUuVmlzaWJsZSA9IGZhbHNlDQoJV2luZG93LlN0YW1wLkZy
YW1lLlZpc2libGUgPSBmYWxzZQ0KCVdpbmRvdy5NYWluLkZyYW1lLlZpc2libGUgPSB0cnVl
DQplbmQNCg0KZnVuY3Rpb24gVW5sb2NrSW5zdGFuY2VzKG9iamVjdCkNCglpZiBvYmplY3Q6
SXNBKCJCYXNlUGFydCIpIHRoZW4NCgkJb2JqZWN0LkxvY2tlZCA9IGZhbHNlDQoJZW5kDQoJ
Zm9yIGluZGV4LGNoaWxkIGluIHBhaXJzKG9iamVjdDpHZXRDaGlsZHJlbigpKSBkbw0KCQlV
bmxvY2tJbnN0YW5jZXMoY2hpbGQpDQoJZW5kDQplbmQNCg0KZnVuY3Rpb24gYmVnaW5JbnNl
cnREZWNhbChkZWNhbCkNCg0KCURhdGEuU3RhbXAuRGVjYWxTZWxlY3Rpb24gPSBJbnN0YW5j
ZS5uZXcoIlN1cmZhY2VTZWxlY3Rpb24iKQ0KCURhdGEuU3RhbXAuRGVjYWxTZWxlY3Rpb24u
Q29sb3IgPSBCcmlja0NvbG9yLm5ldygiQnJpZ2h0IG9yYW5nZSIpDQoJRGF0YS5TdGFtcC5E
ZWNhbFNlbGVjdGlvbi5hcmNoaXZhYmxlID0gZmFsc2UNCglEYXRhLlN0YW1wLkRlY2FsU2Vs
ZWN0aW9uLlBhcmVudCA9IGdldFBsYXllcigpLlBsYXllckd1aQ0KCQ0KCS0tU2F2ZSB0aGUg
ZGVjYWwgaW4gb3VyIEx1YSBjb2RlIGZvciBsYXRlciB1c2UNCglEYXRhLlN0YW1wLkRlY2Fs
ID0gZGVjYWwNCglEYXRhLlN0YW1wLkRlY2FsLlBhcmVudCA9IG5pbA0KZW5kDQoNCmZ1bmN0
aW9uIG1vdmVMb2FkaW5nV2luZG93KCkNCglsb2NhbCBzcGVlZCA9IDAuMDA1DQoJd2hpbGUg
V2luZG93LkxvYWRpbmcuRnJhbWUuVmlzaWJsZSBkbw0KCQl3aGlsZSBXaW5kb3cuTG9hZGlu
Zy5GcmFtZS5WaXNpYmxlIGFuZCBXaW5kb3cuTG9hZGluZy5GcmFtZS5Qb3NpdGlvbi5ZLlNj
YWxlIDwgKDEgLSBXaW5kb3cuTG9hZGluZy5GcmFtZS5TaXplLlkuU2NhbGUpIGRvDQoJCQlX
aW5kb3cuTG9hZGluZy5GcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldyhXaW5kb3cuTG9hZGlu
Zy5GcmFtZS5Qb3NpdGlvbi5YLlNjYWxlLFdpbmRvdy5Mb2FkaW5nLkZyYW1lLlBvc2l0aW9u
LlguT2Zmc2V0LFdpbmRvdy5Mb2FkaW5nLkZyYW1lLlBvc2l0aW9uLlkuU2NhbGUgKyBzcGVl
ZCxXaW5kb3cuTG9hZGluZy5GcmFtZS5Qb3NpdGlvbi5ZLk9mZnNldCkNCgkJCXdhaXQoKQ0K
CQllbmQNCgkJd2hpbGUgV2luZG93LkxvYWRpbmcuRnJhbWUuVmlzaWJsZSBhbmQgV2luZG93
LkxvYWRpbmcuRnJhbWUuUG9zaXRpb24uWS5TY2FsZSA+IDAgZG8NCgkJCVdpbmRvdy5Mb2Fk
aW5nLkZyYW1lLlBvc2l0aW9uID0gVURpbTIubmV3KFdpbmRvdy5Mb2FkaW5nLkZyYW1lLlBv
c2l0aW9uLlguU2NhbGUsV2luZG93LkxvYWRpbmcuRnJhbWUuUG9zaXRpb24uWC5PZmZzZXQs
V2luZG93LkxvYWRpbmcuRnJhbWUuUG9zaXRpb24uWS5TY2FsZSAtIHNwZWVkLFdpbmRvdy5M
b2FkaW5nLkZyYW1lLlBvc2l0aW9uLlkuT2Zmc2V0KQ0KCQkJd2FpdCgpDQoJCWVuZA0KCWVu
ZA0KZW5kDQoNCmZ1bmN0aW9uIHJlc2V0TG9hZGluZ1dpbmRvdygpDQoJV2luZG93LkxvYWRp
bmcuRnJhbWUuVmlzaWJsZSA9IGZhbHNlDQoJV2luZG93LkxvYWRpbmcuRnJhbWUuUG9zaXRp
b24gPSBVRGltMi5uZXcoMCwwLDAsMCkNCmVuZA0KDQpmdW5jdGlvbiBiZWdpbkluc2VydEFz
c2V0KGFzc2V0TmFtZSwgYXNzZXRJZCwgaW1hZ2UsIHN0YW1wTW9kZSkNCgktLUNvcHkgb3Zl
ciBkZXRhaWxzIGludG8gZGlhbG9nIHdpbmRvdw0KCVdpbmRvdy5Mb2FkaW5nLkFzc2V0VGh1
bWJMYWJlbC5JbWFnZSA9IGltYWdlDQoJV2luZG93LkxvYWRpbmcuQXNzZXROYW1lTGFiZWwu
VGV4dCA9IGFzc2V0TmFtZQ0KCQ0KCVdpbmRvdy5TdGFtcC5Bc3NldFRodW1iTGFiZWwuSW1h
Z2UgPSBpbWFnZQ0KCVdpbmRvdy5TdGFtcC5Bc3NldE5hbWVMYWJlbC5UZXh0ID0gYXNzZXRO
YW1lDQoJRGF0YS5TdGFtcC5TdGFtcE1vZGUgPSBzdGFtcE1vZGUNCg0KCS0tSGlkZSB0aGUg
bWFpbiB3aW5kb3cNCglXaW5kb3cuTWFpbi5GcmFtZS5WaXNpYmxlID0gZmFsc2UNCgktLVNo
b3cgdGhlIGRpYWxvZyB3aW5kb3cNCglsb2NhbCBtb3ZlciA9IGNvcm91dGluZS5jcmVhdGUo
bW92ZUxvYWRpbmdXaW5kb3cpDQoJV2luZG93LkxvYWRpbmcuRnJhbWUuVmlzaWJsZSA9IHRy
dWUNCgljb3JvdXRpbmUucmVzdW1lKG1vdmVyKQ0KCURhdGEuTG9hZGluZy5DYW5jZWxsZWQg
PSBmYWxzZQ0KDQoJLS1UaGlzIGNhbGwgd2lsbCBjYXVzZSBhICJ3YWl0IiB1bnRpbCB0aGUg
ZGF0YSBjb21lcyBiYWNrDQoJbG9jYWwgaWQgPSBtYXRoLnJhbmRvbSg1LDUwMCkNCglwcmlu
dCgibG9hZGluZyBpZCA9ICIgLi4gdG9zdHJpbmcoaWQpKQ0KCWxvY2FsIHJvb3QNCglsb2Nh
bCBsb2FkZXINCglsb2FkaW5nID0gdHJ1ZQ0KCWlmIHVzZUFzc2V0VmVyc2lvbklkIHRoZW4N
CgkJbG9hZGVyID0gY29yb3V0aW5lLmNyZWF0ZShmdW5jdGlvbigpCQ0KCQkJcm9vdCA9IGdh
bWU6R2V0U2VydmljZSgiSW5zZXJ0U2VydmljZSIpOkxvYWRBc3NldFZlcnNpb24oYXNzZXRJ
ZCkNCgkJCWxvYWRpbmcgPSBmYWxzZQ0KCQllbmQpDQoJCWNvcm91dGluZS5yZXN1bWUobG9h
ZGVyKQ0KCQktLXJvb3QgPSBnYW1lOkdldFNlcnZpY2UoIkluc2VydFNlcnZpY2UiKTpMb2Fk
QXNzZXRWZXJzaW9uKGFzc2V0SWQpDQoJZWxzZQ0KCQlsb2FkZXIgPSBjb3JvdXRpbmUuY3Jl
YXRlKGZ1bmN0aW9uKCkJDQoJCQlyb290ID0gZ2FtZTpHZXRTZXJ2aWNlKCJJbnNlcnRTZXJ2
aWNlIik6TG9hZEFzc2V0KGFzc2V0SWQpDQoJCQlsb2FkaW5nID0gZmFsc2UNCgkJZW5kKQ0K
CQljb3JvdXRpbmUucmVzdW1lKGxvYWRlcikNCgkJLS1yb290ID0gZ2FtZTpHZXRTZXJ2aWNl
KCJJbnNlcnRTZXJ2aWNlIik6TG9hZEFzc2V0KGFzc2V0SWQpDQoJZW5kDQoJbG9jYWwgY291
bnQgPSAwDQoJd2hpbGUgbG9hZGluZyBhbmQgY291bnQgPCA1IGRvDQoJCWNvdW50ID0gY291
bnQgKyAxDQoJCXdhaXQoMSkNCgllbmQNCglsb2FkaW5nID0gZmFsc2UNCg0KCWlmIGNvdW50
ID49IDUgdGhlbg0KCQlwcmludCgiZmFpbGVkIGxvYWRpbmcgaWQgPSAiIC4uIHRvc3RyaW5n
KGlkKSkNCgllbHNlDQoJCXByaW50KCJmaW5pc2hlZCBsb2FkaW5nIGlkID0gIiAuLiB0b3N0
cmluZyhpZCkpDQoJZW5kDQoNCglpZiBEYXRhLkxvYWRpbmcuQ2FuY2VsbGVkIG9yIGNvdW50
ID49NSB0aGVuDQoJCS0tVGhlIHVzZXIgZ290IGJvcmVkIGFuZCB3YW5kZXJlZCBvZmYNCg0K
CQktLUp1c3QgZGVsZXRlIHRoZSBtb2RlbCBmcm9tIHRoZSB3b3JsZC4uLiBhIHNoYW1lIHdl
IGxvYWRlZCBpdCB3aGVuIHRoZXkgZ290IGJvcmVkDQoJCWlmIHJvb3QgdGhlbg0KCQkJcm9v
dDpSZW1vdmUoKQ0KCQllbmQNCgkJV2luZG93LkxvYWRpbmcuRnJhbWUuVmlzaWJsZSA9IGZh
bHNlDQoJCVdpbmRvdy5NYWluLkZyYW1lLlZpc2libGUgPSB0cnVlDQoJCXJldHVybg0KDQoJ
ZWxzZQkJDQoJCWxvY2FsIGluc3RhbmNlcyA9IHJvb3Q6R2V0Q2hpbGRyZW4oKQ0KCQlpZiAj
aW5zdGFuY2VzID09IDAgdGhlbg0KCQkJcm9vdDpSZW1vdmUoKQ0KCQkJaW5zZXJ0Q29tcGxl
dGUoKQ0KCQkJcmV0dXJuDQoJCWVuZA0KDQoJCS0tVW5sb2NrIGFsbCBwYXJ0cyB0aGF0IGFy
ZSBpbnNlcnRlZCwgdG8gbWFrZSBzdXJlIHRoZXkgYXJlIGVkaXRhYmxlDQoJCVVubG9ja0lu
c3RhbmNlcyhyb290KQ0KDQoJCS0tQ29udGludWUgdGhlIGluc2VydCBwcm9jZXNzDQoJCXJv
b3QuTmFtZSA9ICJJbnNlcnRlZE9iamVjdCIgLi4gYXNzZXRJZA0KDQoJCS0tRXhhbWluZSB0
aGUgY29udGVudHMgYW5kIGRlY2lkZSB3aGF0IGl0IGxvb2tzIGxpa2UNCgkJZm9yIHBvcywg
aW5zdGFuY2UgaW4gcGFpcnMoaW5zdGFuY2VzKSBkbw0KCQkJLS1TaW5nbGUgaW5zdGFuY2Ug
b2JqZWN0cyBtaWdodCBiZSB0cmVhdGVkIHNwZWNpYWwsIGRlY2Fscy9za3lib3hlcw0KCQkJ
aWYgaW5zdGFuY2U6SXNBKCJEZWNhbCIpIHRoZW4NCgkJCQktLUN1cnJlbnQgc3lzdGVtIGhl
cmUgc3RvcHMgYWZ0ZXIgZmluZGluZyBvbmUgRGVjYWwgKGFuZCBnaXZlcyB5b3UgRGVjYWwg
dG9vbCkNCgkJCQktLVdlIHNob3VsZCBkbyB0aGUgc2FtZSAocHJvYmFibHkpDQoJCQkJYmVn
aW5JbnNlcnREZWNhbChpbnN0YW5jZSkNCgkJCQlyb290OlJlbW92ZSgpDQoJCQkJDQoJCQkJ
V2luZG93LlN0YW1wLkZyYW1lLlZpc2libGUgPSB0cnVlDQoJCQkJV2luZG93LkxvYWRpbmcu
RnJhbWUuVmlzaWJsZSA9IGZhbHNlDQoJCQkJcmV0dXJuDQoJCQllbHNlaWYgaW5zdGFuY2U6
SXNBKCJUZWFtIikgdGhlbg0KCQkJCWluc3RhbmNlLlBhcmVudCA9IGdhbWU6R2V0U2Vydmlj
ZSgiVGVhbXMiKQ0KCQkJZWxzZWlmIGluc3RhbmNlOklzQSgiU3Bhd25Mb2NhdGlvbiIpIHRo
ZW4NCgkJCQkNCgkJCWVsc2VpZiBpbnN0YW5jZTpJc0EoIkhvcHBlckJpbiIpIHRoZW4NCgkJ
CQktLSBNdXN0IGdvIGludG8gdGhlIHN0YXJ0ZXJQYWNrLCBwcm9tcHQgdXNlcj8NCgkJCWVs
c2VpZiBpbnN0YW5jZTpJc0EoIlRvb2wiKSB0aGVuDQoJCQkJLS0gQXNrIHRoZW0gaWYgaXQg
c2hvdWxkIGdvIGluIFN0YXJ0ZXJQYWNrPyANCgkJCWVsc2VpZiBpbnN0YW5jZTpJc0EoIlNr
eSIpIHRoZW4NCgkJCQlsb2NhbCBsaWdodGluZ1NlcnZpY2UgPSBnYW1lOkdldFNlcnZpY2Uo
IkxpZ2h0aW5nIikNCgkJCQlmb3IgaW5kZXgsY2hpbGQgaW4gcGFpcnMobGlnaHRpbmdTZXJ2
aWNlOkdldENoaWxkcmVuKCkpIGRvDQoJCQkJCWlmIGNoaWxkOklzQSgiU2t5IikgdGhlbg0K
CQkJCQkJY2hpbGQ6UmVtb3ZlKCk7DQoJCQkJCWVuZA0KCQkJCWVuZA0KCQkJCWluc3RhbmNl
LlBhcmVudCA9IGxpZ2h0aW5nU2VydmljZQ0KCQkJCXJldHVybg0KCQkJZWxzZQ0KCQkJCQ0K
CQkJZW5kDQoJCWVuZA0KDQoJCWlmICNyb290OkdldENoaWxkcmVuKCkgPT0gMCB0aGVuDQoJ
CQlyb290OlJlbW92ZSgpDQoJCQlpbnNlcnRDb21wbGV0ZSgpDQoJCQlyZXR1cm4NCgkJZW5k
DQoNCgkJcmVzZXRMb2FkaW5nV2luZG93KCkNCgkJcHJpbnQoImRvbmUgbG9hZGluZz8iKQ0K
DQoJCVdpbmRvdy5TdGFtcC5GcmFtZS5WaXNpYmxlID0gdHJ1ZQ0KCQlEYXRhLlN0YW1wLk1v
ZGVsID0gcm9vdA0KCWVuZA0KZW5kDQoNCmZ1bmN0aW9uIGNhbmNlbEFzc2V0TG9hZCgpDQoJ
RGF0YS5Mb2FkaW5nLkNhbmNlbGxlZCA9IHRydWUNCglpbnNlcnRDb21wbGV0ZSgpDQplbmQN
Cg0KZnVuY3Rpb24gYnVpbGRMb2FkaW5nRGlhbG9nR3VpKHJvb3QpDQoJV2luZG93LkxvYWRp
bmcgPSB7fQ0KCURhdGEuTG9hZGluZyA9IHt9DQoNCglsb2NhbCBkaWFsb2dGcmFtZSA9IElu
c3RhbmNlLm5ldygiSW1hZ2VMYWJlbCIpDQoJZGlhbG9nRnJhbWUuSW1hZ2UgPSAiaHR0cDov
L3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjI2OTQ4NSINCglkaWFsb2dGcmFtZS5OYW1l
ID0gIkluc2VydExvYWRpbmdEaWFsb2ciDQoJZGlhbG9nRnJhbWUuU2l6ZSA9IFVEaW0yLm5l
dygxLjYsIDAsIDAuMywgMCkNCglkaWFsb2dGcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygw
LjAsIDAsIDAsIDApDQoJZGlhbG9nRnJhbWUuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEN
CglkaWFsb2dGcmFtZS5BY3RpdmUgPSB0cnVlDQoJZGlhbG9nRnJhbWUuUGFyZW50ID0gcm9v
dA0KCWRpYWxvZ0ZyYW1lLlZpc2libGUgPSBmYWxzZQ0KCVdpbmRvdy5Mb2FkaW5nLkZyYW1l
ID0gZGlhbG9nRnJhbWUNCg0KCWxvY2FsIGFzc2V0QmFja2luZyA9IEluc3RhbmNlLm5ldygi
SW1hZ2VMYWJlbCIpDQoJYXNzZXRCYWNraW5nLkltYWdlID0gImh0dHA6Ly93d3cucm9ibG94
LmNvbS9hc3NldC8/aWQ9MzY0MjYxMDUiDQoJYXNzZXRCYWNraW5nLkJhY2tncm91bmRUcmFu
c3BhcmVuY3kgPSAxDQoJYXNzZXRCYWNraW5nLlpJbmRleCA9IDENCglhc3NldEJhY2tpbmcu
U2l6ZSA9IFVEaW0yLm5ldygxLDAsMSwwKQ0KDQoJbG9jYWwgYXNzZXRUaHVtYiA9IEluc3Rh
bmNlLm5ldygiSW1hZ2VMYWJlbCIpDQoJYXNzZXRUaHVtYi5Qb3NpdGlvbiA9IFVEaW0yLm5l
dygwLjAsIDIsIDAuMCwgMikNCglhc3NldFRodW1iLlNpemUgPSBVRGltMi5uZXcoMC41LCAt
NCwgMS4wLCAtNCkNCglhc3NldFRodW1iLlBhcmVudCA9IGRpYWxvZ0ZyYW1lDQoJYXNzZXRU
aHVtYi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0gMQ0KCWFzc2V0VGh1bWIuWkluZGV4ID0g
Mg0KCVdpbmRvdy5Mb2FkaW5nLkFzc2V0VGh1bWJMYWJlbCA9IGFzc2V0VGh1bWINCglhc3Nl
dEJhY2tpbmcuUGFyZW50ID0gYXNzZXRUaHVtYg0KDQoJbG9jYWwgZGVzY3JpcHRpb25GcmFt
ZSA9IEluc3RhbmNlLm5ldygiRnJhbWUiKQ0KCWRlc2NyaXB0aW9uRnJhbWUuTmFtZSA9ICJE
ZXNjcmlwdGlvbiINCglkZXNjcmlwdGlvbkZyYW1lLlNpemUgPSBVRGltMi5uZXcoMC41LCAw
LCAxLjAsIDApDQoJZGVzY3JpcHRpb25GcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjUs
IDAsIDAuMCwgMCkNCglkZXNjcmlwdGlvbkZyYW1lLlRyYW5zcGFyZW5jeSA9IDENCglkZXNj
cmlwdGlvbkZyYW1lLlBhcmVudCA9IGRpYWxvZ0ZyYW1lDQoNCglsb2NhbCBsYWJlbCA9IElu
c3RhbmNlLm5ldygiVGV4dExhYmVsIikNCglsYWJlbC5UZXh0ID0gIkxvYWRpbmcuLi4iDQoJ
bGFiZWwuRm9udFNpemUgPSAyDQoJbGFiZWwuUG9zaXRpb24gPSBVRGltMi5uZXcoMC41LCAw
LCAwLCAwKTsNCglsYWJlbC5TaXplID0gVURpbTIubmV3KDAuMCwgMCwgMC4wLCBoZWlnaHQp
DQoJbGFiZWwuQm9yZGVyU2l6ZVBpeGVsID0gMA0KCWxhYmVsLlRleHRDb2xvcjMgPSBmcmFt
ZVRleHRDb2xvcg0KCWxhYmVsLlBhcmVudCA9IGRlc2NyaXB0aW9uRnJhbWUNCgkNCglsb2Nh
bCBhc3NldExhYmVsID0gSW5zdGFuY2UubmV3KCJUZXh0TGFiZWwiKQ0KCWFzc2V0TGFiZWwu
VGV4dCA9ICJZb3VyIEFzc2V0IEhlcmUiDQoJYXNzZXRMYWJlbC5Qb3NpdGlvbiA9IFVEaW0y
Lm5ldygwLjAsIDAsIDAuMCwgaGVpZ2h0KQ0KCWFzc2V0TGFiZWwuU2l6ZSA9IFVEaW0yLm5l
dygxLjAsIDAsIDEuMCwgLTIqaGVpZ2h0KQ0KCWFzc2V0TGFiZWwuQm9yZGVyU2l6ZVBpeGVs
ID0gMA0KCWFzc2V0TGFiZWwuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDEuMA0KCWFzc2V0
TGFiZWwuUGFyZW50ID0gZGVzY3JpcHRpb25GcmFtZQ0KCWFzc2V0TGFiZWwuVGV4dENvbG9y
MyA9IGZyYW1lVGV4dENvbG9yDQoJYXNzZXRMYWJlbC5UZXh0V3JhcCA9IHRydWUNCglXaW5k
b3cuTG9hZGluZy5Bc3NldE5hbWVMYWJlbCA9IGFzc2V0TGFiZWwJDQoNCglsb2NhbCBjYW5j
ZWxCdXR0b24gPSBJbnN0YW5jZS5uZXcoIlRleHRCdXR0b24iKQ0KCWNhbmNlbEJ1dHRvbi5O
YW1lID0gIlByZXZpb3VzUGFnZUJ1dHRvbiINCgljYW5jZWxCdXR0b24uU2l6ZSA9IFVEaW0y
Lm5ldygxLCAwLCAwLjE4MDAwMDAwNywgMCkNCgljYW5jZWxCdXR0b24uUG9zaXRpb24gPSBV
RGltMi5uZXcoLTAuMDUwMDAwMDAwNywgMCwgMC42OTk5OTk5ODgsIDApDQoJY2FuY2VsQnV0
dG9uLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMubmV3KDEsMC4yLDAuMikNCgljYW5jZWxC
dXR0b24uVGV4dENvbG9yID0gQnJpY2tDb2xvci5XaGl0ZSgpDQoJY2FuY2VsQnV0dG9uLlRl
eHQgPSAiQ2FuY2VsIg0KCWNhbmNlbEJ1dHRvbi5Nb3VzZUJ1dHRvbjFDbGljazpjb25uZWN0
KGNhbmNlbEFzc2V0TG9hZCkNCgljYW5jZWxCdXR0b24uUGFyZW50ID0gZGVzY3JpcHRpb25G
cmFtZQ0KDQplbmQNCg0KDQoNCmZ1bmN0aW9uIGNhbmNlbEFzc2V0UGxhY2VtZW50KCkNCglE
YXRhLlN0YW1wLkNhbmNlbGxlZCA9IHRydWUNCglEYXRhLlN0YW1wLkRyYWdnZXIgPSBuaWwN
CglpZiBEYXRhLlN0YW1wLk1vZGVsIHRoZW4NCgkJRGF0YS5TdGFtcC5Nb2RlbDpSZW1vdmUo
KQ0KCQlEYXRhLlN0YW1wLk1vZGVsID0gbmlsDQoJZW5kDQoJaWYgRGF0YS5TdGFtcC5DdXJy
ZW50UGFydHMgdGhlbg0KCQlmb3IgaW5kZXgsIG9iamVjdCBpbiBwYWlycyhEYXRhLlN0YW1w
LkN1cnJlbnRQYXJ0cykgZG8NCgkJCW9iamVjdDpSZW1vdmUoKQ0KCQllbmQNCgkJRGF0YS5T
dGFtcC5DdXJyZW50UGFydHMgPSBuaWwNCgllbmQNCg0KCWlmIERhdGEuU3RhbXAuRGVjYWxT
ZWxlY3Rpb24gdGhlbg0KCQlEYXRhLlN0YW1wLkRlY2FsU2VsZWN0aW9uOlJlbW92ZSgpDQoJ
CURhdGEuU3RhbXAuRGVjYWxTZWxlY3Rpb24gPSBuaWwNCgllbmQNCglpZiBEYXRhLlN0YW1w
LkRlY2FsIHRoZW4NCgkJRGF0YS5TdGFtcC5EZWNhbDpSZW1vdmUoKQ0KCQlEYXRhLlN0YW1w
LkRlY2FsID0gbmlsDQoJZW5kDQoNCglpZiBNb3VzZSB0aGVuDQoJCU1vdXNlLkljb24gPSJy
Ynhhc3NldDovL3RleHR1cmVzXFxBcnJvd0N1cnNvci5wbmciDQoJZW5kCQ0KCWluc2VydENv
bXBsZXRlKCkNCmVuZA0KDQpmdW5jdGlvbiBvbkluc2VydEtleURvd24oa2V5KQ0KCWlmIERh
dGEuU3RhbXAuRHJhZ2dlciB0aGVuDQoJCWlmIGtleSA9PSAnUicgb3Iga2V5ID09ICdyJyAg
dGhlbg0KCQkJRGF0YS5TdGFtcC5EcmFnZ2VyOkF4aXNSb3RhdGUoRW51bS5BeGlzLlkpDQoJ
CWVsc2VpZiBrZXkgPT0gJ1QnIG9yIGtleSA9PSAndCcgdGhlbg0KCQkJRGF0YS5TdGFtcC5E
cmFnZ2VyOkF4aXNSb3RhdGUoRW51bS5BeGlzLlopDQoJCWVuZA0KCWVuZA0KZW5kDQoNCg0K
ZnVuY3Rpb24gY2FuU2VsZWN0T2JqZWN0KHBhcnQpDQoJcmV0dXJuIHBhcnQgYW5kIG5vdCAo
cGFydC5Mb2NrZWQpIGFuZCBwYXJ0OklzQSgiQmFzZVBhcnQiKSBhbmQgKHBhcnQuUG9zaXRp
b24gLSBUb29sLlBhcmVudC5IZWFkLlBvc2l0aW9uKS5NYWduaXR1ZGUgPCA2MA0KZW5kDQoN
CmZ1bmN0aW9uIHNldFNlbGVjdGlvblN1cmZhY2UocGFydCwgc3VyZmFjZSkgDQoJaWYgRGF0
YS5TdGFtcC5EZWNhbFNlbGVjdGlvbi5BZG9ybmVlID09IHBhcnQgYW5kIERhdGEuU3RhbXAu
RGVjYWxTZWxlY3Rpb24uVGFyZ2V0U3VyZmFjZSA9PSBzdXJmYWNlIHRoZW4NCgkJcmV0dXJu
DQoJZW5kDQoJdW5zZXRTZWxlY3Rpb25TdXJmYWNlKCkNCglEYXRhLlN0YW1wLkRlY2FsU2Vs
ZWN0aW9uLkFkb3JuZWUgPSBwYXJ0DQoJRGF0YS5TdGFtcC5EZWNhbFNlbGVjdGlvbi5UYXJn
ZXRTdXJmYWNlID0gc3VyZmFjZQ0KDQoJbG9jYWwgZGVjYWxGb3VuZCA9IGZhbHNlDQoJZm9y
IGluZGV4LGNoaWxkIGluIHBhaXJzKHBhcnQ6R2V0Q2hpbGRyZW4oKSkgZG8NCgkJaWYgY2hp
bGQ6SXNBKCJEZWNhbCIpIGFuZCBjaGlsZC5GYWNlID09IHN1cmZhY2UgdGhlbg0KCQkJZGVj
YWxGb3VuZCA9IHRydWUNCgkJCWJyZWFrDQoJCWVuZA0KCWVuZA0KDQoJaWYgbm90KGRlY2Fs
Rm91bmQpIHRoZW4NCgkJRGF0YS5TdGFtcC5EZWNhbC5QYXJlbnQgPSBwYXJ0DQoJCURhdGEu
U3RhbXAuRGVjYWwuRmFjZSA9IHN1cmZhY2UNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiB1bnNl
dFNlbGVjdGlvblN1cmZhY2UoKSANCglEYXRhLlN0YW1wLkRlY2FsU2VsZWN0aW9uLkFkb3Ju
ZWUgPSBuaWwNCglEYXRhLlN0YW1wLkRlY2FsLlBhcmVudCA9IG5pbA0KZW5kDQoNCmZ1bmN0
aW9uIG9uSW5zZXJ0TW91c2VNb3ZlKCkgDQoJaWYgRGF0YS5TdGFtcC5Nb3ZpbmdMb2NrIHRo
ZW4NCgkJcmV0dXJuDQoJZW5kDQoNCglsb2NhbCBuZXdDdXJzb3IgPSAicmJ4YXNzZXQ6Ly90
ZXh0dXJlc1xcQXJyb3dDdXJzb3IucG5nIg0KCURhdGEuU3RhbXAuTW92aW5nTG9jayA9IHRy
dWUNCglpZiBEYXRhLlN0YW1wLkRlY2FsIHRoZW4NCgkJbG9jYWwgcGFydCA9IE1vdXNlLlRh
cmdldA0KCQlpZiBjYW5TZWxlY3RPYmplY3QocGFydCkgdGhlbg0KCQkJc2V0U2VsZWN0aW9u
U3VyZmFjZShwYXJ0LCBNb3VzZS5UYXJnZXRTdXJmYWNlKQ0KCQllbHNlDQoJCQl1bnNldFNl
bGVjdGlvblN1cmZhY2UoKQ0KCQkJbmV3Q3Vyc29yID0gQmFzZVVybCAuLiAiYXNzZXQ/aWQ9
MjA3MTU2NDIiDQoJCWVuZA0KCWVsc2VpZiBEYXRhLlN0YW1wLkRyYWdnZXIgPT0gbmlsIHRo
ZW4NCgkJaWYgRGF0YS5TdGFtcC5Nb2RlbCB+PSBuaWwgdGhlbg0KCQkJTW91c2UuSWNvbiA9
InJieGFzc2V0Oi8vdGV4dHVyZXMvL0dyYWJSb3RhdGVDdXJzb3IucG5nIg0KCQkJc2V0dXBE
cmFnZ2FibGVDbG9uZSgpDQoJCWVuZA0KCWVsc2UNCgkJRGF0YS5TdGFtcC5EcmFnZ2VyOk1v
dXNlTW92ZShNb3VzZS5Vbml0UmF5KQ0KCWVuZA0KCU1vdXNlLkljb24gPSBuZXdDdXJzb3IN
Cg0KCURhdGEuU3RhbXAuTW92aW5nTG9jayA9IGZhbHNlDQplbmQNCg0KZnVuY3Rpb24gb25J
bnNlcnRNb3VzZUJ1dHRvbjFEb3duKCkNCglpZiBEYXRhLlN0YW1wLkRyYWdnZXIgb3IgRGF0
YS5TdGFtcC5EZWNhbCB0aGVuDQoJCURhdGEuU3RhbXAuTW91c2VEb3duID0gdHJ1ZQ0KCWVu
ZA0KZW5kDQoNCmZ1bmN0aW9uIG9uSW5zZXJ0TW91c2VCdXR0b24xVXAoKQ0KCWlmIERhdGEu
U3RhbXAuTW91c2VEb3duIHRoZW4NCgkJRGF0YS5TdGFtcC5Nb3VzZURvd24gPSBmYWxzZQ0K
CQlpZiBEYXRhLlN0YW1wLkRlY2FsIHRoZW4NCgkJCWxvY2FsIHBhcnQgPSBNb3VzZS5UYXJn
ZXQNCgkJCWlmIGNhblNlbGVjdE9iamVjdChwYXJ0KSBhbmQgSW5zdGFuY2UuTG9jayhwYXJ0
KSB0aGVuDQoJCQkJbG9jYWwgc3VyZmFjZSA9IE1vdXNlLlRhcmdldFN1cmZhY2UgDQoJCQkJ
Zm9yIGluZGV4LGNoaWxkIGluIHBhaXJzKHBhcnQ6R2V0Q2hpbGRyZW4oKSkgZG8NCgkJCQkJ
aWYgY2hpbGQ6SXNBKCJEZWNhbCIpIGFuZCBjaGlsZC5GYWNlID09IHN1cmZhY2UgdGhlbg0K
CQkJCQkJY2hpbGQ6UmVtb3ZlKCkNCgkJCQkJZW5kDQoJCQkJZW5kDQoNCgkJCQlsb2NhbCBu
ZXdEZWNhbCAgPSBEYXRhLlN0YW1wLkRlY2FsOkNsb25lKCkNCgkJCQluZXdEZWNhbC5GYWNl
ID0gc3VyZmFjZQ0KCQkJCW5ld0RlY2FsLlBhcmVudCA9IHBhcnQNCgkJCQkJSW5zdGFuY2Uu
VW5sb2NrKHBhcnQpDQoJCQkJDQoJCQkJaWYgRGF0YS5TdGFtcC5TdGFtcE1vZGUgdGhlbg0K
CQkJCWVsc2UgDQoJCQkJCUluc3RhbmNlLlVubG9jayhwYXJ0KQ0KCQkJCQljYW5jZWxBc3Nl
dFBsYWNlbWVudCgpDQoJCQkJZW5kDQoJCQllbmQNCgkJZWxzZWlmIERhdGEuU3RhbXAuRHJh
Z2dlciB0aGVuDQoJCQktLVBsYWNlIHRoZSBvYmplY3Qgd2hlcmUgdGhlIG1vdXNlIGlzIGN1
cnJlbnRseSBwb3NpdGlvbmVkDQoJCQlEYXRhLlN0YW1wLkRyYWdnZXI6TW91c2VVcCgpDQoJ
CQ0KCQkJLS1GaXggdGhlIHRyYW5zcGFyZW5jeSBvZiBhbGwgdGhlIHBhcnRzDQoJCQlmb3Ig
cGFydCwgdHJhbnNwYXJlbmN5IGluIHBhaXJzKERhdGEuU3RhbXAuVHJhbnNwYXJlbmN5VGFi
bGUpIGRvDQoJCQkJcGFydC5UcmFuc3BhcmVuY3kgPSB0cmFuc3BhcmVuY3kNCgkJCWVuZA0K
CQkJRGF0YS5TdGFtcC5UcmFuc3BhcmVuY3lUYWJsZSA9IG5pbA0KDQoJCQktLVJlLWVuYWJs
ZSB0aGUgc2NyaXB0cw0KCQkJZm9yIGluZGV4LHNjcmlwdCBpbiBwYWlycyhEYXRhLlN0YW1w
LkRpc2FibGVkU2NyaXB0cykgZG8NCgkJCQlzY3JpcHQuRGlzYWJsZWQgPSBmYWxzZQ0KCQkJ
ZW5kDQoJCQktLU5vdyB0aGF0IHRoZXkgYXJlIGFsbCBtYXJrZWQgZW5hYmxlZCwgcmVpbnNl
cnQgdGhlbSBpbnRvIHRoZSB3b3JsZCBzbyB0aGV5IHN0YXJ0IHJ1bm5pbmcNCgkJCWZvciBp
bmRleCxzY3JpcHQgaW4gcGFpcnMoRGF0YS5TdGFtcC5EaXNhYmxlZFNjcmlwdHMpIGRvDQoJ
CQkJbG9jYWwgb2xkUGFyZW50ID0gc2NyaXB0LlBhcmVudA0KCQkJCXNjcmlwdC5QYXJlbnQg
PSBuaWwNCgkJCQlzY3JpcHQ6Q2xvbmUoKS5QYXJlbnQgPSBvbGRQYXJlbnQNCgkJCWVuZA0K
CQkJRGF0YS5TdGFtcC5EaXNhYmxlZFNjcmlwdHMgPSBuaWwNCg0KCQkJRGF0YS5TdGFtcC5E
cmFnZ2VyID0gbmlsDQoJCQlEYXRhLlN0YW1wLkN1cnJlbnRQYXJ0cyA9IG5pbA0KCQkJDQoJ
CQlpZiBEYXRhLlN0YW1wLlN0YW1wTW9kZSB0aGVuDQoJCQkJLS1Ob3cgc2V0IHVwIGEgbmV3
IGluc3RhbmNlIG9mIHRoZSBvYmplY3QgdG8gYWxsb3cgYSBzZWNvbmQgY29weSB0byBiZSBz
dGFtcGVkIGRvd24NCgkJCQlzZXR1cERyYWdnYWJsZUNsb25lKCkNCgkJCWVsc2UNCgkJCQlj
YW5jZWxBc3NldFBsYWNlbWVudCgpDQoJCQllbmQNCgkJZW5kDQoJZW5kDQplbmQNCg0KZnVu
Y3Rpb24gc2V0dXBEcmFnZ2FibGVDbG9uZSgpDQoJbG9jYWwgY2xvbmUgPSBEYXRhLlN0YW1w
Lk1vZGVsOkNsb25lKCkNCglsb2NhbCBzY3JpcHRzID0ge30NCglsb2NhbCBwYXJ0cyA9IHt9
DQoNCgljb2xsZWN0UGFydHMoY2xvbmUsIHBhcnRzLCBzY3JpcHRzKQ0KDQoJaWYgI3BhcnRz
ID4gMCB0aGVuDQoJCURhdGEuU3RhbXAuRGlzYWJsZWRTY3JpcHRzID0ge30NCgkJRGF0YS5T
dGFtcC5UcmFuc3BhcmVuY3lUYWJsZSA9IHt9DQoNCgkJZm9yIGluZGV4LHNjcmlwdCBpbiBw
YWlycyhzY3JpcHRzKSBkbw0KCQkJaWYgbm90KHNjcmlwdC5EaXNhYmxlZCkgdGhlbg0KCQkJ
CXNjcmlwdC5EaXNhYmxlZCA9IHRydWUNCgkJCQlEYXRhLlN0YW1wLkRpc2FibGVkU2NyaXB0
c1sjRGF0YS5TdGFtcC5EaXNhYmxlZFNjcmlwdHMgKzFdID0gc2NyaXB0DQoJCQllbmQNCgkJ
ZW5kDQoJCWZvciBpbmRleCwgcGFydCBpbiBwYWlycyhwYXJ0cykgZG8NCgkJCURhdGEuU3Rh
bXAuVHJhbnNwYXJlbmN5VGFibGVbcGFydF0gPSBwYXJ0LlRyYW5zcGFyZW5jeQ0KCQkJcGFy
dC5UcmFuc3BhcmVuY3kgPSAwLjUNCgkJZW5kDQoNCgkJZ2FtZTpHZXRTZXJ2aWNlKCJJbnNl
cnRTZXJ2aWNlIik6SW5zZXJ0KGNsb25lKQ0KCQkNCgkJRGF0YS5TdGFtcC5DdXJyZW50UGFy
dHMgPSBjbG9uZTpHZXRDaGlsZHJlbigpOw0KCQlmb3IgaW5kZXgsIG9iamVjdCBpbiBwYWly
cyhEYXRhLlN0YW1wLkN1cnJlbnRQYXJ0cykgZG8NCgkJCW9iamVjdC5QYXJlbnQgPSBjbG9u
ZS5QYXJlbnQNCgkJZW5kDQoJCWNsb25lOlJlbW92ZSgpOw0KCQkNCgkJRGF0YS5TdGFtcC5E
cmFnZ2VyID0gSW5zdGFuY2UubmV3KCJEcmFnZ2VyIikNCgkJLS1CZWdpbiBhIG1vdmVtZW50
IGJ5IGZha2luZyBhIE1vdXNlRG93biBzaWduYWwNCgkJRGF0YS5TdGFtcC5EcmFnZ2VyOk1v
dXNlRG93bihwYXJ0c1sxXSwgVmVjdG9yMy5uZXcoMCwwLDApLCBwYXJ0cykNCgkJRGF0YS5T
dGFtcC5EcmFnZ2VyOk1vdXNlTW92ZShNb3VzZS5Vbml0UmF5KQ0KCWVsc2UNCgkJLS1Ob3Ro
aW5nIGRyYWdnYWJsZSBpbiB0aGUgTW9kZWwNCgkJRGF0YS5TdGFtcC5Nb2RlbDpSZW1vdmUo
KQ0KCQlEYXRhLlN0YW1wLk1vZGVsID0gbmlsDQoJCURhdGEuU3RhbXAuVHJhbnNwYXJlbmN5
VGFibGUgPSBuaWwNCgkJRGF0YS5TdGFtcC5EaXNhYmxlZFNjcmlwdHMgPSBuaWwNCgllbmQN
CmVuZA0KDQpmdW5jdGlvbiBjb2xsZWN0UGFydHMob2JqZWN0LCBiYXNlUGFydHMsIHNjcmlw
dHMpDQoJaWYgb2JqZWN0OklzQSgiQmFzZVBhcnQiKSB0aGVuDQoJCWJhc2VQYXJ0c1sjYmFz
ZVBhcnRzKzFdID0gb2JqZWN0DQoJZWxzZWlmIG9iamVjdDpJc0EoIlNjcmlwdCIpIHRoZW4N
CgkJc2NyaXB0c1sjc2NyaXB0cysxXSA9IG9iamVjdA0KCWVuZA0KDQoJZm9yIGluZGV4LGNo
aWxkIGluIHBhaXJzKG9iamVjdDpHZXRDaGlsZHJlbigpKSBkbw0KCQljb2xsZWN0UGFydHMo
Y2hpbGQsIGJhc2VQYXJ0cywgc2NyaXB0cykNCgllbmQNCmVuZA0KDQpmdW5jdGlvbiBidWls
ZFN0YW1wRGlhbG9nR3VpKHJvb3QpDQoNCglXaW5kb3cuU3RhbXAgPSB7fQ0KCURhdGEuU3Rh
bXAgPSB7fQ0KDQoJbG9jYWwgZGlhbG9nRnJhbWUgPSBJbnN0YW5jZS5uZXcoIkltYWdlTGFi
ZWwiKQ0KCWRpYWxvZ0ZyYW1lLkltYWdlID0gImh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3Nl
dC8/aWQ9MzYyNjk0ODUiDQoJZGlhbG9nRnJhbWUuTmFtZSA9ICJJbnNlcnRTdGFtcERpYWxv
ZyINCglkaWFsb2dGcmFtZS5TaXplID0gVURpbTIubmV3KDEuNiwgMCwgMC4zLCAwKQ0KCWRp
YWxvZ0ZyYW1lLlBvc2l0aW9uID0gVURpbTIubmV3KDAuMCwgMCwgMC43LCAwKQ0KCWRpYWxv
Z0ZyYW1lLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAxDQoJZGlhbG9nRnJhbWUuQWN0aXZl
ID0gdHJ1ZQ0KCWRpYWxvZ0ZyYW1lLlBhcmVudCA9IHJvb3QNCglkaWFsb2dGcmFtZS5WaXNp
YmxlID0gZmFsc2UNCglXaW5kb3cuU3RhbXAuRnJhbWUgPSBkaWFsb2dGcmFtZQ0KDQoJbG9j
YWwgYXNzZXRCYWNraW5nID0gSW5zdGFuY2UubmV3KCJJbWFnZUxhYmVsIikNCglhc3NldEJh
Y2tpbmcuSW1hZ2UgPSAiaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0zNjQyNjEw
NSINCglhc3NldEJhY2tpbmcuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCglhc3NldEJh
Y2tpbmcuWkluZGV4ID0gMQ0KCWFzc2V0QmFja2luZy5TaXplID0gVURpbTIubmV3KDEsMCwx
LDApDQoNCglsb2NhbCBhc3NldFRodW1iID0gSW5zdGFuY2UubmV3KCJJbWFnZUxhYmVsIikN
Cglhc3NldFRodW1iLlBvc2l0aW9uID0gVURpbTIubmV3KDAuMCwgMiwgMC4wLCAyKQ0KCWFz
c2V0VGh1bWIuU2l6ZSA9IFVEaW0yLm5ldygwLjUsIC00LCAxLjAsIC00KQ0KCWFzc2V0VGh1
bWIuUGFyZW50ID0gZGlhbG9nRnJhbWUNCglhc3NldFRodW1iLkJhY2tncm91bmRUcmFuc3Bh
cmVuY3kgPSAxDQoJYXNzZXRUaHVtYi5aSW5kZXggPSAyDQoJV2luZG93LlN0YW1wLkFzc2V0
VGh1bWJMYWJlbCA9IGFzc2V0VGh1bWINCg0KCWFzc2V0QmFja2luZy5QYXJlbnQgPSBhc3Nl
dFRodW1iDQoNCglsb2NhbCBkZXNjcmlwdGlvbkZyYW1lID0gSW5zdGFuY2UubmV3KCJGcmFt
ZSIpDQoJZGVzY3JpcHRpb25GcmFtZS5OYW1lID0gIkRlc2NyaXB0aW9uIg0KCWRlc2NyaXB0
aW9uRnJhbWUuU2l6ZSA9IFVEaW0yLm5ldygwLjUsIDAsIDEuMCwgMCkNCglkZXNjcmlwdGlv
bkZyYW1lLlBvc2l0aW9uID0gVURpbTIubmV3KDAuNSwgMCwgMC4wLCAwKQ0KCWRlc2NyaXB0
aW9uRnJhbWUuVHJhbnNwYXJlbmN5ID0gMQ0KCWRlc2NyaXB0aW9uRnJhbWUuUGFyZW50ID0g
ZGlhbG9nRnJhbWUNCg0KCWxvY2FsIGFzc2V0TGFiZWwgPSBJbnN0YW5jZS5uZXcoIlRleHRM
YWJlbCIpDQoJYXNzZXRMYWJlbC5UZXh0ID0gIllvdXIgQXNzZXQgSGVyZSINCglhc3NldExh
YmVsLlBvc2l0aW9uID0gVURpbTIubmV3KC0wLjA1LCAwLCAwLjI1LCAwKQ0KCWFzc2V0TGFi
ZWwuU2l6ZSA9IFVEaW0yLm5ldygxLjAsIDAsIDAuNCwgMCkNCglhc3NldExhYmVsLkJvcmRl
clNpemVQaXhlbCA9IDANCglhc3NldExhYmVsLkJhY2tncm91bmRUcmFuc3BhcmVuY3kgPSAx
LjANCglhc3NldExhYmVsLlBhcmVudCA9IGRlc2NyaXB0aW9uRnJhbWUNCglhc3NldExhYmVs
LlRleHRDb2xvcjMgPSBmcmFtZVRleHRDb2xvcg0KCWFzc2V0TGFiZWwuVGV4dFdyYXAgPSB0
cnVlDQoJV2luZG93LlN0YW1wLkFzc2V0TmFtZUxhYmVsID0gYXNzZXRMYWJlbA0KDQoJbG9j
YWwgcmVhZHlGcmFtZSA9IEluc3RhbmNlLm5ldygiRnJhbWUiKQ0KCXJlYWR5RnJhbWUuTmFt
ZSA9ICJSZWFkeURpYWxvZ3VlIg0KCXJlYWR5RnJhbWUuU2l6ZSA9IFVEaW0yLm5ldygwLjQ3
LCAwLCAwLjIsIDApDQoJcmVhZHlGcmFtZS5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjUsIDAs
IDAuMDUsIDApDQoJcmVhZHlGcmFtZS5UcmFuc3BhcmVuY3kgPSAxDQoJcmVhZHlGcmFtZS5Q
YXJlbnQgPSBkaWFsb2dGcmFtZQ0KDQoJbG9jYWwgbGFiZWwgPSBJbnN0YW5jZS5uZXcoIlRl
eHRMYWJlbCIpDQoJbGFiZWwuVGV4dCA9ICJSZWFkeSB0byBQbGFjZSINCglsYWJlbC5Gb250
U2l6ZSA9IDINCglsYWJlbC5UZXh0V3JhcCA9IHRydWUNCglsYWJlbC5TaXplID0gVURpbTIu
bmV3KDEsIDAsIDEsIDApDQoJbGFiZWwuQmFja2dyb3VuZFRyYW5zcGFyZW5jeSA9IDENCgls
YWJlbC5UZXh0Q29sb3IgPSBCcmlja0NvbG9yLldoaXRlKCkNCglsYWJlbC5QYXJlbnQgPSBy
ZWFkeUZyYW1lDQoNCglsb2NhbCBjYW5jZWxCdXR0b24gPSBJbnN0YW5jZS5uZXcoIlRleHRC
dXR0b24iKQ0KCWNhbmNlbEJ1dHRvbi5OYW1lID0gIkNhbmNlbEJ1dHRvbiINCgljYW5jZWxC
dXR0b24uU2l6ZSA9IFVEaW0yLm5ldygxLCAwLCAwLjE4MDAwMDAwNywgMCkNCgljYW5jZWxC
dXR0b24uUG9zaXRpb24gPSBVRGltMi5uZXcoLTAuMDUwMDAwMDAwNywgMCwgMC42OTk5OTk5
ODgsIDApDQoJY2FuY2VsQnV0dG9uLkJhY2tncm91bmRDb2xvcjMgPSBDb2xvcjMubmV3KDEs
MC4xLDAuMSkNCgljYW5jZWxCdXR0b24uVGV4dENvbG9yID0gQnJpY2tDb2xvci5XaGl0ZSgp
DQoJY2FuY2VsQnV0dG9uLlRleHRXcmFwID0gdHJ1ZQ0KCWNhbmNlbEJ1dHRvbi5UZXh0ID0g
IkJhY2sgdG8gVG9vbGJveCINCgljYW5jZWxCdXR0b24uTW91c2VCdXR0b24xQ2xpY2s6Y29u
bmVjdChjYW5jZWxBc3NldFBsYWNlbWVudCkNCgljYW5jZWxCdXR0b24uUGFyZW50ID0gZGVz
Y3JpcHRpb25GcmFtZQ0KDQoJRGF0YS5TdGFtcC5Nb3ZpbmdMb2NrID0gZmFsc2UJDQplbmQN
Cg0KZnVuY3Rpb24gYnVpbGRJbml0aWFsTG9hZFNjcmVlbihyb290KQ0KCWxvY2FsIGRpYWxv
Z0ZyYW1lID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpDQoJZGlhbG9nRnJhbWUuTmFtZSA9ICJJ
bnNlcnRMb2FkaW5nU2NyZWVuIg0KCWRpYWxvZ0ZyYW1lLlNpemUgPSBVRGltMi5uZXcoMC4w
LCBoZWlnaHQqMTAsIDAsIGhlaWdodCo1KQ0KCWRpYWxvZ0ZyYW1lLlBvc2l0aW9uID0gVURp
bTIubmV3KDAuNSwgLWhlaWdodCo1LCAwLjUsIC1oZWlnaHQqMi41KQ0KCWRpYWxvZ0ZyYW1l
LkJhY2tncm91bmRDb2xvcjMgPSBmcmFtZUNvbG9yDQoJZGlhbG9nRnJhbWUuQWN0aXZlID0g
dHJ1ZQ0KCWRpYWxvZ0ZyYW1lLlZpc2libGUgPSB0cnVlDQoJZGlhbG9nRnJhbWUuUGFyZW50
ID0gcm9vdA0KDQoJbG9jYWwgbGFiZWwgPSBJbnN0YW5jZS5uZXcoIlRleHRMYWJlbCIpDQoJ
bGFiZWwuVGV4dCA9ICJMb2FkaW5nIg0KCWxhYmVsLlBvc2l0aW9uID0gVURpbTIubmV3KDAu
MCwgMCwgMCwgMCkNCglsYWJlbC5TaXplID0gVURpbTIubmV3KDEuMCwgMCwgMC4wLCBoZWln
aHQpDQoJbGFiZWwuQm9yZGVyU2l6ZVBpeGVsID0gMQ0KCWxhYmVsLlRleHRDb2xvcjMgPSB0
aXRsZVRleHRDb2xvcg0KCWxhYmVsLkJhY2tncm91bmRDb2xvcjMgPSB0aXRsZUNvbG9yDQoJ
bGFiZWwuUGFyZW50ID0gZGlhbG9nRnJhbWUNCgkNCglsb2NhbCBhc3NldExhYmVsID0gSW5z
dGFuY2UubmV3KCJUZXh0TGFiZWwiKQ0KCWFzc2V0TGFiZWwuVGV4dCA9ICJQbGVhc2UgV2Fp
dCINCglhc3NldExhYmVsLlBvc2l0aW9uID0gVURpbTIubmV3KDAuMCwgMCwgMC4wLCBoZWln
aHQpDQoJYXNzZXRMYWJlbC5TaXplID0gVURpbTIubmV3KDEuMCwgMCwgMS4wLCAtMipoZWln
aHQpDQoJYXNzZXRMYWJlbC5Cb3JkZXJTaXplUGl4ZWwgPSAxDQoJYXNzZXRMYWJlbC5CYWNr
Z3JvdW5kVHJhbnNwYXJlbmN5ID0gMS4wDQoJYXNzZXRMYWJlbC5UZXh0Q29sb3IzID0gZnJh
bWVUZXh0Q29sb3INCglhc3NldExhYmVsLlRleHRXcmFwID0gdHJ1ZQ0KCWFzc2V0TGFiZWwu
UGFyZW50ID0gZGlhbG9nRnJhbWUNCmVuZA0KDQpmdW5jdGlvbiBidWlsZE1pbmltaXplZEd1
aShyb290KQ0KCVdpbmRvdy5NaW5pbWl6ZWQgPSB7fQ0KCURhdGEuTWluaW1pemVkID0ge30N
Cglsb2NhbCBtaW5pbWl6ZUJ1dHRvbiA9IEluc3RhbmNlLm5ldygiVGV4dEJ1dHRvbiIpDQoJ
bWluaW1pemVCdXR0b24uTmFtZSA9ICJNaW5pbWl6ZUJ1dHRvbiINCgltaW5pbWl6ZUJ1dHRv
bi5TaXplID0gVURpbTIubmV3KDAsIGhlaWdodCo0LjUsIDAsIGhlaWdodCkNCgltaW5pbWl6
ZUJ1dHRvbi5Qb3NpdGlvbiA9IFVEaW0yLm5ldygwLjAsIDAsIDEuMCwgLWhlaWdodCkNCglt
aW5pbWl6ZUJ1dHRvbi5CYWNrZ3JvdW5kQ29sb3IzID0gYnV0dG9uQ29sb3INCgltaW5pbWl6
ZUJ1dHRvbi5UZXh0Q29sb3IzID0gYnV0dG9uVGV4dENvbG9yDQoJbWluaW1pemVCdXR0b24u
VGV4dCA9ICJUb29sYm94Ig0KCW1pbmltaXplQnV0dG9uLk1vdXNlQnV0dG9uMUNsaWNrOmNv
bm5lY3QoZnVuY3Rpb24oKSBXaW5kb3cuTWluaW1pemVkLkZyYW1lLlZpc2libGUgPSBmYWxz
ZSBXaW5kb3cuTWFpbi5GcmFtZS5WaXNpYmxlID0gdHJ1ZSBlbmQpDQoJbWluaW1pemVCdXR0
b24uVmlzaWJsZSA9IGZhbHNlDQoJbWluaW1pemVCdXR0b24uUGFyZW50ID0gcm9vdA0KDQoJ
V2luZG93Lk1pbmltaXplZC5GcmFtZSA9IG1pbmltaXplQnV0dG9uDQplbmQNCg0KDQpsb2Nh
bCBDYW5jZWxEdXJpbmdMb2FkDQpsb2NhbCBMb2FkU2NyZWVuIA0KZnVuY3Rpb24gb25FcXVp
cHBlZExvY2FsKG1vdXNlKQ0KCVRvb2wuVGV4dHVyZUlkID0gInJieGFzc2V0Oi8vaWNvbnMv
aW5zZXJ0X3NlbC5wbmciDQoNCglNb3VzZSA9IG1vdXNlDQoJaWYgVG9vbC5TYXZlZFN0YXRl
LlZhbHVlIGFuZCBUb29sLlBsYXllck93bmVyLlZhbHVlID09IGdldFBsYXllcigpIGFuZCBE
YXRhIGFuZCBEYXRhLkZ1bGx5TG9hZGVkIHRoZW4NCgkJZ3VpTWFpbiA9IFRvb2wuU2F2ZWRT
dGF0ZS5WYWx1ZQ0KCQlndWlNYWluLlBhcmVudCA9IHNjcmlwdC5QYXJlbnQuU2VsZWN0ZWRC
dXR0b24uVmFsdWUNCg0KCQlXaW5kb3cuU3RhbXAuRnJhbWUuVmlzaWJsZSA9IGZhbHNlDQoJ
CVdpbmRvdy5Mb2FkaW5nLkZyYW1lLlZpc2libGUgPSBmYWxzZQ0KCQlXaW5kb3cuTWFpbi5G
cmFtZS5WaXNpYmxlID0gdHJ1ZQ0KDQoJZWxzZQ0KCQlDYW5jZWxEdXJpbmdMb2FkID0gZmFs
c2UNCg0KCQlndWlNYWluID0gSW5zdGFuY2UubmV3KCJGcmFtZSIpDQoJCWd1aU1haW4uU2l6
ZSA9IFVEaW0yLm5ldygxLjUsMCwxLDApDQoJCWd1aU1haW4uUG9zaXRpb24gPSBVRGltMi5u
ZXcoMS4wMSwwLC0wLjEsMCkNCgkJZ3VpTWFpbi5CYWNrZ3JvdW5kVHJhbnNwYXJlbmN5ID0g
MQ0KCQlndWlNYWluLk5hbWUgPSAiSW5zZXJ0VG9vbGJveE1haW4iDQoNCgkJaWYgc2NyaXB0
LlBhcmVudDpGaW5kRmlyc3RDaGlsZCgiU2VsZWN0ZWRCdXR0b24iKSB0aGVuDQoJCQlndWlN
YWluLlBhcmVudCA9ICBzY3JpcHQuUGFyZW50LlNlbGVjdGVkQnV0dG9uLlZhbHVlDQoJCWVs
c2UNCgkJCWd1aU1haW4uUGFyZW50ID0gZ2FtZS5QbGF5ZXJzOkdldFBsYXllckZyb21DaGFy
YWN0ZXIoVG9vbC5QYXJlbnQpLlBsYXllckd1aS5HYW1lR3VpLkJ1aWxkVG9vbHMuRnJhbWUN
CgkJZW5kDQoNCgkJV2luZG93ID0ge30NCgkJRGF0YSA9IHt9DQoJCURhdGEuRnVsbHlMb2Fk
ZWQgPSBmYWxzZQ0KDQoJCWJ1aWxkTWFpbkd1aShndWlNYWluLCBnZXRQbGF5ZXIoKS51c2Vy
SWQpDQoJCWJ1aWxkTG9hZGluZ0RpYWxvZ0d1aShndWlNYWluKQ0KCQlidWlsZFN0YW1wRGlh
bG9nR3VpKGd1aU1haW4pDQoNCgkJaWYgbm90KENhbmNlbER1cmluZ0xvYWQpIHRoZW4NCgkJ
CWlmIHNjcmlwdC5QYXJlbnQ6RmluZEZpcnN0Q2hpbGQoIlNlbGVjdGVkQnV0dG9uIikgPT0g
bmlsIHRoZW4NCgkJCQlndWlNYWluLlBhcmVudCA9IGdldFBsYXllcigpLlBsYXllckd1aS5H
YW1lR3VpLkJ1aWxkVG9vbHMuRnJhbWUNCgkJCWVsc2UNCgkJCQlndWlNYWluLlBhcmVudCA9
ICBzY3JpcHQuUGFyZW50LlNlbGVjdGVkQnV0dG9uLlZhbHVlDQoJCQllbmQNCg0KCQkJVG9v
bC5TYXZlZFN0YXRlLlZhbHVlID0gZ3VpTWFpbg0KCQkJVG9vbC5QbGF5ZXJPd25lci5WYWx1
ZSA9IGdldFBsYXllcigpDQoJCWVuZA0KDQoJCURhdGEuRnVsbHlMb2FkZWQgPSB0cnVlDQoJ
ZW5kDQoNCglNb3VzZS5Nb3ZlOmNvbm5lY3Qob25JbnNlcnRNb3VzZU1vdmUpDQoJTW91c2Uu
QnV0dG9uMURvd246Y29ubmVjdChvbkluc2VydE1vdXNlQnV0dG9uMURvd24pDQoJTW91c2Uu
QnV0dG9uMVVwOmNvbm5lY3Qob25JbnNlcnRNb3VzZUJ1dHRvbjFVcCkNCglNb3VzZS5LZXlE
b3duOmNvbm5lY3Qob25JbnNlcnRLZXlEb3duKQ0KDQplbmQNCg0KZnVuY3Rpb24gb25VbmVx
dWlwcGVkTG9jYWwoKQ0KCU1vdXNlOnJlbW92ZSgpDQoNCglUb29sLlRleHR1cmVJZCA9IG9y
aWdUZXh0dXJlDQoNCglndWlNYWluLlBhcmVudCA9IG5pbA0KDQoJcGNhbGwoZnVuY3Rpb24o
KQ0KCQljYW5jZWxBc3NldFBsYWNlbWVudCgpDQoJCWNhbmNlbEFzc2V0TG9hZCgpDQoJCWd1
aU1haW4uUGFyZW50ID0gbmlsDQoJCWVuZCkNCgkNCglDYW5jZWxEdXJpbmdMb2FkID0gdHJ1
ZQ0KDQoJaWYgTG9hZFNjcmVlbiB0aGVuDQoJCUxvYWRTY3JlZW46UmVtb3ZlKCkNCgllbmQN
CmVuZA0KDQpmdW5jdGlvbiBvbkFuY2VzdHJ5Q2hhbmdlZChjaGlsZCxwYXJlbnQpDQoNCglp
ZiBUb29sLlBsYXllck93bmVyLlZhbHVlIGFuZCBub3QgVG9vbDpJc0Rlc2NlbmRhbnRPZihU
b29sLlBsYXllck93bmVyLlZhbHVlKSBhbmQgbm90IFRvb2w6SXNEZXNjZW5kYW50T2YoVG9v
bC5QbGF5ZXJPd25lci5WYWx1ZS5DaGFyYWN0ZXIpIHRoZW4NCgkJLS1Ub29sIHdhcyBkcm9w
cGVkIGluIHNvbWUgd2F5LCBzbyB3ZSBuZWVkIHRvIG51a2Ugb3VyIGV4dGVybmFsIHN0YXRl
DQoJCVRvb2wuU2F2ZWRTdGF0ZS5WYWx1ZSA9IG5pbA0KCQlUb29sLlBsYXllck93bmVyLlZh
bHVlID0gbmlsDQoJZW5kDQoJDQoJcGNhbGwoY2FuY2VsQXNzZXRQbGFjZW1lbnQpDQoJcGNh
bGwoY2FuY2VsQXNzZXRMb2FkKQ0KZW5kDQoNCg0KVG9vbC5FcXVpcHBlZDpjb25uZWN0KG9u
RXF1aXBwZWRMb2NhbCkNClRvb2wuVW5lcXVpcHBlZDpjb25uZWN0KG9uVW5lcXVpcHBlZExv
Y2FsKQ0KVG9vbC5BbmNlc3RyeUNoYW5nZWQ6Y29ubmVjdChvbkFuY2VzdHJ5Q2hhbmdlZCk=</binary></Content>
				<string name="Name">Insert Local</string>
				<ProtectedString name="Source">local Tool = script.Parent
 
enabled = true
local origTexture = 	Tool.TextureId
game:GetService(&quot;ContentProvider&quot;):Preload(&quot;rbxasset://icons/insert_sel.png&quot;)
--foo bar foo bar foo bar 123455682903580912386509138049813094823109482310948309148
local height = 20
local width = UDim.new(0.25, 0)
local height = 20
local buttonTransparency = 0.1
local insertButtonTransparency = 0.25
local transparency = 0.25

local freeIndex = 1
local freeViewing = false
local viewingModels = false
local currentSearchText = &quot;&quot;
local freeModels
local freeSets

local loading = false

local dropDownSelected = false

local selectedButtonColor = Color3.new(.1255, .4078, .1961)
local selectedButtonTextColor = Color3.new(1.0,1.0,1.0)

local buttonColor = Color3.new(0.0898, 0.2148, .2344)
local buttonTextColor = Color3.new(1.0,1.0,1.0)

local frameColor = Color3.new(.1255, .4078, .1961)
local frameTextColor = Color3.new(1.0,1.0,1.0)

local titleColor = Color3.new(0.6289, 0.8398, 0)
local titleTextColor = Color3.new(0,0,0)

local Window
local Data
local Mouse

local SetCache = {}

local soloGame = game:FindFirstChild(&quot;NetworkClient&quot;) == nil

--Constants
local useAssetVersionId = true
local BaseUrl = game:GetService(&quot;ContentProvider&quot;).BaseUrl
local ThumbnailUrl;
if useAssetVersionId then
	ThumbnailUrl = BaseUrl .. &quot;Game/Tools/ThumbnailAsset.ashx?fmt=png&amp;wd=110&amp;ht=110&amp;assetversionid=&quot;
else
	ThumbnailUrl = BaseUrl .. &quot;Game/Tools/ThumbnailAsset.ashx?fmt=png&amp;wd=110&amp;ht=110&amp;aid=&quot;
end

local InsertRows = 7
local InsertColumns = 3
local highlight = true
local minYSize = 8

--Static variables used for creating sizes
function getPlayer()
	local character = script.Parent.Parent
	return game.Players:GetPlayerFromCharacter(character)
end

function minimize()
	if Window.Stamp.Frame.Visible then
		cancelAssetPlacement()
	elseif Window.Main.Frame.Visible then
		Window.Main.Frame.Visible = false
		Window.Minimized.Frame.Visible = true
	end
end

function buildImageButton(image)
	local buttonFrame = Instance.new(&quot;Frame&quot;)
	buttonFrame.BackgroundColor = BrickColor.White()
	buttonFrame.BackgroundTransparency = 1
	buttonFrame.BorderSizePixel = 0

	local button = Instance.new(&quot;ImageButton&quot;)
	button.Name = &quot;Button&quot;
	button.Parent  = buttonFrame
	button.Image = image
	button.Size = UDim2.new(.9, 0, .9, 0)
	button.Position = UDim2.new(0.05, 0, 0.05, 0)
	button.BorderSizePixel = 0
	button.Parent  = buttonFrame
	button.AutoButtonColor = false
	button.BackgroundTransparency = 0

	local latest = Instance.new(&quot;StringValue&quot;)
	latest.Name = &quot;Latest&quot;
	latest.Value = &quot;nil&quot;
	latest.Parent = button

	local fadeSpeed = 0.1
	button.MouseEnter:connect(function()
		button.Latest.Value = &quot;Enter&quot;
		while button.Parent.BackgroundTransparency &gt; 0 and button.Latest.Value == &quot;Enter&quot; do
			button.Parent.BackgroundTransparency = button.Parent.BackgroundTransparency - fadeSpeed
			wait()
		end
	end)

	button.MouseLeave:connect(function()
		imageButtonMouseLeave(button, fadeSpeed)
	end)

	button.MouseButton1Click:connect(function()
		imageButtonMouseLeave(button, fadeSpeed)
	end)
	
	return buttonFrame

end


function imageButtonMouseLeave(button, fadeSpeed)
	button.Latest.Value = &quot;Leave&quot;
	while button.Parent.BackgroundTransparency &lt; 1 and button.Latest.Value == &quot;Leave&quot; do
		button.Parent.BackgroundTransparency = button.Parent.BackgroundTransparency + fadeSpeed
		wait()
	end
end

function buildTextButton(text)

	local buttonFrame = Instance.new(&quot;Frame&quot;)
	buttonFrame.BackgroundTransparency = 1.0
	local button = Instance.new(&quot;TextButton&quot;)
	button.Name = &quot;Button&quot;
	button.Parent  = buttonFrame
	button.Text = text
	button.Size = UDim2.new(1.0, 0, 1.0, 0)
	button.TextWrap = true
	button.Position = UDim2.new(0.0, 0, 0.0, 0)
	button.BorderSizePixel = 1
	button.BackgroundTransparency = buttonTransparency
	button.Parent  = buttonFrame
	
	return buttonFrame
end

function mouseEnterInsertButton(insertFrame)
	if insertFrame ~= Data.CurrentRolloverInsertButton then
		insertFrame.Button.Transparency = 0.0
		Data.CurrentRolloverInsertButton = insertFrame
		if highlight then
			Window.Main.RolloverText.Text = Data.CurrentRolloverInsertButton.AssetName.Value
		else 
			Window.Main.RolloverText.Text = &quot;&quot;
		end
	end
end

function mouseLeaveInsertButton(insertFrame)
	if insertFrame == Data.CurrentRolloverInsertButton then
		Window.Main.RolloverText.Text = &quot;&quot;
		Data.CurrentRolloverInsertButton = nil
		
	end
	insertFrame.Button.Transparency = insertButtonTransparency
end

function buildInsertButton(position, size)
	local insertFrame = buildImageButton(&quot;&quot;)
	insertFrame.Name = &quot;InsertAssetButton&quot;
	insertFrame.Position = position
	insertFrame.Size = size
	insertFrame.Button.BackgroundColor3 = Color3.new(1.0,1.0,1.0)
	insertFrame.Button.Transparency = insertButtonTransparency
	insertFrame.Visible = false

	local assetId = Instance.new(&quot;IntValue&quot;)
	assetId.Name = &quot;AssetId&quot;
	assetId.Value = -1
	assetId.Parent = insertFrame

	local assetName = Instance.new(&quot;StringValue&quot;)
	assetName.Name = &quot;AssetName&quot;
	assetName.Value = &quot;&quot;
	assetName.Parent = insertFrame

	insertFrame.Button.MouseButton1Click:connect(function() mouseLeaveInsertButton(insertFrame) beginInsertAsset(insertFrame.AssetName.Value, insertFrame.AssetId.Value, insertFrame.Button.Image, false) end)
	insertFrame.Button.MouseButton2Click:connect(function() mouseLeaveInsertButton(insertFrame) beginInsertAsset(insertFrame.AssetName.Value, insertFrame.AssetId.Value, insertFrame.Button.Image, true) end)
	insertFrame.Button.MouseEnter:connect(function() mouseEnterInsertButton(insertFrame) end)
	insertFrame.Button.MouseLeave:connect(function() mouseLeaveInsertButton(insertFrame) end)

	return insertFrame
end

function setInsertButtonImageBehavior(insertFrame, visible, name, assetId)
	if visible then
		insertFrame.AssetName.Value = name
		insertFrame.AssetId.Value = assetId
		insertFrame.Button.Image = ThumbnailUrl  .. assetId
		insertFrame.Button.BackgroundColor3 = Color3.new(1.0,1.0,1.0)
		insertFrame.Visible = true
	else
		insertFrame.Visible = false
	end		
end

function mouseEnterSetButton(setFrame)
	if setFrame.Button.AutoButtonColor then
		setFrame.Button.Icon.Transparency = 0.0
	end
end
function mouseLeaveSetButton(setFrame)
	if setFrame.Button.AutoButtonColor then
		setFrame.Button.Icon.Transparency = insertButtonTransparency
	end
end

function buildSetButton(name, setId, setImageId, i,  count)
	local buttonFrame = buildTextButton(&quot;&quot;)
	buttonFrame.Name = &quot;SetButton&quot;
	buttonFrame.Size = UDim2.new(1.0, 0, 0.0, height*2)
	buttonFrame.Position = UDim2.new(0.0, 0, 0.0, (i-1)*height*2)
	buttonFrame.Button.BackgroundColor3 = buttonColor
	buttonFrame.Button.TextColor3 = buttonTextColor
	buttonFrame.Visible = false

	local setNameLabel = Instance.new(&quot;TextLabel&quot;)
	setNameLabel.Name = &quot;Name&quot;
	setNameLabel.Text = name
	setNameLabel.TextColor3 = buttonTextColor
	setNameLabel.BackgroundTransparency = 1.0
	setNameLabel.Size = UDim2.new(1.0, -height*2, 1.0, 0.0)
	setNameLabel.Position = UDim2.new(0.0, height*2, 0.0, 0)
	setNameLabel.TextWrap = true
	setNameLabel.TextXAlignment = Enum.TextXAlignment.Left
	setNameLabel.Parent = buttonFrame.Button
	
	local iconLabel = Instance.new(&quot;ImageLabel&quot;)
	iconLabel.Name = &quot;Icon&quot;
	iconLabel.Image = BaseUrl .. &quot;asset/?id=&quot; .. setImageId
	iconLabel.Size = UDim2.new(0.0, height*2 - 4, 0.0, height*2 -4)
	iconLabel.Position = UDim2.new(0.0, 2, 0.0, 2)
	iconLabel.Transparency = insertButtonTransparency
	iconLabel.Parent = buttonFrame.Button
	
	local setValue = Instance.new(&quot;IntValue&quot;)
	setValue.Name = &quot;SetId&quot;
	setValue.Value = setId
	setValue.Parent = buttonFrame

	local setName = Instance.new(&quot;StringValue&quot;)
	setName.Name = &quot;SetName&quot;
	setName.Value = name
	setName.Parent = buttonFrame
	
	buttonFrame.Button.MouseButton1Click:connect(function() selectSet(buttonFrame, buttonFrame.SetName.Value, buttonFrame.SetId.Value, 0) end)
	buttonFrame.Button.MouseEnter:connect(function() mouseEnterSetButton(buttonFrame) end)
	buttonFrame.Button.MouseLeave:connect(function() mouseLeaveSetButton(buttonFrame) end)

	--print(&quot;Built button &quot; .. i .. &quot; SetId=&quot; .. setId .. &quot; SetName=&quot; .. name)

	return buttonFrame
end

function previousSetPage()
	if freeViewing == false then
		local newIndex = math.max(1, Data.Category[Data.CurrentCategory].Index - (Data.Main.InsertRows * Data.Main.InsertColumns))
		setSetIndex(newIndex)
	else
		freeIndex = math.max(freeIndex - 1,1)
		if viewingModels then
			loadFreeSets(freeModels,&quot;Models&quot;,currentSearchText)
		else
			loadFreeSets(freeDecals,&quot;Decals&quot;,currentSearchText)
		end
		Window.Main.NextPageButton.Visible = true
		Window.Main.PreviousPageButton.Visible = true
		if freeIndex == 1 then
			Window.Main.PreviousPageButton.Visible = false
		end
	end
end

function nextSetPage()
	if freeViewing == false then
		local newIndex = math.max(0, Data.Category[Data.CurrentCategory].Index + (Data.Main.InsertRows * Data.Main.InsertColumns))
		setSetIndex(newIndex)
	else
		freeIndex = freeIndex + 1
		local models
		if viewingModels then
			loadFreeSets(freeModels,&quot;Models&quot;,currentSearchText)
			models = game:GetService(&quot;InsertService&quot;):GetFreeModels(currentSearchText,freeIndex)
		else
			loadFreeSets(freeDecals,&quot;Decals&quot;,currentSearchText)
			models = game:GetService(&quot;InsertService&quot;):GetFreeDecals(currentSearchText,freeIndex)
		end
		local totalCount = 21

		for ndx,catinfo in ipairs( models ) do 
			for k,v in pairs(catinfo) do 
				if k == &quot;TotalCount&quot; then totalCount = v end
			end 
		end

		-- we&apos;ve reach the end if true
		if tonumber(totalCount) &lt; 21 then
			Window.Main.NextPageButton.Visible = false
		end

		Window.Main.PreviousPageButton.Visible = true
	end
end

function setSetIndex(dataOffset)
	Data.Category[Data.CurrentCategory].Index = dataOffset

	local PageSize = Data.Main.InsertRows*Data.Main.InsertColumns 
	local contents = Data.Category[Data.CurrentCategory].Contents
	if contents then
		for index = 1, PageSize do
			if Data.InsertButtons[index] then
				if contents[index + dataOffset] then

					local assetId
					if useAssetVersionId then
						assetId = contents[index + dataOffset].AssetVersionId 
					else 
						assetId = contents[index + dataOffset].AssetId
					end
					setInsertButtonImageBehavior(Data.InsertButtons[index], true, contents[index + dataOffset].Name, assetId)
				else
					setInsertButtonImageBehavior(Data.InsertButtons[index], false)
				end
			end
		end
		Window.Main.PreviousPageButton.Visible = dataOffset &gt; 1
		Window.Main.NextPageButton.Visible = ((dataOffset - 1) + PageSize) &lt; (#contents)
	else
		Window.Main.PreviousPageButton.Visible = false
		Window.Main.NextPageButton.Visible = false
	end
end

function previousCategoryPage() 
	local newIndex = math.max(0, Data.Category[Data.CurrentCategory].SetIndex - Data.Main.InsertSets)
	setCategoryIndex(newIndex) 
end

function nextCategoryPage()
	local newIndex = math.max(0, Data.Category[Data.CurrentCategory].SetIndex + Data.Main.InsertSets)
	setCategoryIndex(newIndex)
end

function setCategoryIndex(setIndex)
	Data.Category[Data.CurrentCategory].SetIndex = setIndex
	--This is how many vertical items we can display

	--Layout all buttons in this setoh
	if #Data.CurrentCategory &gt; Data.Main.InsertSets then
		--Steal one for use by the layout buttons, when it rains it pours

		--We can&apos;t fit all the buttons
		local heightUsed = 0

		local index = 1
		if index &lt; setIndex then
			heightUsed = height
			Window.Main.PreviousSetButton.Visible = true
			while index &lt; setIndex do
				Data.CurrentCategory[index].Visible = false
				index = index + 1
			end
		else
			Window.Main.PreviousSetButton.Visible = false
		end

		local offset = 0
		while offset &lt; Data.Main.InsertSets and index + offset &lt;= #Data.CurrentCategory do
			Data.CurrentCategory[index + offset].Size = UDim2.new(1.0, 0, 0.0, height*2)
			Data.CurrentCategory[index + offset].Position = UDim2.new(0.0, 0, 0.0, height*2*offset + heightUsed)
			Data.CurrentCategory[index + offset].Visible = true
			offset = offset + 1
		end
		index = index + offset
		heightUsed = heightUsed + Data.Main.InsertSets*height*2

		if index &lt;= #Data.CurrentCategory then
			Window.Main.NextSetButton.Position = UDim2.new(0.0, 0, 0.0, heightUsed)
			Window.Main.NextSetButton.Size = UDim2.new(1.0, 0, 1.0, -heightUsed)
			Window.Main.NextSetButton.Visible = true
			while index &lt;=  #Data.CurrentCategory do
				Data.CurrentCategory[index].Visible = false
				index = index + 1
			end		
		else
			Window.Main.NextSetButton.Visible = false
		end
	else
		Window.Main.PreviousSetButton.Visible = false
		Window.Main.NextSetButton.Visible = false

		for key, buttonFrame in pairs(Data.CurrentCategory) do
			buttonFrame.Size = UDim2.new(1.0, 0, 0.0, height*2)
			buttonFrame.Position = UDim2.new(0.0, 0, 0.0, height*2*(key-1))
			buttonFrame.Visible = true
		end

	end
end

function selectCategoryPage(buttons, page)
	if buttons ~= Data.CurrentCategory then		
		if Data.CurrentCategory then
			for key, button in pairs(Data.CurrentCategory) do
				button.Visible = false
			end
		end

		Data.CurrentCategory = buttons		
		if Data.Category[Data.CurrentCategory] == nil then
			Data.Category[Data.CurrentCategory] = {}
			if #buttons &gt; 0 then
				selectSet(buttons[1], buttons[1].SetName.Value, buttons[1].SetId.Value, 0)
			end
		else
			Data.Category[Data.CurrentCategory].Button = nil
			selectSet(Data.Category[Data.CurrentCategory].ButtonFrame, Data.Category[Data.CurrentCategory].SetName, Data.Category[Data.CurrentCategory].SetId, Data.Category[Data.CurrentCategory].Index)
		end
		if Data.Main.FrameHeight then
			if Data.Category[Data.CurrentCategory].SetIndex then
				layoutSetButtons(Data.Main.FrameHeight, Data.Category[Data.CurrentCategory].SetIndex)
			else
				layoutSetButtons(Data.Main.FrameHeight, 1)
			end
		end


	end
end
function filterSet(set)
	if soloGame then
		return set
	end

	local result = {}
	for pos, object in pairs(set) do
		if object.IsTrusted then
			result[#result+1] = object
		end
	end
	return result
end
function selectSet(buttonFrame, setName, setId, setIndex)
	if buttonFrame and Data.Category[Data.CurrentCategory] ~= nil then
		if buttonFrame.Button ~= Data.Category[Data.CurrentCategory].Button or type(setId) ~= &quot;number&quot;  then
			
			Data.Category[Data.CurrentCategory].Button = buttonFrame.Button
		
			Data.Category[Data.CurrentCategory].Contents = setId

			if type(setId) == &quot;number&quot; then
				SetCache[setId] = filterSet(game:GetService(&quot;InsertService&quot;):GetCollection(setId))
				Data.Category[Data.CurrentCategory].Contents = SetCache[setId]
			end
			
			Window.Main.Title.Text = setName
			print(setName)

			Data.Category[Data.CurrentCategory].SetName = setName
			Data.Category[Data.CurrentCategory].SetId = setId
			Data.Category[Data.CurrentCategory].ButtonFrame = buttonFrame
		end

		setSetIndex (setIndex)
	end
end

function selectCategory(button, category)

	selectCategoryPage(category, 0)

end

function processCategory(sets, setPanel)
	local setButtons = {}
	for index, object in pairs(sets) do
		--for key, value in pairs(object) do
		--	print(&quot;key=&quot; .. key .. &quot;, value=&quot; .. value)
		--end
		setButtons[index] = buildSetButton(object.Name, object.CategoryId, object.ImageAssetId, index, #sets)
		setButtons[index].Parent = setPanel	
	end
	return setButtons
end

function loadFreeSets(button,type,search)
	
	local stuff
	if type == &quot;Models&quot; then
		stuff = game:GetService(&quot;InsertService&quot;):GetFreeModels(search,freeIndex)
	elseif type == &quot;Decals&quot; then
		stuff = game:GetService(&quot;InsertService&quot;):GetFreeDecals(search,freeIndex)
	end

	for ndx,catinfo in ipairs( stuff ) do 
		for k,v in pairs(catinfo) do 
			if k == &quot;Results&quot; then
				selectSet(button, button.Button.Text, v, 0)
				return
			end
		end 
	end

end

function createDropDownMenu(parent, Window)

	local width = 1.1
	local xPos = 0.055

	local dropDownMenu = Instance.new(&quot;ImageButton&quot;)
	dropDownMenu.Name = &quot;DropDownMenu&quot;
	dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361347&quot;
	dropDownMenu.BackgroundTransparency = 1
	dropDownMenu.AutoButtonColor = false
	dropDownMenu.Size = UDim2.new(width,0,0.06,0)
	dropDownMenu.Position = UDim2.new(xPos,0,0.09,0)
	dropDownMenu.Parent = parent
	dropDownMenu.ZIndex = 2
	
	local droppedDownMenu = Instance.new(&quot;ImageLabel&quot;)
	droppedDownMenu.Name = &quot;List&quot;
	droppedDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361705&quot;
	droppedDownMenu.BackgroundTransparency = 1
	droppedDownMenu.Visible = false
	droppedDownMenu.Active = false
	droppedDownMenu.Position = UDim2.new(xPos,0,0.085,0)
	droppedDownMenu.Size = UDim2.new(width,0,0.97,0)
	droppedDownMenu.Parent = dropDownMenu.Parent
	droppedDownMenu.ZIndex = 3
	
	local titleFrame = Instance.new(&quot;TextLabel&quot;)
	titleFrame.Name = &quot;Title&quot;
	titleFrame.Position = UDim2.new(0.05, 0, 0, 0)
	titleFrame.Size = UDim2.new(0.86, 0, 1, 0)
	titleFrame.TextWrap = true
	titleFrame.BackgroundColor3 = titleColor
	titleFrame.TextColor3 = titleTextColor
	titleFrame.BackgroundTransparency = 1
	titleFrame.Text = &quot;Change me&quot;
	titleFrame.ZIndex = 3
	titleFrame.TextXAlignment = 0
	titleFrame.Parent = dropDownMenu
	Window.Main.Title = titleFrame

	local textButton = Instance.new(&quot;TextButton&quot;)
	textButton.Name = &quot;Button&quot;
	textButton.BackgroundTransparency = 1
	textButton.BorderSizePixel = 0
	textButton.Text = &quot;Test&quot;
	textButton.Size = UDim2.new(1,0,1,0)
	textButton.TextXAlignment = 2
	textButton.TextWrap = true
	textButton.ZIndex = 5

	local buttonFrame = Instance.new(&quot;ImageLabel&quot;)
	buttonFrame.Image = &quot;http://www.roblox.com/asset/?id=36361705&quot;
	buttonFrame.ZIndex = 4
	buttonFrame.BackgroundTransparency = 1
	
	textButton.Parent = buttonFrame

	local categories =  #Data.BaseCategoryButtons
	local robloxMaxCat = categories
	categories = categories + #Data.UserCategoryButtons

	local spacing = 0.1
	buttonFrame.Size = UDim2.new(0.9,0,(1 -  spacing)/(categories + 2),0) 


	-- make sure buttons are big enough
	local testButton = buttonFrame:clone()
	testButton.Parent = droppedDownMenu
	while testButton.AbsoluteSize.Y &lt; minYSize do
		droppedDownMenu.Size = UDim2.new(width,0,droppedDownMenu.Size.Y.Scale + 0.01,0)
	end
	testButton:remove()
	testButton = nil


	local masterCategory = 1
	print(categories)
	for i = 1, categories do
		-- needed to maintain local scope for categories in event listeners below
		local userCategory = masterCategory
		local button = buttonFrame:clone()
		button.Position = UDim2.new(0.05,0,(i - 1)/(categories + 2),0)
		button.Parent = droppedDownMenu
		if i &lt;= robloxMaxCat then
			button.Button.Text = &quot;Roblox Set: &quot; .. tostring(Data.BaseCategoryButtons[i].SetName.Value)
		else
			button.Button.Text =  tostring(Data.UserCategoryButtons[userCategory].SetName.Value)
		end


		button.Button.MouseButton1Click:connect(function()
			freeViewing = false
			titleFrame.Text = button.Button.Text
			parent.InsertTab.SearchFrame.Visible = false
			if i &lt;= robloxMaxCat then
				selectSet(button, button.Button.Text, Data.BaseCategoryButtons[i].SetId.Value, 0)
			else
				selectSet(button, button.Button.Text, Data.UserCategoryButtons[userCategory].SetId.Value, 0)
			end
			dropDownSelected = not dropDownSelected
			if not dropDownSelected then
				dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361347&quot;
			else
				dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36701740&quot;
			end
			droppedDownMenu.Visible = not droppedDownMenu.Visible
			droppedDownMenu.Active = not droppedDownMenu.Active
			highlight = true
		end)
		if i &gt; robloxMaxCat then masterCategory = masterCategory + 1 end
	end

	freeModels = buttonFrame:clone()
	freeModels.Position = UDim2.new(0.05,0,categories/(categories +2),0)
	freeModels.Button.Text = &quot;Free Models&quot;
	freeModels.Parent = droppedDownMenu
	freeModels.Button.MouseButton1Click:connect(function()
		freeViewing = true
		viewingModels = true
		freeIndex = 1
		titleFrame.Text = freeModels.Button.Text
		loadFreeSets(freeModels,&quot;Models&quot;,&quot;&quot;)
		parent.InsertTab.SearchFrame.Visible = true
		--dropDownMenu.Visible = not dropDownMenu.Visible
		dropDownSelected = not dropDownSelected
		if not dropDownSelected then
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361347&quot;
		else
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36701740&quot;
		end
		droppedDownMenu.Visible = not droppedDownMenu.Visible
		droppedDownMenu.Active = not droppedDownMenu.Active
		highlight = true
	end)

	freeDecals = buttonFrame:clone()
	freeDecals.Position = UDim2.new(0.05,0,(categories + 1)/(categories +2),0)
	freeDecals.Button.Text = &quot;Free Decals&quot;
	freeDecals.Parent = droppedDownMenu
	freeDecals.Button.MouseButton1Click:connect(function()
		freeViewing = true
		viewingModels = false
		freeIndex = 1
		titleFrame.Text = freeDecals.Button.Text
		loadFreeSets(freeDecals,&quot;Decals&quot;,&quot;&quot;)
		parent.InsertTab.SearchFrame.Visible = true
		--dropDownMenu.Visible = not dropDownMenu.Visible
		dropDownSelected = not dropDownSelected
		if not dropDownSelected then
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361347&quot;
		else
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36701740&quot;
		end

		droppedDownMenu.Visible = not droppedDownMenu.Visible
		droppedDownMenu.Active = not droppedDownMenu.Active
		highlight = true
	end)
	

	dropDownMenu.MouseButton1Click:connect(function()
		Window.Main.RolloverText.Text = &quot;&quot;
		--dropDownMenu.Visible = not dropDownMenu.Visible
		dropDownSelected = not dropDownSelected
		if not dropDownSelected then
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36361347&quot;
		else
			dropDownMenu.Image = &quot;http://www.roblox.com/asset/?id=36701740&quot;
		end

		droppedDownMenu.Visible = not droppedDownMenu.Visible
		droppedDownMenu.Active = not droppedDownMenu.Active
		highlight = false
	end)

	-- set first category as loaded for default
	local buttons = droppedDownMenu:GetChildren()
	selectSet(buttons[1], buttons[1].Button.Text, Data.BaseCategoryButtons[1].SetId.Value, 0)
	selectCategory(buttons[1], Data.BaseCategoryButtons)
	Window.Main.Title.Text = &quot;Roblox Set: &quot; ..  tostring(Data.BaseCategoryButtons[1].SetName.Value)

end

function buildMainGui(root, userId)
	Window.Main = {}
	Data.Main = {}
	Data.Category = {}
	
	local mainFrame = Instance.new(&quot;Frame&quot;)
	mainFrame.Name = &quot;InsertMainDialog&quot;
	mainFrame.Position = UDim2.new(0.0, 0, 0, 0)
	mainFrame.Size = UDim2.new(1, 0, 1, 0)
	mainFrame.Transparency = 1.0
	mainFrame.Active = true
	mainFrame.Parent = root
	Window.Main.Frame = mainFrame

	local insertTab = Instance.new(&quot;Frame&quot;)
	insertTab.Name = &quot;InsertTab&quot;
	insertTab.Position = UDim2.new(0, 0, 0.0, 0)
	insertTab.Size = UDim2.new(1, 0, 1.0, 0)
	insertTab.BackgroundTransparency = 1.0
	insertTab.Parent = mainFrame

	local closeButton = Instance.new(&quot;ImageButton&quot;)
	closeButton.Name = &quot;CloseButton&quot;
	closeButton.AutoButtonColor = false
	closeButton.Image = &quot;rbxasset://textures/ui/CloseButton.png&quot;
	closeButton.BackgroundTransparency = 1
	closeButton.Size = UDim2.new(0.18,0,0.07,0)
	closeButton.Position = UDim2.new(0.95,0,0.01,0)
	closeButton.ZIndex = 9
	closeButton.Parent = insertTab
	closeButton.MouseEnter:connect(function() closeButton.Image = &quot;rbxasset://textures/ui/CloseButton_dn.png&quot; end)
	closeButton.MouseLeave:connect(function() closeButton.Image = &quot;rbxasset://textures/ui/CloseButton.png&quot; end)

	local closedState = Instance.new(&quot;BoolValue&quot;)
	closedState.Name = &quot;ClosedState&quot;
	closedState.Value = false
	closedState.Parent = closeButton

	closeButton.MouseButton1Click:connect(function() closeButton.Image = &quot;rbxasset://textures/ui/CloseButton.png&quot; closedState.Value = true end)

	local searchFrame = Instance.new(&quot;Frame&quot;)
	searchFrame.Name = &quot;SearchFrame&quot;
	searchFrame.Size = UDim2.new(1,0,0.1,0)
	searchFrame.Position = UDim2.new(0.12,0,1.11,0)
	searchFrame.BackgroundTransparency = 1
	searchFrame.Visible = false
	searchFrame.Parent = insertTab
	
	local searchGraphicBox = Instance.new(&quot;ImageLabel&quot;)
	searchGraphicBox.Image = &quot;http://www.roblox.com/asset/?id=36337274&quot;
	searchGraphicBox.Name = &quot;SearchGraphicBox&quot;
	searchGraphicBox.BackgroundTransparency = 1
	searchGraphicBox.Size = UDim2.new(0.7,0,1,0)
	searchGraphicBox.Parent = searchFrame

	local searchBox = Instance.new(&quot;TextBox&quot;)
	searchBox.Name = &quot;SearchBox&quot;
	searchBox.Text = &quot;Enter Text Here&quot;
	searchBox.TextWrap = true
	searchBox.TextColor = BrickColor.White()
	searchBox.BackgroundTransparency = 1
	searchBox.Size = UDim2.new(1,0,1,0)
	searchBox.Parent = searchGraphicBox

	local searchButton = Instance.new(&quot;ImageButton&quot;)
	searchButton.Name = &quot;SearchButton&quot;
	searchButton.Image = &quot;http://www.roblox.com/asset/?id=37272267&quot;
	searchButton.BackgroundTransparency = 1
	searchButton.AutoButtonColor = false
	searchButton.Size = UDim2.new(0.4,0,1,0)
	searchButton.Position = UDim2.new(0.71,0,0)
	searchButton.Parent = searchFrame

	searchButton.MouseButton1Down:connect(function() 
		currentSearchText = searchBox.Text
		freeIndex = 1
		if viewingModels then
			loadFreeSets(freeModels,&quot;Models&quot;,searchBox.Text)
		else
			loadFreeSets(freeDecals,&quot;Decals&quot;,searchBox.Text)
		end
	end)

	
	Data.BaseCategoryButtons = processCategory(game:GetService(&quot;InsertService&quot;):GetBaseCategories(), setPanel)
	local userData = game:GetService(&quot;InsertService&quot;):GetUserCategories(userId)
	if userData then
		Data.UserCategoryButtons = processCategory(userData, setPanel)
	end

	local insertPanel = Instance.new(&quot;ImageLabel&quot;)
	insertPanel.Name = &quot;InsertPanel&quot;
	insertPanel.Image = &quot;http://www.roblox.com/asset/?id=36337274&quot;
	insertPanel.Position = UDim2.new(0.0, 0, 0.0, 0)
	insertPanel.Size = UDim2.new(1.2, 0, 1.1, 0)
	insertPanel.BackgroundTransparency = 1
	insertPanel.Parent = insertTab

	local insertButtons = {}
	for y = 1, InsertRows do
		for x = 1, InsertColumns do
			insertButtons[x  + (y - 1) * InsertColumns] = buildInsertButton(UDim2.new(.3*(x-1) + 0.05, 0, 0.11*(y-1) + 0.15, 0), UDim2.new(.32, -4, .12, -4))
			insertButtons[x  + (y - 1) * InsertColumns].Parent = insertPanel
		end
	end	

	Data.InsertButtons = insertButtons
	Data.Main.InsertRows = InsertRows
	Data.Main.InsertColumns = InsertColumns

	local footerPanel = Instance.new(&quot;Frame&quot;)
	footerPanel.Name = &quot;Footer&quot;
	footerPanel.Size = UDim2.new(1.0, 0, 0.06, 0)
	footerPanel.Position = UDim2.new(0.0, 0, 1.03, 0)
	footerPanel.BackgroundTransparency = 1
	footerPanel.BackgroundColor3 = frameColor
	footerPanel.Parent = insertTab
	
	local rolloverText = Instance.new(&quot;TextLabel&quot;)
	rolloverText.Name = &quot;RolloverText&quot;
	rolloverText.Size = UDim2.new(0.8, 0, 1.0, 0)
	rolloverText.Position = UDim2.new(0.2, 0, 0.0, 0)
	rolloverText.TextColor = BrickColor.White()
	rolloverText.BackgroundColor3 = frameColor
	rolloverText.BackgroundTransparency = 1
	rolloverText.Text = &quot;&quot;
	rolloverText.TextWrap = true
	rolloverTextXAlignment = 2
	rolloverText.Parent = footerPanel
	Window.Main.RolloverText = rolloverText

	local previousButton = Instance.new(&quot;ImageButton&quot;)
	previousButton.Image = &quot;http://www.roblox.com/asset/?id=36340011&quot;
	previousButton.Name = &quot;PreviousPageButton&quot;
	previousButton.Size = UDim2.new(0.1, 0, 1.0, 0)
	previousButton.Position = UDim2.new(0.1, 0, 0.0, 0)
	previousButton.BackgroundColor3 = buttonColor
	previousButton.AutoButtonColor = false
	previousButton.BackgroundTransparency = 1

	previousButton.MouseButton1Click:connect(previousSetPage)
	previousButton.Parent = footerPanel
	previousButton.Visible = false
	Window.Main.PreviousPageButton = previousButton

	local nextButton = Instance.new(&quot;ImageButton&quot;)
	nextButton.Image = &quot;http://www.roblox.com/asset/?id=36339978&quot;
	nextButton.Name = &quot;NextPageButton&quot;
	nextButton.Size = UDim2.new(0.1, 0, 1.0, 0)
	nextButton.Position = UDim2.new(1, 0, 0.0, 0)
	nextButton.AutoButtonColor = false
	nextButton.BackgroundTransparency = 1

	nextButton.MouseButton1Click:connect(nextSetPage)
	nextButton.Parent = footerPanel
	nextButton.Visible = false
	Window.Main.NextPageButton = nextButton

	createDropDownMenu(mainFrame, Window)

end

function layoutInsertButtons(guiMain)
	local size = guiMain.AbsoluteSize
	
	local frameSize = 0.75 * size
	local frameSizeUsed = Vector2.new(0, height*2)

	--We want 15% or 100 pixels, which ever is smaller
	if frameSize.x * .15 &lt; 100 then
		local oldSize = Window.Main.Frame.SetTab.Size
		Window.Main.Frame.SetTab.Size = UDim2.new(0.0, 100, oldSize.Y.Scale, oldSize.Y.Offset)
		Window.Main.Frame.InsertTab.Position = UDim2.new(0.0, 100, 0.0, 0)
		frameSizeUsed = Vector2.new(frameSizeUsed.x + 100, frameSizeUsed.y)
	else
		local oldSize = Window.Main.Frame.SetTab.Size
		Window.Main.Frame.SetTab.Size = UDim2.new(0.15, 0, oldSize.Y.Scale, oldSize.Y.Offset)
		Window.Main.Frame.InsertTab.Position = UDim2.new(0.15, 0, 0.0, 0)
		frameSizeUsed = Vector2.new(frameSizeUsed.x + .15*frameSize.x, frameSizeUsed.y)
	end

	--Decide how many buttons we can fit, and what size to make the insert buttons
	--2 sizes of insert buttons, 50x50 and 100x100

	local buttonSize = 110
	while buttonSize &gt; 70 and math.floor((frameSize - frameSizeUsed).x/buttonSize) * math.floor((frameSize - frameSizeUsed).y/buttonSize) &lt; 32 do
		buttonSize = buttonSize - 10
	end
	
	Data.Main.InsertColumns = math.min(math.max(1, math.floor((frameSize - frameSizeUsed).x/buttonSize)), InsertColumns)
	Data.Main.InsertRows = math.min(math.max(1, math.floor((frameSize - frameSizeUsed).y/buttonSize)), InsertRows)
	
	for index, button in pairs(Data.InsertButtons) do
		if index &lt;= Data.Main.InsertRows * Data.Main.InsertColumns then
			button.Visible = true
			button.Size = UDim2.new(0, buttonSize-4, 0, buttonSize-4)
			button.Position = UDim2.new(0, buttonSize * ((index-1)%Data.Main.InsertColumns) + 2 + 2,
								       0, buttonSize * math.floor((index-1)/Data.Main.InsertColumns) + 2 + 2)
		else
			button.Visible = false
		end
	end
	Window.Main.Frame.InsertTab.Size = UDim2.new(0.0, buttonSize * Data.Main.InsertColumns + 4, 0.0, buttonSize * Data.Main.InsertRows + height*2 + 4)

	if Data.Category[Data.CurrentCategory].Index == nil then
		setSetIndex(0)
	else
		setSetIndex(Data.Category[Data.CurrentCategory].Index)
	end
	
	local finalFrameHeight = frameSizeUsed.y + Data.Main.InsertRows*buttonSize + 4
	Window.Main.Frame.Size = UDim2.new(0, frameSizeUsed.x + Data.Main.InsertColumns*buttonSize + 4, 0, finalFrameHeight)
	Window.Main.Frame.Position = UDim2.new(0.0, 0, 1.0, -Window.Main.Frame.Size.Y.Offset)

	if Data.Category[Data.CurrentCategory].SetIndex == nil then
		layoutSetButtons(finalFrameHeight, 1)
	else
		layoutSetButtons(finalFrameHeight, Data.Category[Data.CurrentCategory].SetIndex)
	end
end

function layoutSetButtons(frameHeight, setIndex)
	Data.Main.FrameHeight = frameHeight
	Data.Main.InsertSets = math.floor(frameHeight / (height*2))
	if #Data.CurrentCategory &gt; Data.Main.InsertSets then
		--Steal one entry since we have two many things
		Data.Main.InsertSets = Data.Main.InsertSets - 1 
	end

	print(&quot;Layout Set Buttons index=&quot; .. setIndex .. &quot;, InsertSets=&quot;..Data.Main.InsertSets)
	
	setCategoryIndex(setIndex)
end


function insertComplete()
	Window.Loading.Frame.Visible = false
	Window.Stamp.Frame.Visible = false
	Window.Main.Frame.Visible = true
end

function UnlockInstances(object)
	if object:IsA(&quot;BasePart&quot;) then
		object.Locked = false
	end
	for index,child in pairs(object:GetChildren()) do
		UnlockInstances(child)
	end
end

function beginInsertDecal(decal)

	Data.Stamp.DecalSelection = Instance.new(&quot;SurfaceSelection&quot;)
	Data.Stamp.DecalSelection.Color = BrickColor.new(&quot;Bright orange&quot;)
	Data.Stamp.DecalSelection.archivable = false
	Data.Stamp.DecalSelection.Parent = getPlayer().PlayerGui
	
	--Save the decal in our Lua code for later use
	Data.Stamp.Decal = decal
	Data.Stamp.Decal.Parent = nil
end

function moveLoadingWindow()
	local speed = 0.005
	while Window.Loading.Frame.Visible do
		while Window.Loading.Frame.Visible and Window.Loading.Frame.Position.Y.Scale &lt; (1 - Window.Loading.Frame.Size.Y.Scale) do
			Window.Loading.Frame.Position = UDim2.new(Window.Loading.Frame.Position.X.Scale,Window.Loading.Frame.Position.X.Offset,Window.Loading.Frame.Position.Y.Scale + speed,Window.Loading.Frame.Position.Y.Offset)
			wait()
		end
		while Window.Loading.Frame.Visible and Window.Loading.Frame.Position.Y.Scale &gt; 0 do
			Window.Loading.Frame.Position = UDim2.new(Window.Loading.Frame.Position.X.Scale,Window.Loading.Frame.Position.X.Offset,Window.Loading.Frame.Position.Y.Scale - speed,Window.Loading.Frame.Position.Y.Offset)
			wait()
		end
	end
end

function resetLoadingWindow()
	Window.Loading.Frame.Visible = false
	Window.Loading.Frame.Position = UDim2.new(0,0,0,0)
end

function beginInsertAsset(assetName, assetId, image, stampMode)
	--Copy over details into dialog window
	Window.Loading.AssetThumbLabel.Image = image
	Window.Loading.AssetNameLabel.Text = assetName
	
	Window.Stamp.AssetThumbLabel.Image = image
	Window.Stamp.AssetNameLabel.Text = assetName
	Data.Stamp.StampMode = stampMode

	--Hide the main window
	Window.Main.Frame.Visible = false
	--Show the dialog window
	local mover = coroutine.create(moveLoadingWindow)
	Window.Loading.Frame.Visible = true
	coroutine.resume(mover)
	Data.Loading.Cancelled = false

	--This call will cause a &quot;wait&quot; until the data comes back
	local id = math.random(5,500)
	print(&quot;loading id = &quot; .. tostring(id))
	local root
	local loader
	loading = true
	if useAssetVersionId then
		loader = coroutine.create(function()	
			root = game:GetService(&quot;InsertService&quot;):LoadAssetVersion(assetId)
			loading = false
		end)
		coroutine.resume(loader)
		--root = game:GetService(&quot;InsertService&quot;):LoadAssetVersion(assetId)
	else
		loader = coroutine.create(function()	
			root = game:GetService(&quot;InsertService&quot;):LoadAsset(assetId)
			loading = false
		end)
		coroutine.resume(loader)
		--root = game:GetService(&quot;InsertService&quot;):LoadAsset(assetId)
	end
	local count = 0
	while loading and count &lt; 5 do
		count = count + 1
		wait(1)
	end
	loading = false

	if count &gt;= 5 then
		print(&quot;failed loading id = &quot; .. tostring(id))
	else
		print(&quot;finished loading id = &quot; .. tostring(id))
	end

	if Data.Loading.Cancelled or count &gt;=5 then
		--The user got bored and wandered off

		--Just delete the model from the world... a shame we loaded it when they got bored
		if root then
			root:Remove()
		end
		Window.Loading.Frame.Visible = false
		Window.Main.Frame.Visible = true
		return

	else		
		local instances = root:GetChildren()
		if #instances == 0 then
			root:Remove()
			insertComplete()
			return
		end

		--Unlock all parts that are inserted, to make sure they are editable
		UnlockInstances(root)

		--Continue the insert process
		root.Name = &quot;InsertedObject&quot; .. assetId

		--Examine the contents and decide what it looks like
		for pos, instance in pairs(instances) do
			--Single instance objects might be treated special, decals/skyboxes
			if instance:IsA(&quot;Decal&quot;) then
				--Current system here stops after finding one Decal (and gives you Decal tool)
				--We should do the same (probably)
				beginInsertDecal(instance)
				root:Remove()
				
				Window.Stamp.Frame.Visible = true
				Window.Loading.Frame.Visible = false
				return
			elseif instance:IsA(&quot;Team&quot;) then
				instance.Parent = game:GetService(&quot;Teams&quot;)
			elseif instance:IsA(&quot;SpawnLocation&quot;) then
				
			elseif instance:IsA(&quot;HopperBin&quot;) then
				-- Must go into the starterPack, prompt user?
			elseif instance:IsA(&quot;Tool&quot;) then
				-- Ask them if it should go in StarterPack? 
			elseif instance:IsA(&quot;Sky&quot;) then
				local lightingService = game:GetService(&quot;Lighting&quot;)
				for index,child in pairs(lightingService:GetChildren()) do
					if child:IsA(&quot;Sky&quot;) then
						child:Remove();
					end
				end
				instance.Parent = lightingService
				return
			else
				
			end
		end

		if #root:GetChildren() == 0 then
			root:Remove()
			insertComplete()
			return
		end

		resetLoadingWindow()
		print(&quot;done loading?&quot;)

		Window.Stamp.Frame.Visible = true
		Data.Stamp.Model = root
	end
end

function cancelAssetLoad()
	Data.Loading.Cancelled = true
	insertComplete()
end

function buildLoadingDialogGui(root)
	Window.Loading = {}
	Data.Loading = {}

	local dialogFrame = Instance.new(&quot;ImageLabel&quot;)
	dialogFrame.Image = &quot;http://www.roblox.com/asset/?id=36269485&quot;
	dialogFrame.Name = &quot;InsertLoadingDialog&quot;
	dialogFrame.Size = UDim2.new(1.6, 0, 0.3, 0)
	dialogFrame.Position = UDim2.new(0.0, 0, 0, 0)
	dialogFrame.BackgroundTransparency = 1
	dialogFrame.Active = true
	dialogFrame.Parent = root
	dialogFrame.Visible = false
	Window.Loading.Frame = dialogFrame

	local assetBacking = Instance.new(&quot;ImageLabel&quot;)
	assetBacking.Image = &quot;http://www.roblox.com/asset/?id=36426105&quot;
	assetBacking.BackgroundTransparency = 1
	assetBacking.ZIndex = 1
	assetBacking.Size = UDim2.new(1,0,1,0)

	local assetThumb = Instance.new(&quot;ImageLabel&quot;)
	assetThumb.Position = UDim2.new(0.0, 2, 0.0, 2)
	assetThumb.Size = UDim2.new(0.5, -4, 1.0, -4)
	assetThumb.Parent = dialogFrame
	assetThumb.BackgroundTransparency = 1
	assetThumb.ZIndex = 2
	Window.Loading.AssetThumbLabel = assetThumb
	assetBacking.Parent = assetThumb

	local descriptionFrame = Instance.new(&quot;Frame&quot;)
	descriptionFrame.Name = &quot;Description&quot;
	descriptionFrame.Size = UDim2.new(0.5, 0, 1.0, 0)
	descriptionFrame.Position = UDim2.new(0.5, 0, 0.0, 0)
	descriptionFrame.Transparency = 1
	descriptionFrame.Parent = dialogFrame

	local label = Instance.new(&quot;TextLabel&quot;)
	label.Text = &quot;Loading...&quot;
	label.FontSize = 2
	label.Position = UDim2.new(0.5, 0, 0, 0);
	label.Size = UDim2.new(0.0, 0, 0.0, height)
	label.BorderSizePixel = 0
	label.TextColor3 = frameTextColor
	label.Parent = descriptionFrame
	
	local assetLabel = Instance.new(&quot;TextLabel&quot;)
	assetLabel.Text = &quot;Your Asset Here&quot;
	assetLabel.Position = UDim2.new(0.0, 0, 0.0, height)
	assetLabel.Size = UDim2.new(1.0, 0, 1.0, -2*height)
	assetLabel.BorderSizePixel = 0
	assetLabel.BackgroundTransparency = 1.0
	assetLabel.Parent = descriptionFrame
	assetLabel.TextColor3 = frameTextColor
	assetLabel.TextWrap = true
	Window.Loading.AssetNameLabel = assetLabel	

	local cancelButton = Instance.new(&quot;TextButton&quot;)
	cancelButton.Name = &quot;PreviousPageButton&quot;
	cancelButton.Size = UDim2.new(1, 0, 0.180000007, 0)
	cancelButton.Position = UDim2.new(-0.0500000007, 0, 0.699999988, 0)
	cancelButton.BackgroundColor3 = Color3.new(1,0.2,0.2)
	cancelButton.TextColor = BrickColor.White()
	cancelButton.Text = &quot;Cancel&quot;
	cancelButton.MouseButton1Click:connect(cancelAssetLoad)
	cancelButton.Parent = descriptionFrame

end



function cancelAssetPlacement()
	Data.Stamp.Cancelled = true
	Data.Stamp.Dragger = nil
	if Data.Stamp.Model then
		Data.Stamp.Model:Remove()
		Data.Stamp.Model = nil
	end
	if Data.Stamp.CurrentParts then
		for index, object in pairs(Data.Stamp.CurrentParts) do
			object:Remove()
		end
		Data.Stamp.CurrentParts = nil
	end

	if Data.Stamp.DecalSelection then
		Data.Stamp.DecalSelection:Remove()
		Data.Stamp.DecalSelection = nil
	end
	if Data.Stamp.Decal then
		Data.Stamp.Decal:Remove()
		Data.Stamp.Decal = nil
	end

	if Mouse then
		Mouse.Icon =&quot;rbxasset://textures\\ArrowCursor.png&quot;
	end	
	insertComplete()
end

function onInsertKeyDown(key)
	if Data.Stamp.Dragger then
		if key == &apos;R&apos; or key == &apos;r&apos;  then
			Data.Stamp.Dragger:AxisRotate(Enum.Axis.Y)
		elseif key == &apos;T&apos; or key == &apos;t&apos; then
			Data.Stamp.Dragger:AxisRotate(Enum.Axis.Z)
		end
	end
end


function canSelectObject(part)
	return part and not (part.Locked) and part:IsA(&quot;BasePart&quot;) and (part.Position - Tool.Parent.Head.Position).Magnitude &lt; 60
end

function setSelectionSurface(part, surface) 
	if Data.Stamp.DecalSelection.Adornee == part and Data.Stamp.DecalSelection.TargetSurface == surface then
		return
	end
	unsetSelectionSurface()
	Data.Stamp.DecalSelection.Adornee = part
	Data.Stamp.DecalSelection.TargetSurface = surface

	local decalFound = false
	for index,child in pairs(part:GetChildren()) do
		if child:IsA(&quot;Decal&quot;) and child.Face == surface then
			decalFound = true
			break
		end
	end

	if not(decalFound) then
		Data.Stamp.Decal.Parent = part
		Data.Stamp.Decal.Face = surface
	end
end

function unsetSelectionSurface() 
	Data.Stamp.DecalSelection.Adornee = nil
	Data.Stamp.Decal.Parent = nil
end

function onInsertMouseMove() 
	if Data.Stamp.MovingLock then
		return
	end

	local newCursor = &quot;rbxasset://textures\\ArrowCursor.png&quot;
	Data.Stamp.MovingLock = true
	if Data.Stamp.Decal then
		local part = Mouse.Target
		if canSelectObject(part) then
			setSelectionSurface(part, Mouse.TargetSurface)
		else
			unsetSelectionSurface()
			newCursor = BaseUrl .. &quot;asset?id=20715642&quot;
		end
	elseif Data.Stamp.Dragger == nil then
		if Data.Stamp.Model ~= nil then
			Mouse.Icon =&quot;rbxasset://textures//GrabRotateCursor.png&quot;
			setupDraggableClone()
		end
	else
		Data.Stamp.Dragger:MouseMove(Mouse.UnitRay)
	end
	Mouse.Icon = newCursor

	Data.Stamp.MovingLock = false
end

function onInsertMouseButton1Down()
	if Data.Stamp.Dragger or Data.Stamp.Decal then
		Data.Stamp.MouseDown = true
	end
end

function onInsertMouseButton1Up()
	if Data.Stamp.MouseDown then
		Data.Stamp.MouseDown = false
		if Data.Stamp.Decal then
			local part = Mouse.Target
			if canSelectObject(part) and Instance.Lock(part) then
				local surface = Mouse.TargetSurface 
				for index,child in pairs(part:GetChildren()) do
					if child:IsA(&quot;Decal&quot;) and child.Face == surface then
						child:Remove()
					end
				end

				local newDecal  = Data.Stamp.Decal:Clone()
				newDecal.Face = surface
				newDecal.Parent = part
					Instance.Unlock(part)
				
				if Data.Stamp.StampMode then
				else 
					Instance.Unlock(part)
					cancelAssetPlacement()
				end
			end
		elseif Data.Stamp.Dragger then
			--Place the object where the mouse is currently positioned
			Data.Stamp.Dragger:MouseUp()
		
			--Fix the transparency of all the parts
			for part, transparency in pairs(Data.Stamp.TransparencyTable) do
				part.Transparency = transparency
			end
			Data.Stamp.TransparencyTable = nil

			--Re-enable the scripts
			for index,script in pairs(Data.Stamp.DisabledScripts) do
				script.Disabled = false
			end
			--Now that they are all marked enabled, reinsert them into the world so they start running
			for index,script in pairs(Data.Stamp.DisabledScripts) do
				local oldParent = script.Parent
				script.Parent = nil
				script:Clone().Parent = oldParent
			end
			Data.Stamp.DisabledScripts = nil

			Data.Stamp.Dragger = nil
			Data.Stamp.CurrentParts = nil
			
			if Data.Stamp.StampMode then
				--Now set up a new instance of the object to allow a second copy to be stamped down
				setupDraggableClone()
			else
				cancelAssetPlacement()
			end
		end
	end
end

function setupDraggableClone()
	local clone = Data.Stamp.Model:Clone()
	local scripts = {}
	local parts = {}

	collectParts(clone, parts, scripts)

	if #parts &gt; 0 then
		Data.Stamp.DisabledScripts = {}
		Data.Stamp.TransparencyTable = {}

		for index,script in pairs(scripts) do
			if not(script.Disabled) then
				script.Disabled = true
				Data.Stamp.DisabledScripts[#Data.Stamp.DisabledScripts +1] = script
			end
		end
		for index, part in pairs(parts) do
			Data.Stamp.TransparencyTable[part] = part.Transparency
			part.Transparency = 0.5
		end

		game:GetService(&quot;InsertService&quot;):Insert(clone)
		
		Data.Stamp.CurrentParts = clone:GetChildren();
		for index, object in pairs(Data.Stamp.CurrentParts) do
			object.Parent = clone.Parent
		end
		clone:Remove();
		
		Data.Stamp.Dragger = Instance.new(&quot;Dragger&quot;)
		--Begin a movement by faking a MouseDown signal
		Data.Stamp.Dragger:MouseDown(parts[1], Vector3.new(0,0,0), parts)
		Data.Stamp.Dragger:MouseMove(Mouse.UnitRay)
	else
		--Nothing draggable in the Model
		Data.Stamp.Model:Remove()
		Data.Stamp.Model = nil
		Data.Stamp.TransparencyTable = nil
		Data.Stamp.DisabledScripts = nil
	end
end

function collectParts(object, baseParts, scripts)
	if object:IsA(&quot;BasePart&quot;) then
		baseParts[#baseParts+1] = object
	elseif object:IsA(&quot;Script&quot;) then
		scripts[#scripts+1] = object
	end

	for index,child in pairs(object:GetChildren()) do
		collectParts(child, baseParts, scripts)
	end
end

function buildStampDialogGui(root)

	Window.Stamp = {}
	Data.Stamp = {}

	local dialogFrame = Instance.new(&quot;ImageLabel&quot;)
	dialogFrame.Image = &quot;http://www.roblox.com/asset/?id=36269485&quot;
	dialogFrame.Name = &quot;InsertStampDialog&quot;
	dialogFrame.Size = UDim2.new(1.6, 0, 0.3, 0)
	dialogFrame.Position = UDim2.new(0.0, 0, 0.7, 0)
	dialogFrame.BackgroundTransparency = 1
	dialogFrame.Active = true
	dialogFrame.Parent = root
	dialogFrame.Visible = false
	Window.Stamp.Frame = dialogFrame

	local assetBacking = Instance.new(&quot;ImageLabel&quot;)
	assetBacking.Image = &quot;http://www.roblox.com/asset/?id=36426105&quot;
	assetBacking.BackgroundTransparency = 1
	assetBacking.ZIndex = 1
	assetBacking.Size = UDim2.new(1,0,1,0)

	local assetThumb = Instance.new(&quot;ImageLabel&quot;)
	assetThumb.Position = UDim2.new(0.0, 2, 0.0, 2)
	assetThumb.Size = UDim2.new(0.5, -4, 1.0, -4)
	assetThumb.Parent = dialogFrame
	assetThumb.BackgroundTransparency = 1
	assetThumb.ZIndex = 2
	Window.Stamp.AssetThumbLabel = assetThumb

	assetBacking.Parent = assetThumb

	local descriptionFrame = Instance.new(&quot;Frame&quot;)
	descriptionFrame.Name = &quot;Description&quot;
	descriptionFrame.Size = UDim2.new(0.5, 0, 1.0, 0)
	descriptionFrame.Position = UDim2.new(0.5, 0, 0.0, 0)
	descriptionFrame.Transparency = 1
	descriptionFrame.Parent = dialogFrame

	local assetLabel = Instance.new(&quot;TextLabel&quot;)
	assetLabel.Text = &quot;Your Asset Here&quot;
	assetLabel.Position = UDim2.new(-0.05, 0, 0.25, 0)
	assetLabel.Size = UDim2.new(1.0, 0, 0.4, 0)
	assetLabel.BorderSizePixel = 0
	assetLabel.BackgroundTransparency = 1.0
	assetLabel.Parent = descriptionFrame
	assetLabel.TextColor3 = frameTextColor
	assetLabel.TextWrap = true
	Window.Stamp.AssetNameLabel = assetLabel

	local readyFrame = Instance.new(&quot;Frame&quot;)
	readyFrame.Name = &quot;ReadyDialogue&quot;
	readyFrame.Size = UDim2.new(0.47, 0, 0.2, 0)
	readyFrame.Position = UDim2.new(0.5, 0, 0.05, 0)
	readyFrame.Transparency = 1
	readyFrame.Parent = dialogFrame

	local label = Instance.new(&quot;TextLabel&quot;)
	label.Text = &quot;Ready to Place&quot;
	label.FontSize = 2
	label.TextWrap = true
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.TextColor = BrickColor.White()
	label.Parent = readyFrame

	local cancelButton = Instance.new(&quot;TextButton&quot;)
	cancelButton.Name = &quot;CancelButton&quot;
	cancelButton.Size = UDim2.new(1, 0, 0.180000007, 0)
	cancelButton.Position = UDim2.new(-0.0500000007, 0, 0.699999988, 0)
	cancelButton.BackgroundColor3 = Color3.new(1,0.1,0.1)
	cancelButton.TextColor = BrickColor.White()
	cancelButton.TextWrap = true
	cancelButton.Text = &quot;Back to Toolbox&quot;
	cancelButton.MouseButton1Click:connect(cancelAssetPlacement)
	cancelButton.Parent = descriptionFrame

	Data.Stamp.MovingLock = false	
end

function buildInitialLoadScreen(root)
	local dialogFrame = Instance.new(&quot;Frame&quot;)
	dialogFrame.Name = &quot;InsertLoadingScreen&quot;
	dialogFrame.Size = UDim2.new(0.0, height*10, 0, height*5)
	dialogFrame.Position = UDim2.new(0.5, -height*5, 0.5, -height*2.5)
	dialogFrame.BackgroundColor3 = frameColor
	dialogFrame.Active = true
	dialogFrame.Visible = true
	dialogFrame.Parent = root

	local label = Instance.new(&quot;TextLabel&quot;)
	label.Text = &quot;Loading&quot;
	label.Position = UDim2.new(0.0, 0, 0, 0)
	label.Size = UDim2.new(1.0, 0, 0.0, height)
	label.BorderSizePixel = 1
	label.TextColor3 = titleTextColor
	label.BackgroundColor3 = titleColor
	label.Parent = dialogFrame
	
	local assetLabel = Instance.new(&quot;TextLabel&quot;)
	assetLabel.Text = &quot;Please Wait&quot;
	assetLabel.Position = UDim2.new(0.0, 0, 0.0, height)
	assetLabel.Size = UDim2.new(1.0, 0, 1.0, -2*height)
	assetLabel.BorderSizePixel = 1
	assetLabel.BackgroundTransparency = 1.0
	assetLabel.TextColor3 = frameTextColor
	assetLabel.TextWrap = true
	assetLabel.Parent = dialogFrame
end

function buildMinimizedGui(root)
	Window.Minimized = {}
	Data.Minimized = {}
	local minimizeButton = Instance.new(&quot;TextButton&quot;)
	minimizeButton.Name = &quot;MinimizeButton&quot;
	minimizeButton.Size = UDim2.new(0, height*4.5, 0, height)
	minimizeButton.Position = UDim2.new(0.0, 0, 1.0, -height)
	minimizeButton.BackgroundColor3 = buttonColor
	minimizeButton.TextColor3 = buttonTextColor
	minimizeButton.Text = &quot;Toolbox&quot;
	minimizeButton.MouseButton1Click:connect(function() Window.Minimized.Frame.Visible = false Window.Main.Frame.Visible = true end)
	minimizeButton.Visible = false
	minimizeButton.Parent = root

	Window.Minimized.Frame = minimizeButton
end


local CancelDuringLoad
local LoadScreen 
function onEquippedLocal(mouse)
	Tool.TextureId = &quot;rbxasset://icons/insert_sel.png&quot;

	Mouse = mouse
	if Tool.SavedState.Value and Tool.PlayerOwner.Value == getPlayer() and Data and Data.FullyLoaded then
		guiMain = Tool.SavedState.Value
		guiMain.Parent = script.Parent.SelectedButton.Value

		Window.Stamp.Frame.Visible = false
		Window.Loading.Frame.Visible = false
		Window.Main.Frame.Visible = true

	else
		CancelDuringLoad = false

		guiMain = Instance.new(&quot;Frame&quot;)
		guiMain.Size = UDim2.new(1.5,0,1,0)
		guiMain.Position = UDim2.new(1.01,0,-0.1,0)
		guiMain.BackgroundTransparency = 1
		guiMain.Name = &quot;InsertToolboxMain&quot;

		if script.Parent:FindFirstChild(&quot;SelectedButton&quot;) then
			guiMain.Parent =  script.Parent.SelectedButton.Value
		else
			guiMain.Parent = game.Players:GetPlayerFromCharacter(Tool.Parent).PlayerGui.GameGui.BuildTools.Frame
		end

		Window = {}
		Data = {}
		Data.FullyLoaded = false

		buildMainGui(guiMain, getPlayer().userId)
		buildLoadingDialogGui(guiMain)
		buildStampDialogGui(guiMain)

		if not(CancelDuringLoad) then
			if script.Parent:FindFirstChild(&quot;SelectedButton&quot;) == nil then
				guiMain.Parent = getPlayer().PlayerGui.GameGui.BuildTools.Frame
			else
				guiMain.Parent =  script.Parent.SelectedButton.Value
			end

			Tool.SavedState.Value = guiMain
			Tool.PlayerOwner.Value = getPlayer()
		end

		Data.FullyLoaded = true
	end

	Mouse.Move:connect(onInsertMouseMove)
	Mouse.Button1Down:connect(onInsertMouseButton1Down)
	Mouse.Button1Up:connect(onInsertMouseButton1Up)
	Mouse.KeyDown:connect(onInsertKeyDown)

end

function onUnequippedLocal()
	Mouse:remove()

	Tool.TextureId = origTexture

	guiMain.Parent = nil

	pcall(function()
		cancelAssetPlacement()
		cancelAssetLoad()
		guiMain.Parent = nil
		end)
	
	CancelDuringLoad = true

	if LoadScreen then
		LoadScreen:Remove()
	end
end

function onAncestryChanged(child,parent)

	if Tool.PlayerOwner.Value and not Tool:IsDescendantOf(Tool.PlayerOwner.Value) and not Tool:IsDescendantOf(Tool.PlayerOwner.Value.Character) then
		--Tool was dropped in some way, so we need to nuke our external state
		Tool.SavedState.Value = nil
		Tool.PlayerOwner.Value = nil
	end
	
	pcall(cancelAssetPlacement)
	pcall(cancelAssetLoad)
end


Tool.Equipped:connect(onEquippedLocal)
Tool.Unequipped:connect(onUnequippedLocal)
Tool.AncestryChanged:connect(onAncestryChanged)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="ObjectValue" referent="RBX2">
			<Properties>
				<string name="Name">SavedState</string>
				<Ref name="Value">null</Ref>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX3">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>-40.4000015</X>
					<Y>5.79886055</Y>
					<Z>123.099998</Z>
					<R00>4.77858968e-022</R00>
					<R01>0.999999881</R01>
					<R02>-1.41183625e-021</R02>
					<R10>-0.000796274282</R10>
					<R11>1.41221612e-021</R11>
					<R12>0.999999642</R12>
					<R20>0.999999642</R20>
					<R21>-4.7673457e-022</R21>
					<R22>0.000796274282</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">2</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>0.800000012</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX4">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=18715644</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.899999976</X>
						<Y>0.899999976</Y>
						<Z>0.899999976</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=18715636</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX7">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX8">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX10">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX11">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<float name="Pitch">1</float>
					<int name="PlayCount">-1</int>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=18716629</url></Content>
					<float name="Volume">0.5</float>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX12">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SwordScript</string>
				<ProtectedString name="Source">-------- OMG HAX

r = game:service(&quot;RunService&quot;)


local damage = 0


local slash_damage = 0


sword = script.Parent.Handle
Tool = script.Parent

local SlashSound = Instance.new(&quot;Sound&quot;)
SlashSound.SoundId = &quot;http://www.roblox.com/asset/?id=18716629&quot;
SlashSound.Parent = sword


function blow(hit)
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	local vCharacter = Tool.Parent
	local vPlayer = game.Players:playerFromCharacter(vCharacter)
	local hum = vCharacter:findFirstChild(&quot;Humanoid&quot;) -- non-nil if tool held by a character
	if humanoid~=nil and humanoid ~= hum and hum ~= nil then
		-- final check, make sure sword is in-hand

		local right_arm = vCharacter:FindFirstChild(&quot;Right Arm&quot;)
		if (right_arm ~= nil) then
			local joint = right_arm:FindFirstChild(&quot;RightGrip&quot;)
			if (joint ~= nil and (joint.Part0 == sword or joint.Part1 == sword)) then
				tagHumanoid(humanoid, vPlayer)
				humanoid:TakeDamage(damage)
				wait(1)
				untagHumanoid(humanoid)
			end
		end


	end
end


function tagHumanoid(humanoid, player)
	local creator_tag = Instance.new(&quot;ObjectValue&quot;)
	creator_tag.Value = player
	creator_tag.Name = &quot;creator&quot;
	creator_tag.Parent = humanoid
end

function untagHumanoid(humanoid)
	if humanoid ~= nil then
		local tag = humanoid:findFirstChild(&quot;creator&quot;)
		if tag ~= nil then
			tag.Parent = nil
		end
	end
end


function attack()
	damage = slash_damage
	SlashSound:play()
	local anim = Instance.new(&quot;StringValue&quot;)
	anim.Name = &quot;toolanim&quot;
	anim.Value = &quot;Slash&quot;
	anim.Parent = Tool
end


function swordUp()
	Tool.GripForward = Vector3.new(-1,0,0)
	Tool.GripRight = Vector3.new(0,1,0)
	Tool.GripUp = Vector3.new(0,0,1)
end

function swordOut()
	Tool.GripForward = Vector3.new(0,0,1)
	Tool.GripRight = Vector3.new(0,-1,0)
	Tool.GripUp = Vector3.new(-1,0,0)
end



Tool.Enabled = true

function onActivated()

	if not Tool.Enabled then
		return
	end

	Tool.Enabled = false

	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	

	attack()

	wait(1)

	Tool.Enabled = true
end


function onEquipped()
end


script.Parent.Activated:connect(onActivated)
script.Parent.Equipped:connect(onEquipped)


</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="ObjectValue" referent="RBX13">
			<Properties>
				<string name="Name">PlayerOwner</string>
				<Ref name="Value">null</Ref>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="BoolValue" referent="RBX14">
			<Properties>
				<string name="Name">RobloxBuildTool</string>
				<bool name="Value">true</bool>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="ObjectValue" referent="RBX15">
			<Properties>
				<string name="Name">SelectedButton</string>
				<Ref name="Value">RBX16</Ref>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>